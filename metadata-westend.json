{
  "magicNumber": 1635018093,
  "metadata": {
    "v14": {
      "lookup": {
        "types": [
          {
            "id": 0,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "AccountId32"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 1,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 32,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 2,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "U8"
              },
              "docs": []
            }
          },
          {
            "id": 3,
            "type": {
              "path": [
                "frame_system",
                "AccountInfo"
              ],
              "params": [
                {
                  "name": "Nonce",
                  "type": 4
                },
                {
                  "name": "AccountData",
                  "type": 5
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "nonce",
                      "type": 4,
                      "typeName": "Nonce",
                      "docs": []
                    },
                    {
                      "name": "consumers",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": []
                    },
                    {
                      "name": "providers",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": []
                    },
                    {
                      "name": "sufficients",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "type": 5,
                      "typeName": "AccountData",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 4,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "U32"
              },
              "docs": []
            }
          },
          {
            "id": 5,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "AccountData"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "free",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "reserved",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "frozen",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "flags",
                      "type": 7,
                      "typeName": "ExtraFlags",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 6,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "U128"
              },
              "docs": []
            }
          },
          {
            "id": 7,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ExtraFlags"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 6,
                      "typeName": "u128",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 8,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 9,
                      "typeName": "T",
                      "docs": []
                    },
                    {
                      "name": "operational",
                      "type": 9,
                      "typeName": "T",
                      "docs": []
                    },
                    {
                      "name": "mandatory",
                      "type": 9,
                      "typeName": "T",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 9,
            "type": {
              "path": [
                "sp_weights",
                "weight_v2",
                "Weight"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ref_time",
                      "type": 10,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "proof_size",
                      "type": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 10,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 11
                }
              },
              "docs": []
            }
          },
          {
            "id": 11,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "U64"
              },
              "docs": []
            }
          },
          {
            "id": 12,
            "type": {
              "path": [
                "primitive_types",
                "H256"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 13,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 14,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "Digest"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "logs",
                      "type": 15,
                      "typeName": "Vec<DigestItem>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 15,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 16
                }
              },
              "docs": []
            }
          },
          {
            "id": 16,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "DigestItem"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PreRuntime",
                      "fields": [
                        {
                          "name": null,
                          "type": 17,
                          "typeName": "ConsensusEngineId",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Consensus",
                      "fields": [
                        {
                          "name": null,
                          "type": 17,
                          "typeName": "ConsensusEngineId",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Seal",
                      "fields": [
                        {
                          "name": null,
                          "type": 17,
                          "typeName": "ConsensusEngineId",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "RuntimeEnvironmentUpdated",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 17,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 4,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 18,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 19
                }
              },
              "docs": []
            }
          },
          {
            "id": 19,
            "type": {
              "path": [
                "frame_system",
                "EventRecord"
              ],
              "params": [
                {
                  "name": "E",
                  "type": 20
                },
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "phase",
                      "type": 460,
                      "typeName": "Phase",
                      "docs": []
                    },
                    {
                      "name": "event",
                      "type": 20,
                      "typeName": "E",
                      "docs": []
                    },
                    {
                      "name": "topics",
                      "type": 206,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 20,
            "type": {
              "path": [
                "westend_runtime",
                "RuntimeEvent"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "name": null,
                          "type": 21,
                          "typeName": "frame_system::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Indices",
                      "fields": [
                        {
                          "name": null,
                          "type": 30,
                          "typeName": "pallet_indices::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "name": null,
                          "type": 31,
                          "typeName": "pallet_balances::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "TransactionPayment",
                      "fields": [
                        {
                          "name": null,
                          "type": 33,
                          "typeName": "pallet_transaction_payment::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": []
                    },
                    {
                      "name": "Staking",
                      "fields": [
                        {
                          "name": null,
                          "type": 34,
                          "typeName": "pallet_staking::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Offences",
                      "fields": [
                        {
                          "name": null,
                          "type": 41,
                          "typeName": "pallet_offences::Event",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "name": null,
                          "type": 43,
                          "typeName": "pallet_session::Event",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "Grandpa",
                      "fields": [
                        {
                          "name": null,
                          "type": 44,
                          "typeName": "pallet_grandpa::Event",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "name": null,
                          "type": 49,
                          "typeName": "pallet_utility::Event",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "Identity",
                      "fields": [
                        {
                          "name": null,
                          "type": 52,
                          "typeName": "pallet_identity::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "Recovery",
                      "fields": [
                        {
                          "name": null,
                          "type": 53,
                          "typeName": "pallet_recovery::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "Vesting",
                      "fields": [
                        {
                          "name": null,
                          "type": 54,
                          "typeName": "pallet_vesting::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "Scheduler",
                      "fields": [
                        {
                          "name": null,
                          "type": 55,
                          "typeName": "pallet_scheduler::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "Preimage",
                      "fields": [
                        {
                          "name": null,
                          "type": 58,
                          "typeName": "pallet_preimage::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": []
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "name": null,
                          "type": 59,
                          "typeName": "pallet_sudo::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "name": null,
                          "type": 61,
                          "typeName": "pallet_proxy::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "name": null,
                          "type": 64,
                          "typeName": "pallet_multisig::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "ElectionProviderMultiPhase",
                      "fields": [
                        {
                          "name": null,
                          "type": 66,
                          "typeName": "pallet_election_provider_multi_phase::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": []
                    },
                    {
                      "name": "VoterList",
                      "fields": [
                        {
                          "name": null,
                          "type": 71,
                          "typeName": "pallet_bags_list::Event<Runtime, pallet_bags_list::Instance1>",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": []
                    },
                    {
                      "name": "NominationPools",
                      "fields": [
                        {
                          "name": null,
                          "type": 72,
                          "typeName": "pallet_nomination_pools::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": []
                    },
                    {
                      "name": "FastUnstake",
                      "fields": [
                        {
                          "name": null,
                          "type": 79,
                          "typeName": "pallet_fast_unstake::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": []
                    },
                    {
                      "name": "ConvictionVoting",
                      "fields": [
                        {
                          "name": null,
                          "type": 81,
                          "typeName": "pallet_conviction_voting::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": []
                    },
                    {
                      "name": "Referenda",
                      "fields": [
                        {
                          "name": null,
                          "type": 82,
                          "typeName": "pallet_referenda::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 32,
                      "docs": []
                    },
                    {
                      "name": "Whitelist",
                      "fields": [
                        {
                          "name": null,
                          "type": 433,
                          "typeName": "pallet_whitelist::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 36,
                      "docs": []
                    },
                    {
                      "name": "Treasury",
                      "fields": [
                        {
                          "name": null,
                          "type": 438,
                          "typeName": "pallet_treasury::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 37,
                      "docs": []
                    },
                    {
                      "name": "ParaInclusion",
                      "fields": [
                        {
                          "name": null,
                          "type": 439,
                          "typeName": "parachains_inclusion::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 44,
                      "docs": []
                    },
                    {
                      "name": "Paras",
                      "fields": [
                        {
                          "name": null,
                          "type": 443,
                          "typeName": "parachains_paras::Event",
                          "docs": []
                        }
                      ],
                      "index": 47,
                      "docs": []
                    },
                    {
                      "name": "Hrmp",
                      "fields": [
                        {
                          "name": null,
                          "type": 444,
                          "typeName": "parachains_hrmp::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 51,
                      "docs": []
                    },
                    {
                      "name": "ParasDisputes",
                      "fields": [
                        {
                          "name": null,
                          "type": 445,
                          "typeName": "parachains_disputes::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 53,
                      "docs": []
                    },
                    {
                      "name": "Registrar",
                      "fields": [
                        {
                          "name": null,
                          "type": 448,
                          "typeName": "paras_registrar::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 60,
                      "docs": []
                    },
                    {
                      "name": "Slots",
                      "fields": [
                        {
                          "name": null,
                          "type": 449,
                          "typeName": "slots::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 61,
                      "docs": []
                    },
                    {
                      "name": "Auctions",
                      "fields": [
                        {
                          "name": null,
                          "type": 450,
                          "typeName": "auctions::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 63,
                      "docs": []
                    },
                    {
                      "name": "Crowdloan",
                      "fields": [
                        {
                          "name": null,
                          "type": 451,
                          "typeName": "crowdloan::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 64,
                      "docs": []
                    },
                    {
                      "name": "AssignedSlots",
                      "fields": [
                        {
                          "name": null,
                          "type": 452,
                          "typeName": "assigned_slots::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 65,
                      "docs": []
                    },
                    {
                      "name": "XcmPallet",
                      "fields": [
                        {
                          "name": null,
                          "type": 453,
                          "typeName": "pallet_xcm::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 99,
                      "docs": []
                    },
                    {
                      "name": "MessageQueue",
                      "fields": [
                        {
                          "name": null,
                          "type": 455,
                          "typeName": "pallet_message_queue::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 100,
                      "docs": []
                    },
                    {
                      "name": "AssetRate",
                      "fields": [
                        {
                          "name": null,
                          "type": 457,
                          "typeName": "pallet_asset_rate::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 101,
                      "docs": []
                    },
                    {
                      "name": "RootTesting",
                      "fields": [
                        {
                          "name": null,
                          "type": 458,
                          "typeName": "pallet_root_testing::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 102,
                      "docs": []
                    },
                    {
                      "name": "IdentityMigrator",
                      "fields": [
                        {
                          "name": null,
                          "type": 459,
                          "typeName": "identity_migrator::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 248,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 21,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ExtrinsicSuccess",
                      "fields": [
                        {
                          "name": "dispatch_info",
                          "type": 22,
                          "typeName": "DispatchInfo",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An extrinsic completed successfully."
                      ]
                    },
                    {
                      "name": "ExtrinsicFailed",
                      "fields": [
                        {
                          "name": "dispatch_error",
                          "type": 25,
                          "typeName": "DispatchError",
                          "docs": []
                        },
                        {
                          "name": "dispatch_info",
                          "type": 22,
                          "typeName": "DispatchInfo",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An extrinsic failed."
                      ]
                    },
                    {
                      "name": "CodeUpdated",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "`:code` was updated."
                      ]
                    },
                    {
                      "name": "NewAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A new account was created."
                      ]
                    },
                    {
                      "name": "KilledAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An account was reaped."
                      ]
                    },
                    {
                      "name": "Remarked",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "On on-chain remark happened."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Event for the System pallet."
              ]
            }
          },
          {
            "id": 22,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchInfo"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "weight",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "class",
                      "type": 23,
                      "typeName": "DispatchClass",
                      "docs": []
                    },
                    {
                      "name": "pays_fee",
                      "type": 24,
                      "typeName": "Pays",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 23,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchClass"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Normal",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Operational",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Mandatory",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 24,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "Pays"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Yes",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "No",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 25,
            "type": {
              "path": [
                "sp_runtime",
                "DispatchError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Other",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "CannotLookup",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "BadOrigin",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Module",
                      "fields": [
                        {
                          "name": null,
                          "type": 26,
                          "typeName": "ModuleError",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "ConsumerRemaining",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "NoProviders",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "TooManyConsumers",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Token",
                      "fields": [
                        {
                          "name": null,
                          "type": 27,
                          "typeName": "TokenError",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "Arithmetic",
                      "fields": [
                        {
                          "name": null,
                          "type": 28,
                          "typeName": "ArithmeticError",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "Transactional",
                      "fields": [
                        {
                          "name": null,
                          "type": 29,
                          "typeName": "TransactionalError",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "Exhausted",
                      "fields": [],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "Corruption",
                      "fields": [],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "Unavailable",
                      "fields": [],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "RootNotAllowed",
                      "fields": [],
                      "index": 13,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 26,
            "type": {
              "path": [
                "sp_runtime",
                "ModuleError"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "error",
                      "type": 17,
                      "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 27,
            "type": {
              "path": [
                "sp_runtime",
                "TokenError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FundsUnavailable",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "OnlyProvider",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "BelowMinimum",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "CannotCreate",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "UnknownAsset",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Frozen",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Unsupported",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "CannotCreateHold",
                      "fields": [],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "NotExpendable",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "Blocked",
                      "fields": [],
                      "index": 9,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 28,
            "type": {
              "path": [
                "sp_arithmetic",
                "ArithmeticError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Underflow",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Overflow",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "DivisionByZero",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 29,
            "type": {
              "path": [
                "sp_runtime",
                "TransactionalError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LimitReached",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "NoLayer",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 30,
            "type": {
              "path": [
                "pallet_indices",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "IndexAssigned",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A account index was assigned."
                      ]
                    },
                    {
                      "name": "IndexFreed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A account index has been freed up (unassigned)."
                      ]
                    },
                    {
                      "name": "IndexFrozen",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A account index has been frozen to its current account ID."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 31,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Endowed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "free_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account was created with some free balance."
                      ]
                    },
                    {
                      "name": "DustLost",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                        "resulting in an outright loss."
                      ]
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Transfer succeeded."
                      ]
                    },
                    {
                      "name": "BalanceSet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "free",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A balance was set by root."
                      ]
                    },
                    {
                      "name": "Reserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some balance was reserved (moved from free to reserved)."
                      ]
                    },
                    {
                      "name": "Unreserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Some balance was unreserved (moved from reserved to free)."
                      ]
                    },
                    {
                      "name": "ReserveRepatriated",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        },
                        {
                          "name": "destination_status",
                          "type": 32,
                          "typeName": "Status",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some balance was moved from the reserve of the first account to the second account.",
                        "Final argument indicates the destination balance type."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Some amount was deposited (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Withdraw",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some amount was withdrawn from the account (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some amount was removed from the account (e.g. for misbehavior)."
                      ]
                    },
                    {
                      "name": "Minted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Some amount was minted into an account."
                      ]
                    },
                    {
                      "name": "Burned",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Some amount was burned from an account."
                      ]
                    },
                    {
                      "name": "Suspended",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "Some amount was suspended from an account (it can be restored later)."
                      ]
                    },
                    {
                      "name": "Restored",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "Some amount was restored into an account."
                      ]
                    },
                    {
                      "name": "Upgraded",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "An account was upgraded."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Total issuance was increased by `amount`, creating a credit to be balanced."
                      ]
                    },
                    {
                      "name": "Rescinded",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Total issuance was decreased by `amount`, creating a debt to be balanced."
                      ]
                    },
                    {
                      "name": "Locked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Some balance was locked."
                      ]
                    },
                    {
                      "name": "Unlocked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "Some balance was unlocked."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Some balance was frozen."
                      ]
                    },
                    {
                      "name": "Thawed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "Some balance was thawed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 32,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "tokens",
                "misc",
                "BalanceStatus"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Free",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Reserved",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 33,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransactionFeePaid",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "actual_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "tip",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                        "has been paid by `who`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 34,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "EraPaid",
                      "fields": [
                        {
                          "name": "era_index",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        },
                        {
                          "name": "validator_payout",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "remainder",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The era payout has been set; the first balance is the validator-payout; the second is",
                        "the remainder from the maximum amount of reward."
                      ]
                    },
                    {
                      "name": "Rewarded",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 35,
                          "typeName": "RewardDestination<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The nominator has been rewarded by this amount to this destination."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "staker",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A staker (validator or nominator) has been slashed by the given amount."
                      ]
                    },
                    {
                      "name": "SlashReported",
                      "fields": [
                        {
                          "name": "validator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "fraction",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        },
                        {
                          "name": "slash_era",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A slash for the given validator, for the given percentage of their stake, at the given",
                        "era as been reported."
                      ]
                    },
                    {
                      "name": "OldSlashingReportDiscarded",
                      "fields": [
                        {
                          "name": "session_index",
                          "type": 4,
                          "typeName": "SessionIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An old slashing report from a prior era was discarded because it could",
                        "not be processed."
                      ]
                    },
                    {
                      "name": "StakersElected",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "A new set of stakers was elected."
                      ]
                    },
                    {
                      "name": "Bonded",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "An account has bonded this amount. \\[stash, amount\\]",
                        "",
                        "NOTE: This event is only emitted when funds are bonded via a dispatchable. Notably,",
                        "it will not be emitted for staking rewards when they are added to stake."
                      ]
                    },
                    {
                      "name": "Unbonded",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "An account has unbonded this amount."
                      ]
                    },
                    {
                      "name": "Withdrawn",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "An account has called `withdraw_unbonded` and removed unbonding chunks worth `Balance`",
                        "from the unlocking queue."
                      ]
                    },
                    {
                      "name": "Kicked",
                      "fields": [
                        {
                          "name": "nominator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A nominator has been kicked from a validator."
                      ]
                    },
                    {
                      "name": "StakingElectionFailed",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The election failed. No new era is planned."
                      ]
                    },
                    {
                      "name": "Chilled",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "An account has stopped participating as either a validator or nominator."
                      ]
                    },
                    {
                      "name": "PayoutStarted",
                      "fields": [
                        {
                          "name": "era_index",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        },
                        {
                          "name": "validator_stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "The stakers' rewards are getting paid."
                      ]
                    },
                    {
                      "name": "ValidatorPrefsSet",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "prefs",
                          "type": 37,
                          "typeName": "ValidatorPrefs",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A validator has set their preferences."
                      ]
                    },
                    {
                      "name": "SnapshotVotersSizeExceeded",
                      "fields": [
                        {
                          "name": "size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Voters size limit reached."
                      ]
                    },
                    {
                      "name": "SnapshotTargetsSizeExceeded",
                      "fields": [
                        {
                          "name": "size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Targets size limit reached."
                      ]
                    },
                    {
                      "name": "ForceEra",
                      "fields": [
                        {
                          "name": "mode",
                          "type": 40,
                          "typeName": "Forcing",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "A new force era mode was set."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 35,
            "type": {
              "path": [
                "pallet_staking",
                "RewardDestination"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Staked",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Stash",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Controller",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Account",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "None",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 36,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Perbill"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 37,
            "type": {
              "path": [
                "pallet_staking",
                "ValidatorPrefs"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "commission",
                      "type": 38,
                      "typeName": "Perbill",
                      "docs": []
                    },
                    {
                      "name": "blocked",
                      "type": 39,
                      "typeName": "bool",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 38,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 36
                }
              },
              "docs": []
            }
          },
          {
            "id": 39,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "Bool"
              },
              "docs": []
            }
          },
          {
            "id": 40,
            "type": {
              "path": [
                "pallet_staking",
                "Forcing"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotForcing",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "ForceNew",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "ForceNone",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "ForceAlways",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 41,
            "type": {
              "path": [
                "pallet_offences",
                "pallet",
                "Event"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Offence",
                      "fields": [
                        {
                          "name": "kind",
                          "type": 42,
                          "typeName": "Kind",
                          "docs": []
                        },
                        {
                          "name": "timeslot",
                          "type": 13,
                          "typeName": "OpaqueTimeSlot",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "There is an offence reported of the given `kind` happened at the `session_index` and",
                        "(kind-specific) time slot. This event is not deposited for duplicate slashes.",
                        "\\[kind, timeslot\\]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Events type."
              ]
            }
          },
          {
            "id": 42,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 16,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 43,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Event"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewSession",
                      "fields": [
                        {
                          "name": "session_index",
                          "type": 4,
                          "typeName": "SessionIndex",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New session has happened. Note that the argument is the session index, not the",
                        "block number as the type might suggest."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 44,
            "type": {
              "path": [
                "pallet_grandpa",
                "pallet",
                "Event"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewAuthorities",
                      "fields": [
                        {
                          "name": "authority_set",
                          "type": 45,
                          "typeName": "AuthorityList",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New authority set has been applied."
                      ]
                    },
                    {
                      "name": "Paused",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Current authority set has been paused."
                      ]
                    },
                    {
                      "name": "Resumed",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Current authority set has been resumed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 45,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 46
                }
              },
              "docs": []
            }
          },
          {
            "id": 46,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  47,
                  11
                ]
              },
              "docs": []
            }
          },
          {
            "id": 47,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "app",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 48,
                      "typeName": "ed25519::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 48,
            "type": {
              "path": [
                "sp_core",
                "ed25519",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 49,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Event"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BatchInterrupted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "error",
                          "type": 25,
                          "typeName": "DispatchError",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                        "well as the error."
                      ]
                    },
                    {
                      "name": "BatchCompleted",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Batch of dispatches completed fully with no error."
                      ]
                    },
                    {
                      "name": "BatchCompletedWithErrors",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Batch of dispatches completed but has errors."
                      ]
                    },
                    {
                      "name": "ItemCompleted",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with no error."
                      ]
                    },
                    {
                      "name": "ItemFailed",
                      "fields": [
                        {
                          "name": "error",
                          "type": 25,
                          "typeName": "DispatchError",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with error."
                      ]
                    },
                    {
                      "name": "DispatchedAs",
                      "fields": [
                        {
                          "name": "result",
                          "type": 50,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A call was dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 50,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 51
                },
                {
                  "name": "E",
                  "type": 25
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "name": null,
                          "type": 51,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "name": null,
                          "type": 25,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 51,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": []
              },
              "docs": []
            }
          },
          {
            "id": 52,
            "type": {
              "path": [
                "pallet_identity",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "IdentitySet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A name was set or reset (which will remove all judgements)."
                      ]
                    },
                    {
                      "name": "IdentityCleared",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A name was cleared, and the given balance returned."
                      ]
                    },
                    {
                      "name": "IdentityKilled",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A name was removed and the given balance slashed."
                      ]
                    },
                    {
                      "name": "JudgementRequested",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A judgement was asked from a registrar."
                      ]
                    },
                    {
                      "name": "JudgementUnrequested",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A judgement request was retracted."
                      ]
                    },
                    {
                      "name": "JudgementGiven",
                      "fields": [
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A judgement was given by a registrar."
                      ]
                    },
                    {
                      "name": "RegistrarAdded",
                      "fields": [
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A registrar was added."
                      ]
                    },
                    {
                      "name": "SubIdentityAdded",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "main",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A sub-identity was added to an identity and the deposit paid."
                      ]
                    },
                    {
                      "name": "SubIdentityRemoved",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "main",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A sub-identity was removed from an identity and the deposit freed."
                      ]
                    },
                    {
                      "name": "SubIdentityRevoked",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "main",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A sub-identity was cleared, and the given deposit repatriated from the",
                        "main identity account to the sub-identity account."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 53,
            "type": {
              "path": [
                "pallet_recovery",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RecoveryCreated",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A recovery process has been set up for an account."
                      ]
                    },
                    {
                      "name": "RecoveryInitiated",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "rescuer_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A recovery process has been initiated for lost account by rescuer account."
                      ]
                    },
                    {
                      "name": "RecoveryVouched",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "rescuer_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A recovery process for lost account by rescuer account has been vouched for by sender."
                      ]
                    },
                    {
                      "name": "RecoveryClosed",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "rescuer_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A recovery process for lost account by rescuer account has been closed."
                      ]
                    },
                    {
                      "name": "AccountRecovered",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "rescuer_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Lost account has been successfully recovered by rescuer account."
                      ]
                    },
                    {
                      "name": "RecoveryRemoved",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A recovery process has been removed for an account."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Events type."
              ]
            }
          },
          {
            "id": 54,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VestingUpdated",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "unvested",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The amount vested has been updated. This could indicate a change in funds available.",
                        "The balance given is the amount which is left unvested (and thus locked)."
                      ]
                    },
                    {
                      "name": "VestingCompleted",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An \\[account\\] has become fully vested."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 55,
            "type": {
              "path": [
                "pallet_scheduler",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Scheduled",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Scheduled some task."
                      ]
                    },
                    {
                      "name": "Canceled",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Canceled some task."
                      ]
                    },
                    {
                      "name": "Dispatched",
                      "fields": [
                        {
                          "name": "task",
                          "type": 56,
                          "typeName": "TaskAddress<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "id",
                          "type": 57,
                          "typeName": "Option<TaskName>",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 50,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Dispatched some task."
                      ]
                    },
                    {
                      "name": "CallUnavailable",
                      "fields": [
                        {
                          "name": "task",
                          "type": 56,
                          "typeName": "TaskAddress<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "id",
                          "type": 57,
                          "typeName": "Option<TaskName>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The call for the provided hash was not found so the task has been aborted."
                      ]
                    },
                    {
                      "name": "PeriodicFailed",
                      "fields": [
                        {
                          "name": "task",
                          "type": 56,
                          "typeName": "TaskAddress<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "id",
                          "type": 57,
                          "typeName": "Option<TaskName>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "The given task was unable to be renewed since the agenda is full at that block."
                      ]
                    },
                    {
                      "name": "PermanentlyOverweight",
                      "fields": [
                        {
                          "name": "task",
                          "type": 56,
                          "typeName": "TaskAddress<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "id",
                          "type": 57,
                          "typeName": "Option<TaskName>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The given task can never be executed since it is overweight."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Events type."
              ]
            }
          },
          {
            "id": 56,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 57,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 1
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 58,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noted",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A preimage has been noted."
                      ]
                    },
                    {
                      "name": "Requested",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A preimage has been requested."
                      ]
                    },
                    {
                      "name": "Cleared",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A preimage has ben cleared."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 59,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Sudid",
                      "fields": [
                        {
                          "name": "sudo_result",
                          "type": 50,
                          "typeName": "DispatchResult",
                          "docs": [
                            "The result of the call made by the sudo user."
                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A sudo call just took place."
                      ]
                    },
                    {
                      "name": "KeyChanged",
                      "fields": [
                        {
                          "name": "old",
                          "type": 60,
                          "typeName": "Option<T::AccountId>",
                          "docs": [
                            "The old sudo key (if one was previously set)."
                          ]
                        },
                        {
                          "name": "new",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The new sudo key (if one was set)."
                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The sudo key has been updated."
                      ]
                    },
                    {
                      "name": "KeyRemoved",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The key was permanently removed."
                      ]
                    },
                    {
                      "name": "SudoAsDone",
                      "fields": [
                        {
                          "name": "sudo_result",
                          "type": 50,
                          "typeName": "DispatchResult",
                          "docs": [
                            "The result of the call made by the sudo user."
                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A [sudo_as](Pallet::sudo_as) call just took place."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 60,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 61,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ProxyExecuted",
                      "fields": [
                        {
                          "name": "result",
                          "type": 50,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A proxy was executed correctly, with the given."
                      ]
                    },
                    {
                      "name": "PureCreated",
                      "fields": [
                        {
                          "name": "pure",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proxy_type",
                          "type": 62,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "disambiguation_index",
                          "type": 63,
                          "typeName": "u16",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A pure account has been created by new proxy with given",
                        "disambiguation index and proxy type."
                      ]
                    },
                    {
                      "name": "Announced",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proxy",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "An announcement was placed to make a call in the future."
                      ]
                    },
                    {
                      "name": "ProxyAdded",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegatee",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proxy_type",
                          "type": 62,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proxy was added."
                      ]
                    },
                    {
                      "name": "ProxyRemoved",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegatee",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proxy_type",
                          "type": 62,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A proxy was removed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 62,
            "type": {
              "path": [
                "westend_runtime",
                "ProxyType"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Any",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "NonTransfer",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Governance",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Staking",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "SudoBalances",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "IdentityJudgement",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "CancelProxy",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Auction",
                      "fields": [],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "NominationPools",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 63,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "U16"
              },
              "docs": []
            }
          },
          {
            "id": 64,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewMultisig",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new multisig operation has begun."
                      ]
                    },
                    {
                      "name": "MultisigApproval",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "timepoint",
                          "type": 65,
                          "typeName": "Timepoint<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A multisig operation has been approved by someone."
                      ]
                    },
                    {
                      "name": "MultisigExecuted",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "timepoint",
                          "type": 65,
                          "typeName": "Timepoint<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 50,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A multisig operation has been executed."
                      ]
                    },
                    {
                      "name": "MultisigCancelled",
                      "fields": [
                        {
                          "name": "cancelling",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "timepoint",
                          "type": 65,
                          "typeName": "Timepoint<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A multisig operation has been cancelled."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 65,
            "type": {
              "path": [
                "pallet_multisig",
                "Timepoint"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "height",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "index",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 66,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SolutionStored",
                      "fields": [
                        {
                          "name": "compute",
                          "type": 67,
                          "typeName": "ElectionCompute",
                          "docs": []
                        },
                        {
                          "name": "origin",
                          "type": 60,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "prev_ejected",
                          "type": 39,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A solution was stored with the given compute.",
                        "",
                        "The `origin` indicates the origin of the solution. If `origin` is `Some(AccountId)`,",
                        "the stored solution was submited in the signed phase by a miner with the `AccountId`.",
                        "Otherwise, the solution was stored either during the unsigned phase or by",
                        "`T::ForceOrigin`. The `bool` is `true` when a previous solution was ejected to make",
                        "room for this one."
                      ]
                    },
                    {
                      "name": "ElectionFinalized",
                      "fields": [
                        {
                          "name": "compute",
                          "type": 67,
                          "typeName": "ElectionCompute",
                          "docs": []
                        },
                        {
                          "name": "score",
                          "type": 68,
                          "typeName": "ElectionScore",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The election has been finalized, with the given computation and score."
                      ]
                    },
                    {
                      "name": "ElectionFailed",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "An election failed.",
                        "",
                        "Not much can be said about which computes failed in the process."
                      ]
                    },
                    {
                      "name": "Rewarded",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "An account has been rewarded for their signed submission being finalized."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An account has been slashed for submitting an invalid signed submission."
                      ]
                    },
                    {
                      "name": "PhaseTransitioned",
                      "fields": [
                        {
                          "name": "from",
                          "type": 69,
                          "typeName": "Phase<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 69,
                          "typeName": "Phase<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "round",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "There was a phase transition in a given round."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 67,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "ElectionCompute"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "OnChain",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Signed",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Unsigned",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Fallback",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Emergency",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 68,
            "type": {
              "path": [
                "sp_npos_elections",
                "ElectionScore"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "minimal_stake",
                      "type": 6,
                      "typeName": "ExtendedBalance",
                      "docs": []
                    },
                    {
                      "name": "sum_stake",
                      "type": 6,
                      "typeName": "ExtendedBalance",
                      "docs": []
                    },
                    {
                      "name": "sum_stake_squared",
                      "type": 6,
                      "typeName": "ExtendedBalance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 69,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "Phase"
              ],
              "params": [
                {
                  "name": "Bn",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Off",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Signed",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Unsigned",
                      "fields": [
                        {
                          "name": null,
                          "type": 70,
                          "typeName": "(bool, Bn)",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Emergency",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 70,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  39,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 71,
            "type": {
              "path": [
                "pallet_bags_list",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Rebagged",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "from",
                          "type": 11,
                          "typeName": "T::Score",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 11,
                          "typeName": "T::Score",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Moved an account from one bag to another."
                      ]
                    },
                    {
                      "name": "ScoreUpdated",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "new_score",
                          "type": 11,
                          "typeName": "T::Score",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Updated the score of some account to the given amount."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 72,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Created",
                      "fields": [
                        {
                          "name": "depositor",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A pool has been created."
                      ]
                    },
                    {
                      "name": "Bonded",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "bonded",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "joined",
                          "type": 39,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A member has became bonded in a pool."
                      ]
                    },
                    {
                      "name": "PaidOut",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "payout",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A payout has been made to a member."
                      ]
                    },
                    {
                      "name": "Unbonded",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "points",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "era",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A member has unbonded from their pool.",
                        "",
                        "- `balance` is the corresponding balance of the number of points that has been",
                        "  requested to be unbonded (the argument of the `unbond` transaction) from the bonded",
                        "  pool.",
                        "- `points` is the number of points that are issued as a result of `balance` being",
                        "dissolved into the corresponding unbonding pool.",
                        "- `era` is the era in which the balance will be unbonded.",
                        "In the absence of slashing, these values will match. In the presence of slashing, the",
                        "number of points that are issued in the unbonding pool will be less than the amount",
                        "requested to be unbonded."
                      ]
                    },
                    {
                      "name": "Withdrawn",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "points",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A member has withdrawn from their pool.",
                        "",
                        "The given number of `points` have been dissolved in return of `balance`.",
                        "",
                        "Similar to `Unbonded` event, in the absence of slashing, the ratio of point to balance",
                        "will be 1."
                      ]
                    },
                    {
                      "name": "Destroyed",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A pool has been destroyed."
                      ]
                    },
                    {
                      "name": "StateChanged",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "new_state",
                          "type": 73,
                          "typeName": "PoolState",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "The state of a pool has changed"
                      ]
                    },
                    {
                      "name": "MemberRemoved",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A member has been removed from a pool.",
                        "",
                        "The removal can be voluntary (withdrawn all unbonded funds) or involuntary (kicked)."
                      ]
                    },
                    {
                      "name": "RolesUpdated",
                      "fields": [
                        {
                          "name": "root",
                          "type": 60,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "bouncer",
                          "type": 60,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "nominator",
                          "type": 60,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "The roles of a pool have been updated to the given new roles. Note that the depositor",
                        "can never change."
                      ]
                    },
                    {
                      "name": "PoolSlashed",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "The active balance of pool `pool_id` has been slashed to `balance`."
                      ]
                    },
                    {
                      "name": "UnbondingPoolSlashed",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "era",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "The unbond pool at `era` of pool `pool_id` has been slashed to `balance`."
                      ]
                    },
                    {
                      "name": "PoolCommissionUpdated",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "current",
                          "type": 74,
                          "typeName": "Option<(Perbill, T::AccountId)>",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A pool's commission setting has been changed."
                      ]
                    },
                    {
                      "name": "PoolMaxCommissionUpdated",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "max_commission",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A pool's maximum commission setting has been changed."
                      ]
                    },
                    {
                      "name": "PoolCommissionChangeRateUpdated",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "change_rate",
                          "type": 76,
                          "typeName": "CommissionChangeRate<BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A pool's commission `change_rate` has been changed."
                      ]
                    },
                    {
                      "name": "PoolCommissionClaimPermissionUpdated",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "permission",
                          "type": 77,
                          "typeName": "Option<CommissionClaimPermission<T::AccountId>>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Pool commission claim permission has been updated."
                      ]
                    },
                    {
                      "name": "PoolCommissionClaimed",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "commission",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Pool commission has been claimed."
                      ]
                    },
                    {
                      "name": "MinBalanceDeficitAdjusted",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Topped up deficit in frozen ED of the reward pool."
                      ]
                    },
                    {
                      "name": "MinBalanceExcessAdjusted",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Claimed excess frozen ED of af the reward pool."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Events of this pallet."
              ]
            }
          },
          {
            "id": 73,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "PoolState"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Open",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Blocked",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Destroying",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 74,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 75
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 75,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 75,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  36,
                  0
                ]
              },
              "docs": []
            }
          },
          {
            "id": 76,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "CommissionChangeRate"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_increase",
                      "type": 36,
                      "typeName": "Perbill",
                      "docs": []
                    },
                    {
                      "name": "min_delay",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 77,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 78
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 78,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 78,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "CommissionClaimPermission"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Permissionless",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Account",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 79,
            "type": {
              "path": [
                "pallet_fast_unstake",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unstaked",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 50,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A staker was unstaked."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A staker was slashed for requesting fast-unstake whilst being exposed."
                      ]
                    },
                    {
                      "name": "BatchChecked",
                      "fields": [
                        {
                          "name": "eras",
                          "type": 80,
                          "typeName": "Vec<EraIndex>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A batch was partially checked for the given eras, but the process did not finish."
                      ]
                    },
                    {
                      "name": "BatchFinished",
                      "fields": [
                        {
                          "name": "size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A batch of a given size was terminated.",
                        "",
                        "This is always follows by a number of `Unstaked` or `Slashed` events, marking the end",
                        "of the batch. A new batch will be created upon next block."
                      ]
                    },
                    {
                      "name": "InternalError",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "An internal error happened. Operations will be paused now."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 80,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 4
                }
              },
              "docs": []
            }
          },
          {
            "id": 81,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Delegated",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account has delegated their vote to another account. \\[who, target\\]"
                      ]
                    },
                    {
                      "name": "Undelegated",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An \\[account\\] has cancelled a previous delegation operation."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 82,
            "type": {
              "path": [
                "pallet_referenda",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Submitted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "track",
                          "type": 63,
                          "typeName": "TrackIdOf<T, I>",
                          "docs": [
                            "The track (and by extension proposal dispatch origin) of this referendum."
                          ]
                        },
                        {
                          "name": "proposal",
                          "type": 83,
                          "typeName": "BoundedCallOf<T, I>",
                          "docs": [
                            "The proposal for the referendum."
                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A referendum has been submitted."
                      ]
                    },
                    {
                      "name": "DecisionDepositPlaced",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account who placed the deposit."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [
                            "The amount placed by the account."
                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The decision deposit has been placed."
                      ]
                    },
                    {
                      "name": "DecisionDepositRefunded",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account who placed the deposit."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [
                            "The amount placed by the account."
                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The decision deposit has been refunded."
                      ]
                    },
                    {
                      "name": "DepositSlashed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account who placed the deposit."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [
                            "The amount placed by the account."
                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A deposit has been slashed."
                      ]
                    },
                    {
                      "name": "DecisionStarted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "track",
                          "type": 63,
                          "typeName": "TrackIdOf<T, I>",
                          "docs": [
                            "The track (and by extension proposal dispatch origin) of this referendum."
                          ]
                        },
                        {
                          "name": "proposal",
                          "type": 83,
                          "typeName": "BoundedCallOf<T, I>",
                          "docs": [
                            "The proposal for the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 432,
                          "typeName": "T::Tally",
                          "docs": [
                            "The current tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A referendum has moved into the deciding phase."
                      ]
                    },
                    {
                      "name": "ConfirmStarted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "ConfirmAborted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Confirmed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 432,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A referendum has ended its confirmation phase and is ready for approval."
                      ]
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A referendum has been approved and its proposal has been scheduled."
                      ]
                    },
                    {
                      "name": "Rejected",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 432,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A proposal has been rejected by referendum."
                      ]
                    },
                    {
                      "name": "TimedOut",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 432,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A referendum has been timed out without being decided."
                      ]
                    },
                    {
                      "name": "Cancelled",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 432,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A referendum has been cancelled."
                      ]
                    },
                    {
                      "name": "Killed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 432,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A referendum has been killed."
                      ]
                    },
                    {
                      "name": "SubmissionDepositRefunded",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account who placed the deposit."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [
                            "The amount placed by the account."
                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "The submission deposit has been refunded."
                      ]
                    },
                    {
                      "name": "MetadataSet",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Metadata for a referendum has been set."
                      ]
                    },
                    {
                      "name": "MetadataCleared",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Metadata for a referendum has been cleared."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 83,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "preimages",
                "Bounded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 84
                },
                {
                  "name": "H",
                  "type": 430
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Legacy",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H::Output",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Inline",
                      "fields": [
                        {
                          "name": null,
                          "type": 431,
                          "typeName": "BoundedInline",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Lookup",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H::Output",
                          "docs": []
                        },
                        {
                          "name": "len",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 84,
            "type": {
              "path": [
                "westend_runtime",
                "RuntimeCall"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "name": null,
                          "type": 85,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Babe",
                      "fields": [
                        {
                          "name": null,
                          "type": 89,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Babe, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Timestamp",
                      "fields": [
                        {
                          "name": null,
                          "type": 100,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Indices",
                      "fields": [
                        {
                          "name": null,
                          "type": 101,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Indices, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "name": null,
                          "type": 105,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Staking",
                      "fields": [
                        {
                          "name": null,
                          "type": 108,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Staking, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Beefy",
                      "fields": [
                        {
                          "name": null,
                          "type": 115,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Beefy, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 200,
                      "docs": []
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "name": null,
                          "type": 129,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "Grandpa",
                      "fields": [
                        {
                          "name": null,
                          "type": 134,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Grandpa, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "name": null,
                          "type": 146,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "Identity",
                      "fields": [
                        {
                          "name": null,
                          "type": 162,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Identity, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "Recovery",
                      "fields": [
                        {
                          "name": null,
                          "type": 200,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Recovery, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "Vesting",
                      "fields": [
                        {
                          "name": null,
                          "type": 201,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vesting, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "Scheduler",
                      "fields": [
                        {
                          "name": null,
                          "type": 203,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Scheduler, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "Preimage",
                      "fields": [
                        {
                          "name": null,
                          "type": 205,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Preimage, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": []
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "name": null,
                          "type": 207,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Sudo, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "name": null,
                          "type": 208,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "name": null,
                          "type": 210,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "ElectionProviderMultiPhase",
                      "fields": [
                        {
                          "name": null,
                          "type": 212,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ElectionProviderMultiPhase, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": []
                    },
                    {
                      "name": "VoterList",
                      "fields": [
                        {
                          "name": null,
                          "type": 273,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<VoterList, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": []
                    },
                    {
                      "name": "NominationPools",
                      "fields": [
                        {
                          "name": null,
                          "type": 274,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<NominationPools, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": []
                    },
                    {
                      "name": "FastUnstake",
                      "fields": [
                        {
                          "name": null,
                          "type": 281,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FastUnstake, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": []
                    },
                    {
                      "name": "ConvictionVoting",
                      "fields": [
                        {
                          "name": null,
                          "type": 282,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ConvictionVoting, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": []
                    },
                    {
                      "name": "Referenda",
                      "fields": [
                        {
                          "name": null,
                          "type": 287,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Referenda, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 32,
                      "docs": []
                    },
                    {
                      "name": "Whitelist",
                      "fields": [
                        {
                          "name": null,
                          "type": 290,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Whitelist, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 36,
                      "docs": []
                    },
                    {
                      "name": "Treasury",
                      "fields": [
                        {
                          "name": null,
                          "type": 291,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Treasury, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 37,
                      "docs": []
                    },
                    {
                      "name": "Configuration",
                      "fields": [
                        {
                          "name": null,
                          "type": 302,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Configuration, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 42,
                      "docs": []
                    },
                    {
                      "name": "ParasShared",
                      "fields": [
                        {
                          "name": null,
                          "type": 309,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasShared, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 43,
                      "docs": []
                    },
                    {
                      "name": "ParaInclusion",
                      "fields": [
                        {
                          "name": null,
                          "type": 310,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParaInclusion, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 44,
                      "docs": []
                    },
                    {
                      "name": "ParaInherent",
                      "fields": [
                        {
                          "name": null,
                          "type": 311,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParaInherent, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 45,
                      "docs": []
                    },
                    {
                      "name": "Paras",
                      "fields": [
                        {
                          "name": null,
                          "type": 346,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Paras, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 47,
                      "docs": []
                    },
                    {
                      "name": "Initializer",
                      "fields": [
                        {
                          "name": null,
                          "type": 348,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Initializer, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 48,
                      "docs": []
                    },
                    {
                      "name": "Hrmp",
                      "fields": [
                        {
                          "name": null,
                          "type": 349,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Hrmp, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 51,
                      "docs": []
                    },
                    {
                      "name": "ParasDisputes",
                      "fields": [
                        {
                          "name": null,
                          "type": 351,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasDisputes, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 53,
                      "docs": []
                    },
                    {
                      "name": "ParasSlashing",
                      "fields": [
                        {
                          "name": null,
                          "type": 352,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasSlashing, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 54,
                      "docs": []
                    },
                    {
                      "name": "Registrar",
                      "fields": [
                        {
                          "name": null,
                          "type": 356,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Registrar, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 60,
                      "docs": []
                    },
                    {
                      "name": "Slots",
                      "fields": [
                        {
                          "name": null,
                          "type": 357,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Slots, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 61,
                      "docs": []
                    },
                    {
                      "name": "ParasSudoWrapper",
                      "fields": [
                        {
                          "name": null,
                          "type": 358,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasSudoWrapper, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 62,
                      "docs": []
                    },
                    {
                      "name": "Auctions",
                      "fields": [
                        {
                          "name": null,
                          "type": 404,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Auctions, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 63,
                      "docs": []
                    },
                    {
                      "name": "Crowdloan",
                      "fields": [
                        {
                          "name": null,
                          "type": 406,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Crowdloan, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 64,
                      "docs": []
                    },
                    {
                      "name": "AssignedSlots",
                      "fields": [
                        {
                          "name": null,
                          "type": 411,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AssignedSlots, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 65,
                      "docs": []
                    },
                    {
                      "name": "XcmPallet",
                      "fields": [
                        {
                          "name": null,
                          "type": 413,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmPallet, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 99,
                      "docs": []
                    },
                    {
                      "name": "MessageQueue",
                      "fields": [
                        {
                          "name": null,
                          "type": 423,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MessageQueue, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 100,
                      "docs": []
                    },
                    {
                      "name": "AssetRate",
                      "fields": [
                        {
                          "name": null,
                          "type": 426,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AssetRate, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 101,
                      "docs": []
                    },
                    {
                      "name": "RootTesting",
                      "fields": [
                        {
                          "name": null,
                          "type": 428,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<RootTesting, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 102,
                      "docs": []
                    },
                    {
                      "name": "IdentityMigrator",
                      "fields": [
                        {
                          "name": null,
                          "type": 429,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<IdentityMigrator, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 248,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 85,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "remark",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::remark`]."
                      ]
                    },
                    {
                      "name": "set_heap_pages",
                      "fields": [
                        {
                          "name": "pages",
                          "type": 11,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_heap_pages`]."
                      ]
                    },
                    {
                      "name": "set_code",
                      "fields": [
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_code`]."
                      ]
                    },
                    {
                      "name": "set_code_without_checks",
                      "fields": [
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_code_without_checks`]."
                      ]
                    },
                    {
                      "name": "set_storage",
                      "fields": [
                        {
                          "name": "items",
                          "type": 86,
                          "typeName": "Vec<KeyValue>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_storage`]."
                      ]
                    },
                    {
                      "name": "kill_storage",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 88,
                          "typeName": "Vec<Key>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::kill_storage`]."
                      ]
                    },
                    {
                      "name": "kill_prefix",
                      "fields": [
                        {
                          "name": "prefix",
                          "type": 13,
                          "typeName": "Key",
                          "docs": []
                        },
                        {
                          "name": "subkeys",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::kill_prefix`]."
                      ]
                    },
                    {
                      "name": "remark_with_event",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remark_with_event`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 86,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 87
                }
              },
              "docs": []
            }
          },
          {
            "id": 87,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  13,
                  13
                ]
              },
              "docs": []
            }
          },
          {
            "id": 88,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 13
                }
              },
              "docs": []
            }
          },
          {
            "id": 89,
            "type": {
              "path": [
                "pallet_babe",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "report_equivocation",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 90,
                          "typeName": "Box<EquivocationProof<HeaderFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 96,
                          "typeName": "T::KeyOwnerProof",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::report_equivocation`]."
                      ]
                    },
                    {
                      "name": "report_equivocation_unsigned",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 90,
                          "typeName": "Box<EquivocationProof<HeaderFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 96,
                          "typeName": "T::KeyOwnerProof",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::report_equivocation_unsigned`]."
                      ]
                    },
                    {
                      "name": "plan_config_change",
                      "fields": [
                        {
                          "name": "config",
                          "type": 97,
                          "typeName": "NextConfigDescriptor",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::plan_config_change`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 90,
            "type": {
              "path": [
                "sp_consensus_slots",
                "EquivocationProof"
              ],
              "params": [
                {
                  "name": "Header",
                  "type": 91
                },
                {
                  "name": "Id",
                  "type": 93
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "offender",
                      "type": 93,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "slot",
                      "type": 95,
                      "typeName": "Slot",
                      "docs": []
                    },
                    {
                      "name": "first_header",
                      "type": 91,
                      "typeName": "Header",
                      "docs": []
                    },
                    {
                      "name": "second_header",
                      "type": 91,
                      "typeName": "Header",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 91,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "header",
                "Header"
              ],
              "params": [
                {
                  "name": "Number",
                  "type": 4
                },
                {
                  "name": "Hash",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_hash",
                      "type": 12,
                      "typeName": "Hash::Output",
                      "docs": []
                    },
                    {
                      "name": "number",
                      "type": 92,
                      "typeName": "Number",
                      "docs": []
                    },
                    {
                      "name": "state_root",
                      "type": 12,
                      "typeName": "Hash::Output",
                      "docs": []
                    },
                    {
                      "name": "extrinsics_root",
                      "type": 12,
                      "typeName": "Hash::Output",
                      "docs": []
                    },
                    {
                      "name": "digest",
                      "type": 14,
                      "typeName": "Digest",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 92,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 4
                }
              },
              "docs": []
            }
          },
          {
            "id": 93,
            "type": {
              "path": [
                "sp_consensus_babe",
                "app",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 94,
                      "typeName": "sr25519::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 94,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 95,
            "type": {
              "path": [
                "sp_consensus_slots",
                "Slot"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 96,
            "type": {
              "path": [
                "sp_session",
                "MembershipProof"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "session",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    },
                    {
                      "name": "trie_nodes",
                      "type": 88,
                      "typeName": "Vec<Vec<u8>>",
                      "docs": []
                    },
                    {
                      "name": "validator_count",
                      "type": 4,
                      "typeName": "ValidatorCount",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 97,
            "type": {
              "path": [
                "sp_consensus_babe",
                "digests",
                "NextConfigDescriptor"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V1",
                      "fields": [
                        {
                          "name": "c",
                          "type": 98,
                          "typeName": "(u64, u64)",
                          "docs": []
                        },
                        {
                          "name": "allowed_slots",
                          "type": 99,
                          "typeName": "AllowedSlots",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 98,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  11,
                  11
                ]
              },
              "docs": []
            }
          },
          {
            "id": 99,
            "type": {
              "path": [
                "sp_consensus_babe",
                "AllowedSlots"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PrimarySlots",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "PrimaryAndSecondaryPlainSlots",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "PrimaryAndSecondaryVRFSlots",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 100,
            "type": {
              "path": [
                "pallet_timestamp",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set",
                      "fields": [
                        {
                          "name": "now",
                          "type": 10,
                          "typeName": "T::Moment",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 101,
            "type": {
              "path": [
                "pallet_indices",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "claim",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::claim`]."
                      ]
                    },
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "new",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "free",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::free`]."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "new",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        },
                        {
                          "name": "freeze",
                          "type": 39,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::force_transfer`]."
                      ]
                    },
                    {
                      "name": "freeze",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::freeze`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 102,
            "type": {
              "path": [
                "sp_runtime",
                "multiaddress",
                "MultiAddress"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "AccountIndex",
                  "type": 51
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Id",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "name": null,
                          "type": 103,
                          "typeName": "AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Raw",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Address32",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Address20",
                      "fields": [
                        {
                          "name": null,
                          "type": 104,
                          "typeName": "[u8; 20]",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 103,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 51
                }
              },
              "docs": []
            }
          },
          {
            "id": 104,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 20,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 105,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transfer_allow_death",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 106,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transfer_allow_death`]."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 106,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::force_transfer`]."
                      ]
                    },
                    {
                      "name": "transfer_keep_alive",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 106,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::transfer_keep_alive`]."
                      ]
                    },
                    {
                      "name": "transfer_all",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "keep_alive",
                          "type": 39,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::transfer_all`]."
                      ]
                    },
                    {
                      "name": "force_unreserve",
                      "fields": [
                        {
                          "name": "who",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_unreserve`]."
                      ]
                    },
                    {
                      "name": "upgrade_accounts",
                      "fields": [
                        {
                          "name": "who",
                          "type": 107,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::upgrade_accounts`]."
                      ]
                    },
                    {
                      "name": "force_set_balance",
                      "fields": [
                        {
                          "name": "who",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "new_free",
                          "type": 106,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::force_set_balance`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 106,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 6
                }
              },
              "docs": []
            }
          },
          {
            "id": 107,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 0
                }
              },
              "docs": []
            }
          },
          {
            "id": 108,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "bond",
                      "fields": [
                        {
                          "name": "value",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "payee",
                          "type": 35,
                          "typeName": "RewardDestination<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::bond`]."
                      ]
                    },
                    {
                      "name": "bond_extra",
                      "fields": [
                        {
                          "name": "max_additional",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::bond_extra`]."
                      ]
                    },
                    {
                      "name": "unbond",
                      "fields": [
                        {
                          "name": "value",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::unbond`]."
                      ]
                    },
                    {
                      "name": "withdraw_unbonded",
                      "fields": [
                        {
                          "name": "num_slashing_spans",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::withdraw_unbonded`]."
                      ]
                    },
                    {
                      "name": "validate",
                      "fields": [
                        {
                          "name": "prefs",
                          "type": 37,
                          "typeName": "ValidatorPrefs",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::validate`]."
                      ]
                    },
                    {
                      "name": "nominate",
                      "fields": [
                        {
                          "name": "targets",
                          "type": 109,
                          "typeName": "Vec<AccountIdLookupOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::nominate`]."
                      ]
                    },
                    {
                      "name": "chill",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::chill`]."
                      ]
                    },
                    {
                      "name": "set_payee",
                      "fields": [
                        {
                          "name": "payee",
                          "type": 35,
                          "typeName": "RewardDestination<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_payee`]."
                      ]
                    },
                    {
                      "name": "set_controller",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_controller`]."
                      ]
                    },
                    {
                      "name": "set_validator_count",
                      "fields": [
                        {
                          "name": "new",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::set_validator_count`]."
                      ]
                    },
                    {
                      "name": "increase_validator_count",
                      "fields": [
                        {
                          "name": "additional",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::increase_validator_count`]."
                      ]
                    },
                    {
                      "name": "scale_validator_count",
                      "fields": [
                        {
                          "name": "factor",
                          "type": 110,
                          "typeName": "Percent",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::scale_validator_count`]."
                      ]
                    },
                    {
                      "name": "force_no_eras",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::force_no_eras`]."
                      ]
                    },
                    {
                      "name": "force_new_era",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::force_new_era`]."
                      ]
                    },
                    {
                      "name": "set_invulnerables",
                      "fields": [
                        {
                          "name": "invulnerables",
                          "type": 107,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::set_invulnerables`]."
                      ]
                    },
                    {
                      "name": "force_unstake",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "num_slashing_spans",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::force_unstake`]."
                      ]
                    },
                    {
                      "name": "force_new_era_always",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::force_new_era_always`]."
                      ]
                    },
                    {
                      "name": "cancel_deferred_slash",
                      "fields": [
                        {
                          "name": "era",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        },
                        {
                          "name": "slash_indices",
                          "type": 80,
                          "typeName": "Vec<u32>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::cancel_deferred_slash`]."
                      ]
                    },
                    {
                      "name": "payout_stakers",
                      "fields": [
                        {
                          "name": "validator_stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "era",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::payout_stakers`]."
                      ]
                    },
                    {
                      "name": "rebond",
                      "fields": [
                        {
                          "name": "value",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::rebond`]."
                      ]
                    },
                    {
                      "name": "reap_stash",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "num_slashing_spans",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "See [`Pallet::reap_stash`]."
                      ]
                    },
                    {
                      "name": "kick",
                      "fields": [
                        {
                          "name": "who",
                          "type": 109,
                          "typeName": "Vec<AccountIdLookupOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "See [`Pallet::kick`]."
                      ]
                    },
                    {
                      "name": "set_staking_configs",
                      "fields": [
                        {
                          "name": "min_nominator_bond",
                          "type": 111,
                          "typeName": "ConfigOp<BalanceOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "min_validator_bond",
                          "type": 111,
                          "typeName": "ConfigOp<BalanceOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "max_nominator_count",
                          "type": 112,
                          "typeName": "ConfigOp<u32>",
                          "docs": []
                        },
                        {
                          "name": "max_validator_count",
                          "type": 112,
                          "typeName": "ConfigOp<u32>",
                          "docs": []
                        },
                        {
                          "name": "chill_threshold",
                          "type": 113,
                          "typeName": "ConfigOp<Percent>",
                          "docs": []
                        },
                        {
                          "name": "min_commission",
                          "type": 114,
                          "typeName": "ConfigOp<Perbill>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "See [`Pallet::set_staking_configs`]."
                      ]
                    },
                    {
                      "name": "chill_other",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "See [`Pallet::chill_other`]."
                      ]
                    },
                    {
                      "name": "force_apply_min_commission",
                      "fields": [
                        {
                          "name": "validator_stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "See [`Pallet::force_apply_min_commission`]."
                      ]
                    },
                    {
                      "name": "set_min_commission",
                      "fields": [
                        {
                          "name": "new",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "See [`Pallet::set_min_commission`]."
                      ]
                    },
                    {
                      "name": "payout_stakers_by_page",
                      "fields": [
                        {
                          "name": "validator_stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "era",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        },
                        {
                          "name": "page",
                          "type": 4,
                          "typeName": "Page",
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": [
                        "See [`Pallet::payout_stakers_by_page`]."
                      ]
                    },
                    {
                      "name": "update_payee",
                      "fields": [
                        {
                          "name": "controller",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 27,
                      "docs": [
                        "See [`Pallet::update_payee`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 109,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 102
                }
              },
              "docs": []
            }
          },
          {
            "id": 110,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Percent"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 2,
                      "typeName": "u8",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 111,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 112,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 113,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 110
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 110,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 114,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 36
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 36,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 115,
            "type": {
              "path": [
                "pallet_beefy",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "report_equivocation",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 116,
                          "typeName": "Box<EquivocationProof<BlockNumberFor<T>, T::BeefyId,<T::BeefyId\nas RuntimeAppPublic>::Signature,>,>",
                          "docs": []
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 96,
                          "typeName": "T::KeyOwnerProof",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::report_equivocation`]."
                      ]
                    },
                    {
                      "name": "report_equivocation_unsigned",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 116,
                          "typeName": "Box<EquivocationProof<BlockNumberFor<T>, T::BeefyId,<T::BeefyId\nas RuntimeAppPublic>::Signature,>,>",
                          "docs": []
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 96,
                          "typeName": "T::KeyOwnerProof",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::report_equivocation_unsigned`]."
                      ]
                    },
                    {
                      "name": "set_new_genesis",
                      "fields": [
                        {
                          "name": "delay_in_blocks",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_new_genesis`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 116,
            "type": {
              "path": [
                "sp_consensus_beefy",
                "EquivocationProof"
              ],
              "params": [
                {
                  "name": "Number",
                  "type": 4
                },
                {
                  "name": "Id",
                  "type": 117
                },
                {
                  "name": "Signature",
                  "type": 120
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "first",
                      "type": 123,
                      "typeName": "VoteMessage<Number, Id, Signature>",
                      "docs": []
                    },
                    {
                      "name": "second",
                      "type": 123,
                      "typeName": "VoteMessage<Number, Id, Signature>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 117,
            "type": {
              "path": [
                "sp_consensus_beefy",
                "ecdsa_crypto",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 118,
                      "typeName": "ecdsa::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 118,
            "type": {
              "path": [
                "sp_core",
                "ecdsa",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 119,
                      "typeName": "[u8; PUBLIC_KEY_SERIALIZED_SIZE]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 119,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 33,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 120,
            "type": {
              "path": [
                "sp_consensus_beefy",
                "ecdsa_crypto",
                "Signature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 121,
                      "typeName": "ecdsa::Signature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 121,
            "type": {
              "path": [
                "sp_core",
                "ecdsa",
                "Signature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 122,
                      "typeName": "[u8; SIGNATURE_SERIALIZED_SIZE]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 122,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 65,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 123,
            "type": {
              "path": [
                "sp_consensus_beefy",
                "VoteMessage"
              ],
              "params": [
                {
                  "name": "Number",
                  "type": 4
                },
                {
                  "name": "Id",
                  "type": 117
                },
                {
                  "name": "Signature",
                  "type": 120
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "commitment",
                      "type": 124,
                      "typeName": "Commitment<Number>",
                      "docs": []
                    },
                    {
                      "name": "id",
                      "type": 117,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "signature",
                      "type": 120,
                      "typeName": "Signature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 124,
            "type": {
              "path": [
                "sp_consensus_beefy",
                "commitment",
                "Commitment"
              ],
              "params": [
                {
                  "name": "TBlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "payload",
                      "type": 125,
                      "typeName": "Payload",
                      "docs": []
                    },
                    {
                      "name": "block_number",
                      "type": 4,
                      "typeName": "TBlockNumber",
                      "docs": []
                    },
                    {
                      "name": "validator_set_id",
                      "type": 11,
                      "typeName": "ValidatorSetId",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 125,
            "type": {
              "path": [
                "sp_consensus_beefy",
                "payload",
                "Payload"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 126,
                      "typeName": "Vec<(BeefyPayloadId, Vec<u8>)>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 126,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 127
                }
              },
              "docs": []
            }
          },
          {
            "id": 127,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  128,
                  13
                ]
              },
              "docs": []
            }
          },
          {
            "id": 128,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 2,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 129,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_keys",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 130,
                          "typeName": "T::Keys",
                          "docs": []
                        },
                        {
                          "name": "proof",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_keys`]."
                      ]
                    },
                    {
                      "name": "purge_keys",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::purge_keys`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 130,
            "type": {
              "path": [
                "westend_runtime",
                "SessionKeys"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "grandpa",
                      "type": 47,
                      "typeName": "<Grandpa as $crate::BoundToRuntimeAppPublic>::Public",
                      "docs": []
                    },
                    {
                      "name": "babe",
                      "type": 93,
                      "typeName": "<Babe as $crate::BoundToRuntimeAppPublic>::Public",
                      "docs": []
                    },
                    {
                      "name": "para_validator",
                      "type": 131,
                      "typeName": "<Initializer as $crate::BoundToRuntimeAppPublic>::Public",
                      "docs": []
                    },
                    {
                      "name": "para_assignment",
                      "type": 132,
                      "typeName": "<ParaSessionInfo as $crate::BoundToRuntimeAppPublic>::Public",
                      "docs": []
                    },
                    {
                      "name": "authority_discovery",
                      "type": 133,
                      "typeName": "<AuthorityDiscovery as $crate::BoundToRuntimeAppPublic>::Public",
                      "docs": []
                    },
                    {
                      "name": "beefy",
                      "type": 117,
                      "typeName": "<Beefy as $crate::BoundToRuntimeAppPublic>::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 131,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "validator_app",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 94,
                      "typeName": "sr25519::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 132,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "assignment_app",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 94,
                      "typeName": "sr25519::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 133,
            "type": {
              "path": [
                "sp_authority_discovery",
                "app",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 94,
                      "typeName": "sr25519::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 134,
            "type": {
              "path": [
                "pallet_grandpa",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "report_equivocation",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 135,
                          "typeName": "Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 96,
                          "typeName": "T::KeyOwnerProof",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::report_equivocation`]."
                      ]
                    },
                    {
                      "name": "report_equivocation_unsigned",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 135,
                          "typeName": "Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 96,
                          "typeName": "T::KeyOwnerProof",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::report_equivocation_unsigned`]."
                      ]
                    },
                    {
                      "name": "note_stalled",
                      "fields": [
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "best_finalized_block_number",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::note_stalled`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 135,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "EquivocationProof"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "set_id",
                      "type": 11,
                      "typeName": "SetId",
                      "docs": []
                    },
                    {
                      "name": "equivocation",
                      "type": 136,
                      "typeName": "Equivocation<H, N>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 136,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "Equivocation"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Prevote",
                      "fields": [
                        {
                          "name": null,
                          "type": 137,
                          "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Prevote<H, N>,\nAuthoritySignature>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Precommit",
                      "fields": [
                        {
                          "name": null,
                          "type": 143,
                          "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Precommit<H, N>,\nAuthoritySignature>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 137,
            "type": {
              "path": [
                "finality_grandpa",
                "Equivocation"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 47
                },
                {
                  "name": "V",
                  "type": 138
                },
                {
                  "name": "S",
                  "type": 139
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "round_number",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "identity",
                      "type": 47,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "first",
                      "type": 142,
                      "typeName": "(V, S)",
                      "docs": []
                    },
                    {
                      "name": "second",
                      "type": 142,
                      "typeName": "(V, S)",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 138,
            "type": {
              "path": [
                "finality_grandpa",
                "Prevote"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "target_hash",
                      "type": 12,
                      "typeName": "H",
                      "docs": []
                    },
                    {
                      "name": "target_number",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 139,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "app",
                "Signature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 140,
                      "typeName": "ed25519::Signature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 140,
            "type": {
              "path": [
                "sp_core",
                "ed25519",
                "Signature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 141,
                      "typeName": "[u8; 64]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 141,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 64,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 142,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  138,
                  139
                ]
              },
              "docs": []
            }
          },
          {
            "id": 143,
            "type": {
              "path": [
                "finality_grandpa",
                "Equivocation"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 47
                },
                {
                  "name": "V",
                  "type": 144
                },
                {
                  "name": "S",
                  "type": 139
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "round_number",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "identity",
                      "type": 47,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "first",
                      "type": 145,
                      "typeName": "(V, S)",
                      "docs": []
                    },
                    {
                      "name": "second",
                      "type": 145,
                      "typeName": "(V, S)",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 144,
            "type": {
              "path": [
                "finality_grandpa",
                "Precommit"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "target_hash",
                      "type": 12,
                      "typeName": "H",
                      "docs": []
                    },
                    {
                      "name": "target_number",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 145,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  144,
                  139
                ]
              },
              "docs": []
            }
          },
          {
            "id": 146,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 147,
                          "typeName": "Vec<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::batch`]."
                      ]
                    },
                    {
                      "name": "as_derivative",
                      "fields": [
                        {
                          "name": "index",
                          "type": 63,
                          "typeName": "u16",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::as_derivative`]."
                      ]
                    },
                    {
                      "name": "batch_all",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 147,
                          "typeName": "Vec<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::batch_all`]."
                      ]
                    },
                    {
                      "name": "dispatch_as",
                      "fields": [
                        {
                          "name": "as_origin",
                          "type": 148,
                          "typeName": "Box<T::PalletsOrigin>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::dispatch_as`]."
                      ]
                    },
                    {
                      "name": "force_batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 147,
                          "typeName": "Vec<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_batch`]."
                      ]
                    },
                    {
                      "name": "with_weight",
                      "fields": [
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::with_weight`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 147,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 84
                }
              },
              "docs": []
            }
          },
          {
            "id": 148,
            "type": {
              "path": [
                "westend_runtime",
                "OriginCaller"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "system",
                      "fields": [
                        {
                          "name": null,
                          "type": 149,
                          "typeName": "frame_system::Origin<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Origins",
                      "fields": [
                        {
                          "name": null,
                          "type": 150,
                          "typeName": "pallet_custom_origins::Origin",
                          "docs": []
                        }
                      ],
                      "index": 35,
                      "docs": []
                    },
                    {
                      "name": "ParachainsOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 151,
                          "typeName": "parachains_origin::Origin",
                          "docs": []
                        }
                      ],
                      "index": 41,
                      "docs": []
                    },
                    {
                      "name": "XcmPallet",
                      "fields": [
                        {
                          "name": null,
                          "type": 153,
                          "typeName": "pallet_xcm::Origin",
                          "docs": []
                        }
                      ],
                      "index": 99,
                      "docs": []
                    },
                    {
                      "name": "Void",
                      "fields": [
                        {
                          "name": null,
                          "type": 161,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::\n__private::Void",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 149,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Root",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Signed",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "None",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 150,
            "type": {
              "path": [
                "westend_runtime",
                "governance",
                "origins",
                "pallet_custom_origins",
                "Origin"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "StakingAdmin",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Treasurer",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "FellowshipAdmin",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "GeneralAdmin",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "AuctionAdmin",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "LeaseAdmin",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "ReferendumCanceller",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "ReferendumKiller",
                      "fields": [],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "SmallTipper",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "BigTipper",
                      "fields": [],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "SmallSpender",
                      "fields": [],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "MediumSpender",
                      "fields": [],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "BigSpender",
                      "fields": [],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "WhitelistedCaller",
                      "fields": [],
                      "index": 13,
                      "docs": []
                    },
                    {
                      "name": "FellowshipInitiates",
                      "fields": [],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "Fellows",
                      "fields": [],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "FellowshipExperts",
                      "fields": [],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "FellowshipMasters",
                      "fields": [],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "Fellowship1Dan",
                      "fields": [],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "Fellowship2Dan",
                      "fields": [],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "Fellowship3Dan",
                      "fields": [],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "Fellowship4Dan",
                      "fields": [],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "Fellowship5Dan",
                      "fields": [],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "Fellowship6Dan",
                      "fields": [],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "Fellowship7Dan",
                      "fields": [],
                      "index": 24,
                      "docs": []
                    },
                    {
                      "name": "Fellowship8Dan",
                      "fields": [],
                      "index": 25,
                      "docs": []
                    },
                    {
                      "name": "Fellowship9Dan",
                      "fields": [],
                      "index": 26,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 151,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "origin",
                "pallet",
                "Origin"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Parachain",
                      "fields": [
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 152,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "Id"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 153,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Origin"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Xcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Response",
                      "fields": [
                        {
                          "name": null,
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 154,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multilocation",
                "MultiLocation"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parents",
                      "type": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "interior",
                      "type": 155,
                      "typeName": "Junctions",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 155,
            "type": {
              "path": [
                "xcm",
                "v3",
                "junctions",
                "Junctions"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Here",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "X1",
                      "fields": [
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "X2",
                      "fields": [
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "X3",
                      "fields": [
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "X4",
                      "fields": [
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "X5",
                      "fields": [
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "X6",
                      "fields": [
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "X7",
                      "fields": [
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "X8",
                      "fields": [
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 156,
            "type": {
              "path": [
                "xcm",
                "v3",
                "junction",
                "Junction"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Parachain",
                      "fields": [
                        {
                          "name": null,
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "AccountId32",
                      "fields": [
                        {
                          "name": "network",
                          "type": 157,
                          "typeName": "Option<NetworkId>",
                          "docs": []
                        },
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "AccountIndex64",
                      "fields": [
                        {
                          "name": "network",
                          "type": 157,
                          "typeName": "Option<NetworkId>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "AccountKey20",
                      "fields": [
                        {
                          "name": "network",
                          "type": 157,
                          "typeName": "Option<NetworkId>",
                          "docs": []
                        },
                        {
                          "name": "key",
                          "type": 104,
                          "typeName": "[u8; 20]",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "PalletInstance",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "GeneralIndex",
                      "fields": [
                        {
                          "name": null,
                          "type": 106,
                          "typeName": "u128",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "GeneralKey",
                      "fields": [
                        {
                          "name": "length",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "OnlyChild",
                      "fields": [],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "Plurality",
                      "fields": [
                        {
                          "name": "id",
                          "type": 159,
                          "typeName": "BodyId",
                          "docs": []
                        },
                        {
                          "name": "part",
                          "type": 160,
                          "typeName": "BodyPart",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "GlobalConsensus",
                      "fields": [
                        {
                          "name": null,
                          "type": 158,
                          "typeName": "NetworkId",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 157,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 158
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 158,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 158,
            "type": {
              "path": [
                "xcm",
                "v3",
                "junction",
                "NetworkId"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ByGenesis",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "ByFork",
                      "fields": [
                        {
                          "name": "block_number",
                          "type": 11,
                          "typeName": "u64",
                          "docs": []
                        },
                        {
                          "name": "block_hash",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Polkadot",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Kusama",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Westend",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Rococo",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Wococo",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Ethereum",
                      "fields": [
                        {
                          "name": "chain_id",
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "BitcoinCore",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "BitcoinCash",
                      "fields": [],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "PolkadotBulletin",
                      "fields": [],
                      "index": 10,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 159,
            "type": {
              "path": [
                "xcm",
                "v3",
                "junction",
                "BodyId"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unit",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Moniker",
                      "fields": [
                        {
                          "name": null,
                          "type": 17,
                          "typeName": "[u8; 4]",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "name": null,
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Executive",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Technical",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Legislative",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Judicial",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Defense",
                      "fields": [],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "Administration",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "Treasury",
                      "fields": [],
                      "index": 9,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 160,
            "type": {
              "path": [
                "xcm",
                "v3",
                "junction",
                "BodyPart"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Voice",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": "count",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Fraction",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "denom",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "AtLeastProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "denom",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "MoreThanProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "denom",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 161,
            "type": {
              "path": [
                "sp_core",
                "Void"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 162,
            "type": {
              "path": [
                "pallet_identity",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_registrar",
                      "fields": [
                        {
                          "name": "account",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_registrar`]."
                      ]
                    },
                    {
                      "name": "set_identity",
                      "fields": [
                        {
                          "name": "info",
                          "type": 163,
                          "typeName": "Box<T::IdentityInformation>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_identity`]."
                      ]
                    },
                    {
                      "name": "set_subs",
                      "fields": [
                        {
                          "name": "subs",
                          "type": 197,
                          "typeName": "Vec<(T::AccountId, Data)>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_subs`]."
                      ]
                    },
                    {
                      "name": "clear_identity",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::clear_identity`]."
                      ]
                    },
                    {
                      "name": "request_judgement",
                      "fields": [
                        {
                          "name": "reg_index",
                          "type": 92,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        },
                        {
                          "name": "max_fee",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::request_judgement`]."
                      ]
                    },
                    {
                      "name": "cancel_request",
                      "fields": [
                        {
                          "name": "reg_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::cancel_request`]."
                      ]
                    },
                    {
                      "name": "set_fee",
                      "fields": [
                        {
                          "name": "index",
                          "type": 92,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        },
                        {
                          "name": "fee",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::set_fee`]."
                      ]
                    },
                    {
                      "name": "set_account_id",
                      "fields": [
                        {
                          "name": "index",
                          "type": 92,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        },
                        {
                          "name": "new",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_account_id`]."
                      ]
                    },
                    {
                      "name": "set_fields",
                      "fields": [
                        {
                          "name": "index",
                          "type": 92,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        },
                        {
                          "name": "fields",
                          "type": 11,
                          "typeName": "<T::IdentityInformation as IdentityInformationProvider>::\nFieldsIdentifier",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_fields`]."
                      ]
                    },
                    {
                      "name": "provide_judgement",
                      "fields": [
                        {
                          "name": "reg_index",
                          "type": 92,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "judgement",
                          "type": 199,
                          "typeName": "Judgement<BalanceOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "identity",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::provide_judgement`]."
                      ]
                    },
                    {
                      "name": "kill_identity",
                      "fields": [
                        {
                          "name": "target",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::kill_identity`]."
                      ]
                    },
                    {
                      "name": "add_sub",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 166,
                          "typeName": "Data",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::add_sub`]."
                      ]
                    },
                    {
                      "name": "rename_sub",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 166,
                          "typeName": "Data",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::rename_sub`]."
                      ]
                    },
                    {
                      "name": "remove_sub",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::remove_sub`]."
                      ]
                    },
                    {
                      "name": "quit_sub",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::quit_sub`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Identity pallet declaration."
              ]
            }
          },
          {
            "id": 163,
            "type": {
              "path": [
                "pallet_identity",
                "legacy",
                "IdentityInfo"
              ],
              "params": [
                {
                  "name": "FieldLimit",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "additional",
                      "type": 164,
                      "typeName": "BoundedVec<(Data, Data), FieldLimit>",
                      "docs": []
                    },
                    {
                      "name": "display",
                      "type": 166,
                      "typeName": "Data",
                      "docs": []
                    },
                    {
                      "name": "legal",
                      "type": 166,
                      "typeName": "Data",
                      "docs": []
                    },
                    {
                      "name": "web",
                      "type": 166,
                      "typeName": "Data",
                      "docs": []
                    },
                    {
                      "name": "riot",
                      "type": 166,
                      "typeName": "Data",
                      "docs": []
                    },
                    {
                      "name": "email",
                      "type": 166,
                      "typeName": "Data",
                      "docs": []
                    },
                    {
                      "name": "pgp_fingerprint",
                      "type": 196,
                      "typeName": "Option<[u8; 20]>",
                      "docs": []
                    },
                    {
                      "name": "image",
                      "type": 166,
                      "typeName": "Data",
                      "docs": []
                    },
                    {
                      "name": "twitter",
                      "type": 166,
                      "typeName": "Data",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 164,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 165
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 195,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 165,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  166,
                  166
                ]
              },
              "docs": []
            }
          },
          {
            "id": 166,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "Data"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Raw0",
                      "fields": [
                        {
                          "name": null,
                          "type": 167,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Raw1",
                      "fields": [
                        {
                          "name": null,
                          "type": 168,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Raw2",
                      "fields": [
                        {
                          "name": null,
                          "type": 128,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Raw3",
                      "fields": [
                        {
                          "name": null,
                          "type": 169,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Raw4",
                      "fields": [
                        {
                          "name": null,
                          "type": 17,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Raw5",
                      "fields": [
                        {
                          "name": null,
                          "type": 170,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Raw6",
                      "fields": [
                        {
                          "name": null,
                          "type": 171,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "Raw7",
                      "fields": [
                        {
                          "name": null,
                          "type": 172,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "Raw8",
                      "fields": [
                        {
                          "name": null,
                          "type": 173,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "Raw9",
                      "fields": [
                        {
                          "name": null,
                          "type": 174,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "Raw10",
                      "fields": [
                        {
                          "name": null,
                          "type": 175,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "Raw11",
                      "fields": [
                        {
                          "name": null,
                          "type": 176,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "Raw12",
                      "fields": [
                        {
                          "name": null,
                          "type": 177,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": []
                    },
                    {
                      "name": "Raw13",
                      "fields": [
                        {
                          "name": null,
                          "type": 178,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "Raw14",
                      "fields": [
                        {
                          "name": null,
                          "type": 179,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "Raw15",
                      "fields": [
                        {
                          "name": null,
                          "type": 180,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "Raw16",
                      "fields": [
                        {
                          "name": null,
                          "type": 42,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "Raw17",
                      "fields": [
                        {
                          "name": null,
                          "type": 181,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "Raw18",
                      "fields": [
                        {
                          "name": null,
                          "type": 182,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "Raw19",
                      "fields": [
                        {
                          "name": null,
                          "type": 183,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "Raw20",
                      "fields": [
                        {
                          "name": null,
                          "type": 104,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "Raw21",
                      "fields": [
                        {
                          "name": null,
                          "type": 184,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "Raw22",
                      "fields": [
                        {
                          "name": null,
                          "type": 185,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "Raw23",
                      "fields": [
                        {
                          "name": null,
                          "type": 186,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": []
                    },
                    {
                      "name": "Raw24",
                      "fields": [
                        {
                          "name": null,
                          "type": 187,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": []
                    },
                    {
                      "name": "Raw25",
                      "fields": [
                        {
                          "name": null,
                          "type": 188,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": []
                    },
                    {
                      "name": "Raw26",
                      "fields": [
                        {
                          "name": null,
                          "type": 189,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 27,
                      "docs": []
                    },
                    {
                      "name": "Raw27",
                      "fields": [
                        {
                          "name": null,
                          "type": 190,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": []
                    },
                    {
                      "name": "Raw28",
                      "fields": [
                        {
                          "name": null,
                          "type": 191,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": []
                    },
                    {
                      "name": "Raw29",
                      "fields": [
                        {
                          "name": null,
                          "type": 192,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": []
                    },
                    {
                      "name": "Raw30",
                      "fields": [
                        {
                          "name": null,
                          "type": 193,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": []
                    },
                    {
                      "name": "Raw31",
                      "fields": [
                        {
                          "name": null,
                          "type": 194,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 32,
                      "docs": []
                    },
                    {
                      "name": "Raw32",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 33,
                      "docs": []
                    },
                    {
                      "name": "BlakeTwo256",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 34,
                      "docs": []
                    },
                    {
                      "name": "Sha256",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 35,
                      "docs": []
                    },
                    {
                      "name": "Keccak256",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 36,
                      "docs": []
                    },
                    {
                      "name": "ShaThree256",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 37,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 167,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 0,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 168,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 1,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 169,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 3,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 170,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 5,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 171,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 6,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 172,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 7,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 173,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 8,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 174,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 9,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 175,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 10,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 176,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 11,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 177,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 12,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 178,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 13,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 179,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 14,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 180,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 15,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 181,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 17,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 182,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 18,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 183,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 19,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 184,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 21,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 185,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 22,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 186,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 23,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 187,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 24,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 188,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 25,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 189,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 26,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 190,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 27,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 191,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 28,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 192,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 29,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 193,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 30,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 194,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 31,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 195,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 165
                }
              },
              "docs": []
            }
          },
          {
            "id": 196,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 104
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 104,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 197,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 198
                }
              },
              "docs": []
            }
          },
          {
            "id": 198,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  166
                ]
              },
              "docs": []
            }
          },
          {
            "id": 199,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "Judgement"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unknown",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "FeePaid",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Reasonable",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "KnownGood",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "OutOfDate",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "LowQuality",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Erroneous",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 200,
            "type": {
              "path": [
                "pallet_recovery",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "as_recovered",
                      "fields": [
                        {
                          "name": "account",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::as_recovered`]."
                      ]
                    },
                    {
                      "name": "set_recovered",
                      "fields": [
                        {
                          "name": "lost",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "rescuer",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_recovered`]."
                      ]
                    },
                    {
                      "name": "create_recovery",
                      "fields": [
                        {
                          "name": "friends",
                          "type": 107,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "threshold",
                          "type": 63,
                          "typeName": "u16",
                          "docs": []
                        },
                        {
                          "name": "delay_period",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::create_recovery`]."
                      ]
                    },
                    {
                      "name": "initiate_recovery",
                      "fields": [
                        {
                          "name": "account",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::initiate_recovery`]."
                      ]
                    },
                    {
                      "name": "vouch_recovery",
                      "fields": [
                        {
                          "name": "lost",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "rescuer",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::vouch_recovery`]."
                      ]
                    },
                    {
                      "name": "claim_recovery",
                      "fields": [
                        {
                          "name": "account",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::claim_recovery`]."
                      ]
                    },
                    {
                      "name": "close_recovery",
                      "fields": [
                        {
                          "name": "rescuer",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::close_recovery`]."
                      ]
                    },
                    {
                      "name": "remove_recovery",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remove_recovery`]."
                      ]
                    },
                    {
                      "name": "cancel_recovered",
                      "fields": [
                        {
                          "name": "account",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::cancel_recovered`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 201,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "vest",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::vest`]."
                      ]
                    },
                    {
                      "name": "vest_other",
                      "fields": [
                        {
                          "name": "target",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::vest_other`]."
                      ]
                    },
                    {
                      "name": "vested_transfer",
                      "fields": [
                        {
                          "name": "target",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "schedule",
                          "type": 202,
                          "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::vested_transfer`]."
                      ]
                    },
                    {
                      "name": "force_vested_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "schedule",
                          "type": 202,
                          "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::force_vested_transfer`]."
                      ]
                    },
                    {
                      "name": "merge_schedules",
                      "fields": [
                        {
                          "name": "schedule1_index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "schedule2_index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::merge_schedules`]."
                      ]
                    },
                    {
                      "name": "force_remove_vesting_schedule",
                      "fields": [
                        {
                          "name": "target",
                          "type": 102,
                          "typeName": "<T::Lookup as StaticLookup>::Source",
                          "docs": []
                        },
                        {
                          "name": "schedule_index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_remove_vesting_schedule`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 202,
            "type": {
              "path": [
                "pallet_vesting",
                "vesting_info",
                "VestingInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "locked",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "per_block",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "starting_block",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 203,
            "type": {
              "path": [
                "pallet_scheduler",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "schedule",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 204,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::schedule`]."
                      ]
                    },
                    {
                      "name": "cancel",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::cancel`]."
                      ]
                    },
                    {
                      "name": "schedule_named",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "TaskName",
                          "docs": []
                        },
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 204,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::schedule_named`]."
                      ]
                    },
                    {
                      "name": "cancel_named",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "TaskName",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::cancel_named`]."
                      ]
                    },
                    {
                      "name": "schedule_after",
                      "fields": [
                        {
                          "name": "after",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 204,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::schedule_after`]."
                      ]
                    },
                    {
                      "name": "schedule_named_after",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "TaskName",
                          "docs": []
                        },
                        {
                          "name": "after",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 204,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::schedule_named_after`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 204,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 56
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 56,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 205,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "note_preimage",
                      "fields": [
                        {
                          "name": "bytes",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::note_preimage`]."
                      ]
                    },
                    {
                      "name": "unnote_preimage",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::unnote_preimage`]."
                      ]
                    },
                    {
                      "name": "request_preimage",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::request_preimage`]."
                      ]
                    },
                    {
                      "name": "unrequest_preimage",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::unrequest_preimage`]."
                      ]
                    },
                    {
                      "name": "ensure_updated",
                      "fields": [
                        {
                          "name": "hashes",
                          "type": 206,
                          "typeName": "Vec<T::Hash>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::ensure_updated`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 206,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 12
                }
              },
              "docs": []
            }
          },
          {
            "id": 207,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "sudo",
                      "fields": [
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::sudo`]."
                      ]
                    },
                    {
                      "name": "sudo_unchecked_weight",
                      "fields": [
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::sudo_unchecked_weight`]."
                      ]
                    },
                    {
                      "name": "set_key",
                      "fields": [
                        {
                          "name": "new",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_key`]."
                      ]
                    },
                    {
                      "name": "sudo_as",
                      "fields": [
                        {
                          "name": "who",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::sudo_as`]."
                      ]
                    },
                    {
                      "name": "remove_key",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_key`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 208,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "proxy",
                      "fields": [
                        {
                          "name": "real",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 209,
                          "typeName": "Option<T::ProxyType>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::proxy`]."
                      ]
                    },
                    {
                      "name": "add_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "proxy_type",
                          "type": 62,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::add_proxy`]."
                      ]
                    },
                    {
                      "name": "remove_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "proxy_type",
                          "type": 62,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::remove_proxy`]."
                      ]
                    },
                    {
                      "name": "remove_proxies",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::remove_proxies`]."
                      ]
                    },
                    {
                      "name": "create_pure",
                      "fields": [
                        {
                          "name": "proxy_type",
                          "type": 62,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 63,
                          "typeName": "u16",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::create_pure`]."
                      ]
                    },
                    {
                      "name": "kill_pure",
                      "fields": [
                        {
                          "name": "spawner",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "proxy_type",
                          "type": 62,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 63,
                          "typeName": "u16",
                          "docs": []
                        },
                        {
                          "name": "height",
                          "type": 92,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "ext_index",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::kill_pure`]."
                      ]
                    },
                    {
                      "name": "announce",
                      "fields": [
                        {
                          "name": "real",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::announce`]."
                      ]
                    },
                    {
                      "name": "remove_announcement",
                      "fields": [
                        {
                          "name": "real",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remove_announcement`]."
                      ]
                    },
                    {
                      "name": "reject_announcement",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::reject_announcement`]."
                      ]
                    },
                    {
                      "name": "proxy_announced",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "real",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 209,
                          "typeName": "Option<T::ProxyType>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::proxy_announced`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 209,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 62
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 62,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 210,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "as_multi_threshold_1",
                      "fields": [
                        {
                          "name": "other_signatories",
                          "type": 107,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::as_multi_threshold_1`]."
                      ]
                    },
                    {
                      "name": "as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 63,
                          "typeName": "u16",
                          "docs": []
                        },
                        {
                          "name": "other_signatories",
                          "type": 107,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "maybe_timepoint",
                          "type": 211,
                          "typeName": "Option<Timepoint<BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::as_multi`]."
                      ]
                    },
                    {
                      "name": "approve_as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 63,
                          "typeName": "u16",
                          "docs": []
                        },
                        {
                          "name": "other_signatories",
                          "type": 107,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "maybe_timepoint",
                          "type": 211,
                          "typeName": "Option<Timepoint<BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::approve_as_multi`]."
                      ]
                    },
                    {
                      "name": "cancel_as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 63,
                          "typeName": "u16",
                          "docs": []
                        },
                        {
                          "name": "other_signatories",
                          "type": 107,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "timepoint",
                          "type": 65,
                          "typeName": "Timepoint<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::cancel_as_multi`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 211,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 65
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 65,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 212,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "submit_unsigned",
                      "fields": [
                        {
                          "name": "raw_solution",
                          "type": 213,
                          "typeName": "Box<RawSolution<SolutionOf<T::MinerConfig>>>",
                          "docs": []
                        },
                        {
                          "name": "witness",
                          "type": 265,
                          "typeName": "SolutionOrSnapshotSize",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::submit_unsigned`]."
                      ]
                    },
                    {
                      "name": "set_minimum_untrusted_score",
                      "fields": [
                        {
                          "name": "maybe_next_score",
                          "type": 266,
                          "typeName": "Option<ElectionScore>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_minimum_untrusted_score`]."
                      ]
                    },
                    {
                      "name": "set_emergency_election_result",
                      "fields": [
                        {
                          "name": "supports",
                          "type": 267,
                          "typeName": "Supports<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_emergency_election_result`]."
                      ]
                    },
                    {
                      "name": "submit",
                      "fields": [
                        {
                          "name": "raw_solution",
                          "type": 213,
                          "typeName": "Box<RawSolution<SolutionOf<T::MinerConfig>>>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::submit`]."
                      ]
                    },
                    {
                      "name": "governance_fallback",
                      "fields": [
                        {
                          "name": "maybe_max_voters",
                          "type": 272,
                          "typeName": "Option<u32>",
                          "docs": []
                        },
                        {
                          "name": "maybe_max_targets",
                          "type": 272,
                          "typeName": "Option<u32>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::governance_fallback`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 213,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "RawSolution"
              ],
              "params": [
                {
                  "name": "S",
                  "type": 214
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "solution",
                      "type": 214,
                      "typeName": "S",
                      "docs": []
                    },
                    {
                      "name": "score",
                      "type": 68,
                      "typeName": "ElectionScore",
                      "docs": []
                    },
                    {
                      "name": "round",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 214,
            "type": {
              "path": [
                "westend_runtime",
                "NposCompactSolution16"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "votes1",
                      "type": 215,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes2",
                      "type": 218,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes3",
                      "type": 223,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes4",
                      "type": 226,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes5",
                      "type": 229,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes6",
                      "type": 232,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes7",
                      "type": 235,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes8",
                      "type": 238,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes9",
                      "type": 241,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes10",
                      "type": 244,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes11",
                      "type": 247,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes12",
                      "type": 250,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes13",
                      "type": 253,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes14",
                      "type": 256,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes15",
                      "type": 259,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes16",
                      "type": 262,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 215,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 216
                }
              },
              "docs": []
            }
          },
          {
            "id": 216,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 217,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 63
                }
              },
              "docs": []
            }
          },
          {
            "id": 218,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 219
                }
              },
              "docs": []
            }
          },
          {
            "id": 219,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  220,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 220,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  217,
                  221
                ]
              },
              "docs": []
            }
          },
          {
            "id": 221,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 222
                }
              },
              "docs": []
            }
          },
          {
            "id": 222,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "PerU16"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 63,
                      "typeName": "u16",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 223,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 224
                }
              },
              "docs": []
            }
          },
          {
            "id": 224,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  225,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 225,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 2,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 226,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 227
                }
              },
              "docs": []
            }
          },
          {
            "id": 227,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  228,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 228,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 3,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 229,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 230
                }
              },
              "docs": []
            }
          },
          {
            "id": 230,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  231,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 231,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 4,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 232,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 233
                }
              },
              "docs": []
            }
          },
          {
            "id": 233,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  234,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 234,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 5,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 235,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 236
                }
              },
              "docs": []
            }
          },
          {
            "id": 236,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  237,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 237,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 6,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 238,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 239
                }
              },
              "docs": []
            }
          },
          {
            "id": 239,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  240,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 240,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 7,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 241,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 242
                }
              },
              "docs": []
            }
          },
          {
            "id": 242,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  243,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 243,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 8,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 244,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 245
                }
              },
              "docs": []
            }
          },
          {
            "id": 245,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  246,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 246,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 9,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 247,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 248
                }
              },
              "docs": []
            }
          },
          {
            "id": 248,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  249,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 249,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 10,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 250,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 251
                }
              },
              "docs": []
            }
          },
          {
            "id": 251,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  252,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 252,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 11,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 253,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 254
                }
              },
              "docs": []
            }
          },
          {
            "id": 254,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  255,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 255,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 12,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 256,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 257
                }
              },
              "docs": []
            }
          },
          {
            "id": 257,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  258,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 258,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 13,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 259,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 260
                }
              },
              "docs": []
            }
          },
          {
            "id": 260,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  261,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 261,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 14,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 262,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 263
                }
              },
              "docs": []
            }
          },
          {
            "id": 263,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  92,
                  264,
                  217
                ]
              },
              "docs": []
            }
          },
          {
            "id": 264,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 15,
                  "type": 220
                }
              },
              "docs": []
            }
          },
          {
            "id": 265,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "SolutionOrSnapshotSize"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "voters",
                      "type": 92,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "targets",
                      "type": 92,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 266,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 68
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 68,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 267,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 268
                }
              },
              "docs": []
            }
          },
          {
            "id": 268,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  269
                ]
              },
              "docs": []
            }
          },
          {
            "id": 269,
            "type": {
              "path": [
                "sp_npos_elections",
                "Support"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 6,
                      "typeName": "ExtendedBalance",
                      "docs": []
                    },
                    {
                      "name": "voters",
                      "type": 270,
                      "typeName": "Vec<(AccountId, ExtendedBalance)>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 270,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 271
                }
              },
              "docs": []
            }
          },
          {
            "id": 271,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 272,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 273,
            "type": {
              "path": [
                "pallet_bags_list",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "rebag",
                      "fields": [
                        {
                          "name": "dislocated",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::rebag`]."
                      ]
                    },
                    {
                      "name": "put_in_front_of",
                      "fields": [
                        {
                          "name": "lighter",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::put_in_front_of`]."
                      ]
                    },
                    {
                      "name": "put_in_front_of_other",
                      "fields": [
                        {
                          "name": "heavier",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "lighter",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::put_in_front_of_other`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 274,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "join",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::join`]."
                      ]
                    },
                    {
                      "name": "bond_extra",
                      "fields": [
                        {
                          "name": "extra",
                          "type": 275,
                          "typeName": "BondExtra<BalanceOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::bond_extra`]."
                      ]
                    },
                    {
                      "name": "claim_payout",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::claim_payout`]."
                      ]
                    },
                    {
                      "name": "unbond",
                      "fields": [
                        {
                          "name": "member_account",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "unbonding_points",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::unbond`]."
                      ]
                    },
                    {
                      "name": "pool_withdraw_unbonded",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "num_slashing_spans",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::pool_withdraw_unbonded`]."
                      ]
                    },
                    {
                      "name": "withdraw_unbonded",
                      "fields": [
                        {
                          "name": "member_account",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "num_slashing_spans",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::withdraw_unbonded`]."
                      ]
                    },
                    {
                      "name": "create",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "root",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "nominator",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "bouncer",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::create`]."
                      ]
                    },
                    {
                      "name": "create_with_pool_id",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "root",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "nominator",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "bouncer",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::create_with_pool_id`]."
                      ]
                    },
                    {
                      "name": "nominate",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "validators",
                          "type": 107,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::nominate`]."
                      ]
                    },
                    {
                      "name": "set_state",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "state",
                          "type": 73,
                          "typeName": "PoolState",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::set_state`]."
                      ]
                    },
                    {
                      "name": "set_metadata",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "metadata",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::set_metadata`]."
                      ]
                    },
                    {
                      "name": "set_configs",
                      "fields": [
                        {
                          "name": "min_join_bond",
                          "type": 276,
                          "typeName": "ConfigOp<BalanceOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "min_create_bond",
                          "type": 276,
                          "typeName": "ConfigOp<BalanceOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "max_pools",
                          "type": 277,
                          "typeName": "ConfigOp<u32>",
                          "docs": []
                        },
                        {
                          "name": "max_members",
                          "type": 277,
                          "typeName": "ConfigOp<u32>",
                          "docs": []
                        },
                        {
                          "name": "max_members_per_pool",
                          "type": 277,
                          "typeName": "ConfigOp<u32>",
                          "docs": []
                        },
                        {
                          "name": "global_max_commission",
                          "type": 278,
                          "typeName": "ConfigOp<Perbill>",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::set_configs`]."
                      ]
                    },
                    {
                      "name": "update_roles",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "new_root",
                          "type": 279,
                          "typeName": "ConfigOp<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "new_nominator",
                          "type": 279,
                          "typeName": "ConfigOp<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "new_bouncer",
                          "type": 279,
                          "typeName": "ConfigOp<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::update_roles`]."
                      ]
                    },
                    {
                      "name": "chill",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::chill`]."
                      ]
                    },
                    {
                      "name": "bond_extra_other",
                      "fields": [
                        {
                          "name": "member",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "extra",
                          "type": 275,
                          "typeName": "BondExtra<BalanceOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::bond_extra_other`]."
                      ]
                    },
                    {
                      "name": "set_claim_permission",
                      "fields": [
                        {
                          "name": "permission",
                          "type": 280,
                          "typeName": "ClaimPermission",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::set_claim_permission`]."
                      ]
                    },
                    {
                      "name": "claim_payout_other",
                      "fields": [
                        {
                          "name": "other",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::claim_payout_other`]."
                      ]
                    },
                    {
                      "name": "set_commission",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "new_commission",
                          "type": 74,
                          "typeName": "Option<(Perbill, T::AccountId)>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::set_commission`]."
                      ]
                    },
                    {
                      "name": "set_commission_max",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "max_commission",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::set_commission_max`]."
                      ]
                    },
                    {
                      "name": "set_commission_change_rate",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "change_rate",
                          "type": 76,
                          "typeName": "CommissionChangeRate<BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::set_commission_change_rate`]."
                      ]
                    },
                    {
                      "name": "claim_commission",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "See [`Pallet::claim_commission`]."
                      ]
                    },
                    {
                      "name": "adjust_pool_deposit",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "See [`Pallet::adjust_pool_deposit`]."
                      ]
                    },
                    {
                      "name": "set_commission_claim_permission",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "permission",
                          "type": 77,
                          "typeName": "Option<CommissionClaimPermission<T::AccountId>>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "See [`Pallet::set_commission_claim_permission`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 275,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "BondExtra"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FreeBalance",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Rewards",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 276,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 277,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 278,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 36
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 36,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 279,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 280,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "ClaimPermission"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Permissioned",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "PermissionlessCompound",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "PermissionlessWithdraw",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "PermissionlessAll",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 281,
            "type": {
              "path": [
                "pallet_fast_unstake",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "register_fast_unstake",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::register_fast_unstake`]."
                      ]
                    },
                    {
                      "name": "deregister",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::deregister`]."
                      ]
                    },
                    {
                      "name": "control",
                      "fields": [
                        {
                          "name": "eras_to_check",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::control`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 282,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "poll_index",
                          "type": 92,
                          "typeName": "PollIndexOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "vote",
                          "type": 283,
                          "typeName": "AccountVote<BalanceOf<T, I>>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "delegate",
                      "fields": [
                        {
                          "name": "class",
                          "type": 63,
                          "typeName": "ClassOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "conviction",
                          "type": 285,
                          "typeName": "Conviction",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::delegate`]."
                      ]
                    },
                    {
                      "name": "undelegate",
                      "fields": [
                        {
                          "name": "class",
                          "type": 63,
                          "typeName": "ClassOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::undelegate`]."
                      ]
                    },
                    {
                      "name": "unlock",
                      "fields": [
                        {
                          "name": "class",
                          "type": 63,
                          "typeName": "ClassOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::unlock`]."
                      ]
                    },
                    {
                      "name": "remove_vote",
                      "fields": [
                        {
                          "name": "class",
                          "type": 286,
                          "typeName": "Option<ClassOf<T, I>>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "PollIndexOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_vote`]."
                      ]
                    },
                    {
                      "name": "remove_other_vote",
                      "fields": [
                        {
                          "name": "target",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "class",
                          "type": 63,
                          "typeName": "ClassOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "PollIndexOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::remove_other_vote`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 283,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "vote",
                "AccountVote"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Standard",
                      "fields": [
                        {
                          "name": "vote",
                          "type": 284,
                          "typeName": "Vote",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Split",
                      "fields": [
                        {
                          "name": "aye",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        },
                        {
                          "name": "nay",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "SplitAbstain",
                      "fields": [
                        {
                          "name": "aye",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        },
                        {
                          "name": "nay",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        },
                        {
                          "name": "abstain",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 284,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "vote",
                "Vote"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 2,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 285,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "conviction",
                "Conviction"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Locked1x",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Locked2x",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Locked3x",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Locked4x",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Locked5x",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Locked6x",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 286,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 63
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 63,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 287,
            "type": {
              "path": [
                "pallet_referenda",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "submit",
                      "fields": [
                        {
                          "name": "proposal_origin",
                          "type": 148,
                          "typeName": "Box<PalletsOriginOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "proposal",
                          "type": 83,
                          "typeName": "BoundedCallOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "enactment_moment",
                          "type": 288,
                          "typeName": "DispatchTime<BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::submit`]."
                      ]
                    },
                    {
                      "name": "place_decision_deposit",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::place_decision_deposit`]."
                      ]
                    },
                    {
                      "name": "refund_decision_deposit",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::refund_decision_deposit`]."
                      ]
                    },
                    {
                      "name": "cancel",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::cancel`]."
                      ]
                    },
                    {
                      "name": "kill",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::kill`]."
                      ]
                    },
                    {
                      "name": "nudge_referendum",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::nudge_referendum`]."
                      ]
                    },
                    {
                      "name": "one_fewer_deciding",
                      "fields": [
                        {
                          "name": "track",
                          "type": 63,
                          "typeName": "TrackIdOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::one_fewer_deciding`]."
                      ]
                    },
                    {
                      "name": "refund_submission_deposit",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::refund_submission_deposit`]."
                      ]
                    },
                    {
                      "name": "set_metadata",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        },
                        {
                          "name": "maybe_hash",
                          "type": 289,
                          "typeName": "Option<T::Hash>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_metadata`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 288,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "schedule",
                "DispatchTime"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "At",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "After",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 289,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 12,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 290,
            "type": {
              "path": [
                "pallet_whitelist",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "whitelist_call",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::whitelist_call`]."
                      ]
                    },
                    {
                      "name": "remove_whitelisted_call",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::remove_whitelisted_call`]."
                      ]
                    },
                    {
                      "name": "dispatch_whitelisted_call",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "call_encoded_len",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "call_weight_witness",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::dispatch_whitelisted_call`]."
                      ]
                    },
                    {
                      "name": "dispatch_whitelisted_call_with_preimage",
                      "fields": [
                        {
                          "name": "call",
                          "type": 84,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::dispatch_whitelisted_call_with_preimage`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 291,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "propose_spend",
                      "fields": [
                        {
                          "name": "value",
                          "type": 106,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::propose_spend`]."
                      ]
                    },
                    {
                      "name": "reject_proposal",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 92,
                          "typeName": "ProposalIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::reject_proposal`]."
                      ]
                    },
                    {
                      "name": "approve_proposal",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 92,
                          "typeName": "ProposalIndex",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::approve_proposal`]."
                      ]
                    },
                    {
                      "name": "spend_local",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 106,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 102,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::spend_local`]."
                      ]
                    },
                    {
                      "name": "remove_approval",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 92,
                          "typeName": "ProposalIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_approval`]."
                      ]
                    },
                    {
                      "name": "spend",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 292,
                          "typeName": "Box<T::AssetKind>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 106,
                          "typeName": "AssetBalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 294,
                          "typeName": "Box<BeneficiaryLookupOf<T, I>>",
                          "docs": []
                        },
                        {
                          "name": "valid_from",
                          "type": 272,
                          "typeName": "Option<BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::spend`]."
                      ]
                    },
                    {
                      "name": "payout",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::payout`]."
                      ]
                    },
                    {
                      "name": "check_status",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::check_status`]."
                      ]
                    },
                    {
                      "name": "void_spend",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::void_spend`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 292,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "impls",
                "VersionedLocatableAsset"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": "location",
                          "type": 154,
                          "typeName": "xcm::v3::MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "asset_id",
                          "type": 293,
                          "typeName": "xcm::v3::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 293,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "AssetId"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Concrete",
                      "fields": [
                        {
                          "name": null,
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Abstract",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 294,
            "type": {
              "path": [
                "xcm",
                "VersionedMultiLocation"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 295,
                          "typeName": "v2::MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": null,
                          "type": 154,
                          "typeName": "v3::MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 295,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multilocation",
                "MultiLocation"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parents",
                      "type": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "interior",
                      "type": 296,
                      "typeName": "Junctions",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 296,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multilocation",
                "Junctions"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Here",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "X1",
                      "fields": [
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "X2",
                      "fields": [
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "X3",
                      "fields": [
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "X4",
                      "fields": [
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "X5",
                      "fields": [
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "X6",
                      "fields": [
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "X7",
                      "fields": [
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "X8",
                      "fields": [
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 297,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 297,
            "type": {
              "path": [
                "xcm",
                "v2",
                "junction",
                "Junction"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Parachain",
                      "fields": [
                        {
                          "name": null,
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "AccountId32",
                      "fields": [
                        {
                          "name": "network",
                          "type": 298,
                          "typeName": "NetworkId",
                          "docs": []
                        },
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "AccountIndex64",
                      "fields": [
                        {
                          "name": "network",
                          "type": 298,
                          "typeName": "NetworkId",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "AccountKey20",
                      "fields": [
                        {
                          "name": "network",
                          "type": 298,
                          "typeName": "NetworkId",
                          "docs": []
                        },
                        {
                          "name": "key",
                          "type": 104,
                          "typeName": "[u8; 20]",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "PalletInstance",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "GeneralIndex",
                      "fields": [
                        {
                          "name": null,
                          "type": 106,
                          "typeName": "u128",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "GeneralKey",
                      "fields": [
                        {
                          "name": null,
                          "type": 299,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "OnlyChild",
                      "fields": [],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "Plurality",
                      "fields": [
                        {
                          "name": "id",
                          "type": 300,
                          "typeName": "BodyId",
                          "docs": []
                        },
                        {
                          "name": "part",
                          "type": 301,
                          "typeName": "BodyPart",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 298,
            "type": {
              "path": [
                "xcm",
                "v2",
                "NetworkId"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Any",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Named",
                      "fields": [
                        {
                          "name": null,
                          "type": 299,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Polkadot",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Kusama",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 299,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 300,
            "type": {
              "path": [
                "xcm",
                "v2",
                "BodyId"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unit",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Named",
                      "fields": [
                        {
                          "name": null,
                          "type": 299,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "name": null,
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Executive",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Technical",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Legislative",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Judicial",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Defense",
                      "fields": [],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "Administration",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "Treasury",
                      "fields": [],
                      "index": 9,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 301,
            "type": {
              "path": [
                "xcm",
                "v2",
                "BodyPart"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Voice",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": "count",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Fraction",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "denom",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "AtLeastProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "denom",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "MoreThanProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "denom",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 302,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "configuration",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_validation_upgrade_cooldown",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_validation_upgrade_cooldown`]."
                      ]
                    },
                    {
                      "name": "set_validation_upgrade_delay",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_validation_upgrade_delay`]."
                      ]
                    },
                    {
                      "name": "set_code_retention_period",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_code_retention_period`]."
                      ]
                    },
                    {
                      "name": "set_max_code_size",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_max_code_size`]."
                      ]
                    },
                    {
                      "name": "set_max_pov_size",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_max_pov_size`]."
                      ]
                    },
                    {
                      "name": "set_max_head_data_size",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::set_max_head_data_size`]."
                      ]
                    },
                    {
                      "name": "set_on_demand_cores",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::set_on_demand_cores`]."
                      ]
                    },
                    {
                      "name": "set_on_demand_retries",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_on_demand_retries`]."
                      ]
                    },
                    {
                      "name": "set_group_rotation_frequency",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_group_rotation_frequency`]."
                      ]
                    },
                    {
                      "name": "set_paras_availability_period",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::set_paras_availability_period`]."
                      ]
                    },
                    {
                      "name": "set_scheduling_lookahead",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::set_scheduling_lookahead`]."
                      ]
                    },
                    {
                      "name": "set_max_validators_per_core",
                      "fields": [
                        {
                          "name": "new",
                          "type": 272,
                          "typeName": "Option<u32>",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::set_max_validators_per_core`]."
                      ]
                    },
                    {
                      "name": "set_max_validators",
                      "fields": [
                        {
                          "name": "new",
                          "type": 272,
                          "typeName": "Option<u32>",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::set_max_validators`]."
                      ]
                    },
                    {
                      "name": "set_dispute_period",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "SessionIndex",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::set_dispute_period`]."
                      ]
                    },
                    {
                      "name": "set_dispute_post_conclusion_acceptance_period",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::set_dispute_post_conclusion_acceptance_period`]."
                      ]
                    },
                    {
                      "name": "set_no_show_slots",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::set_no_show_slots`]."
                      ]
                    },
                    {
                      "name": "set_n_delay_tranches",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::set_n_delay_tranches`]."
                      ]
                    },
                    {
                      "name": "set_zeroth_delay_tranche_width",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "See [`Pallet::set_zeroth_delay_tranche_width`]."
                      ]
                    },
                    {
                      "name": "set_needed_approvals",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "See [`Pallet::set_needed_approvals`]."
                      ]
                    },
                    {
                      "name": "set_relay_vrf_modulo_samples",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "See [`Pallet::set_relay_vrf_modulo_samples`]."
                      ]
                    },
                    {
                      "name": "set_max_upward_queue_count",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "See [`Pallet::set_max_upward_queue_count`]."
                      ]
                    },
                    {
                      "name": "set_max_upward_queue_size",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "See [`Pallet::set_max_upward_queue_size`]."
                      ]
                    },
                    {
                      "name": "set_max_downward_message_size",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "See [`Pallet::set_max_downward_message_size`]."
                      ]
                    },
                    {
                      "name": "set_max_upward_message_size",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 27,
                      "docs": [
                        "See [`Pallet::set_max_upward_message_size`]."
                      ]
                    },
                    {
                      "name": "set_max_upward_message_num_per_candidate",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": [
                        "See [`Pallet::set_max_upward_message_num_per_candidate`]."
                      ]
                    },
                    {
                      "name": "set_hrmp_open_request_ttl",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": [
                        "See [`Pallet::set_hrmp_open_request_ttl`]."
                      ]
                    },
                    {
                      "name": "set_hrmp_sender_deposit",
                      "fields": [
                        {
                          "name": "new",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": [
                        "See [`Pallet::set_hrmp_sender_deposit`]."
                      ]
                    },
                    {
                      "name": "set_hrmp_recipient_deposit",
                      "fields": [
                        {
                          "name": "new",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": [
                        "See [`Pallet::set_hrmp_recipient_deposit`]."
                      ]
                    },
                    {
                      "name": "set_hrmp_channel_max_capacity",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 32,
                      "docs": [
                        "See [`Pallet::set_hrmp_channel_max_capacity`]."
                      ]
                    },
                    {
                      "name": "set_hrmp_channel_max_total_size",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 33,
                      "docs": [
                        "See [`Pallet::set_hrmp_channel_max_total_size`]."
                      ]
                    },
                    {
                      "name": "set_hrmp_max_parachain_inbound_channels",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 34,
                      "docs": [
                        "See [`Pallet::set_hrmp_max_parachain_inbound_channels`]."
                      ]
                    },
                    {
                      "name": "set_hrmp_channel_max_message_size",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 36,
                      "docs": [
                        "See [`Pallet::set_hrmp_channel_max_message_size`]."
                      ]
                    },
                    {
                      "name": "set_hrmp_max_parachain_outbound_channels",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 37,
                      "docs": [
                        "See [`Pallet::set_hrmp_max_parachain_outbound_channels`]."
                      ]
                    },
                    {
                      "name": "set_hrmp_max_message_num_per_candidate",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 39,
                      "docs": [
                        "See [`Pallet::set_hrmp_max_message_num_per_candidate`]."
                      ]
                    },
                    {
                      "name": "set_pvf_voting_ttl",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "SessionIndex",
                          "docs": []
                        }
                      ],
                      "index": 42,
                      "docs": [
                        "See [`Pallet::set_pvf_voting_ttl`]."
                      ]
                    },
                    {
                      "name": "set_minimum_validation_upgrade_delay",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 43,
                      "docs": [
                        "See [`Pallet::set_minimum_validation_upgrade_delay`]."
                      ]
                    },
                    {
                      "name": "set_bypass_consistency_check",
                      "fields": [
                        {
                          "name": "new",
                          "type": 39,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 44,
                      "docs": [
                        "See [`Pallet::set_bypass_consistency_check`]."
                      ]
                    },
                    {
                      "name": "set_async_backing_params",
                      "fields": [
                        {
                          "name": "new",
                          "type": 303,
                          "typeName": "AsyncBackingParams",
                          "docs": []
                        }
                      ],
                      "index": 45,
                      "docs": [
                        "See [`Pallet::set_async_backing_params`]."
                      ]
                    },
                    {
                      "name": "set_executor_params",
                      "fields": [
                        {
                          "name": "new",
                          "type": 304,
                          "typeName": "ExecutorParams",
                          "docs": []
                        }
                      ],
                      "index": 46,
                      "docs": [
                        "See [`Pallet::set_executor_params`]."
                      ]
                    },
                    {
                      "name": "set_on_demand_base_fee",
                      "fields": [
                        {
                          "name": "new",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 47,
                      "docs": [
                        "See [`Pallet::set_on_demand_base_fee`]."
                      ]
                    },
                    {
                      "name": "set_on_demand_fee_variability",
                      "fields": [
                        {
                          "name": "new",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 48,
                      "docs": [
                        "See [`Pallet::set_on_demand_fee_variability`]."
                      ]
                    },
                    {
                      "name": "set_on_demand_queue_max_size",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 49,
                      "docs": [
                        "See [`Pallet::set_on_demand_queue_max_size`]."
                      ]
                    },
                    {
                      "name": "set_on_demand_target_queue_utilization",
                      "fields": [
                        {
                          "name": "new",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 50,
                      "docs": [
                        "See [`Pallet::set_on_demand_target_queue_utilization`]."
                      ]
                    },
                    {
                      "name": "set_on_demand_ttl",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 51,
                      "docs": [
                        "See [`Pallet::set_on_demand_ttl`]."
                      ]
                    },
                    {
                      "name": "set_minimum_backing_votes",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 52,
                      "docs": [
                        "See [`Pallet::set_minimum_backing_votes`]."
                      ]
                    },
                    {
                      "name": "set_node_feature",
                      "fields": [
                        {
                          "name": "index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 39,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 53,
                      "docs": [
                        "See [`Pallet::set_node_feature`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 303,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "async_backing",
                "AsyncBackingParams"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_candidate_depth",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "allowed_ancestry_len",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 304,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "executor_params",
                "ExecutorParams"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 305,
                      "typeName": "Vec<ExecutorParam>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 305,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 306
                }
              },
              "docs": []
            }
          },
          {
            "id": 306,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "executor_params",
                "ExecutorParam"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MaxMemoryPages",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "StackLogicalMax",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "StackNativeMax",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "PrecheckingMaxMemory",
                      "fields": [
                        {
                          "name": null,
                          "type": 11,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "PvfPrepTimeout",
                      "fields": [
                        {
                          "name": null,
                          "type": 307,
                          "typeName": "PvfPrepKind",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 11,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "PvfExecTimeout",
                      "fields": [
                        {
                          "name": null,
                          "type": 308,
                          "typeName": "PvfExecKind",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 11,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "WasmExtBulkMemory",
                      "fields": [],
                      "index": 7,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 307,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "PvfPrepKind"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Precheck",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Prepare",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 308,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "PvfExecKind"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Backing",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Approval",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 309,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "shared",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": []
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 310,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "inclusion",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": []
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 311,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "paras_inherent",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "enter",
                      "fields": [
                        {
                          "name": "data",
                          "type": 312,
                          "typeName": "ParachainsInherentData<HeaderFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::enter`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 312,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "InherentData"
              ],
              "params": [
                {
                  "name": "HDR",
                  "type": 91
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "bitfields",
                      "type": 313,
                      "typeName": "UncheckedSignedAvailabilityBitfields",
                      "docs": []
                    },
                    {
                      "name": "backed_candidates",
                      "type": 321,
                      "typeName": "Vec<BackedCandidate<HDR::Hash>>",
                      "docs": []
                    },
                    {
                      "name": "disputes",
                      "type": 338,
                      "typeName": "MultiDisputeStatementSet",
                      "docs": []
                    },
                    {
                      "name": "parent_header",
                      "type": 91,
                      "typeName": "HDR",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 313,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 314
                }
              },
              "docs": []
            }
          },
          {
            "id": 314,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "signed",
                "UncheckedSigned"
              ],
              "params": [
                {
                  "name": "Payload",
                  "type": 315
                },
                {
                  "name": "RealPayload",
                  "type": 315
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "payload",
                      "type": 315,
                      "typeName": "Payload",
                      "docs": []
                    },
                    {
                      "name": "validator_index",
                      "type": 318,
                      "typeName": "ValidatorIndex",
                      "docs": []
                    },
                    {
                      "name": "signature",
                      "type": 319,
                      "typeName": "ValidatorSignature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 315,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "AvailabilityBitfield"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 316,
                      "typeName": "BitVec<u8, bitvec::order::Lsb0>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 316,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "bitSequence": {
                  "bitStoreType": 2,
                  "bitOrderType": 317
                }
              },
              "docs": []
            }
          },
          {
            "id": 317,
            "type": {
              "path": [
                "bitvec",
                "order",
                "Lsb0"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 318,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "ValidatorIndex"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 319,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "validator_app",
                "Signature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 320,
                      "typeName": "sr25519::Signature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 320,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Signature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 141,
                      "typeName": "[u8; 64]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 321,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 322
                }
              },
              "docs": []
            }
          },
          {
            "id": 322,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "BackedCandidate"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "candidate",
                      "type": 323,
                      "typeName": "CommittedCandidateReceipt<H>",
                      "docs": []
                    },
                    {
                      "name": "validity_votes",
                      "type": 336,
                      "typeName": "Vec<ValidityAttestation>",
                      "docs": []
                    },
                    {
                      "name": "validator_indices",
                      "type": 316,
                      "typeName": "BitVec<u8, bitvec::order::Lsb0>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 323,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "CommittedCandidateReceipt"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "descriptor",
                      "type": 324,
                      "typeName": "CandidateDescriptor<H>",
                      "docs": []
                    },
                    {
                      "name": "commitments",
                      "type": 328,
                      "typeName": "CandidateCommitments",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 324,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "CandidateDescriptor"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "para_id",
                      "type": 152,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "relay_parent",
                      "type": 12,
                      "typeName": "H",
                      "docs": []
                    },
                    {
                      "name": "collator",
                      "type": 325,
                      "typeName": "CollatorId",
                      "docs": []
                    },
                    {
                      "name": "persisted_validation_data_hash",
                      "type": 12,
                      "typeName": "Hash",
                      "docs": []
                    },
                    {
                      "name": "pov_hash",
                      "type": 12,
                      "typeName": "Hash",
                      "docs": []
                    },
                    {
                      "name": "erasure_root",
                      "type": 12,
                      "typeName": "Hash",
                      "docs": []
                    },
                    {
                      "name": "signature",
                      "type": 326,
                      "typeName": "CollatorSignature",
                      "docs": []
                    },
                    {
                      "name": "para_head",
                      "type": 12,
                      "typeName": "Hash",
                      "docs": []
                    },
                    {
                      "name": "validation_code_hash",
                      "type": 327,
                      "typeName": "ValidationCodeHash",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 325,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "collator_app",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 94,
                      "typeName": "sr25519::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 326,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "collator_app",
                "Signature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 320,
                      "typeName": "sr25519::Signature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 327,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "ValidationCodeHash"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 12,
                      "typeName": "Hash",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 328,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "CandidateCommitments"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "upward_messages",
                      "type": 329,
                      "typeName": "UpwardMessages",
                      "docs": []
                    },
                    {
                      "name": "horizontal_messages",
                      "type": 330,
                      "typeName": "HorizontalMessages",
                      "docs": []
                    },
                    {
                      "name": "new_validation_code",
                      "type": 333,
                      "typeName": "Option<ValidationCode>",
                      "docs": []
                    },
                    {
                      "name": "head_data",
                      "type": 335,
                      "typeName": "HeadData",
                      "docs": []
                    },
                    {
                      "name": "processed_downward_messages",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "hrmp_watermark",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 329,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 13
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 88,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 330,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 331
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 332,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 331,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "OutboundHrmpMessage"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 152
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "recipient",
                      "type": 152,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "type": 13,
                      "typeName": "sp_std::vec::Vec<u8>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 332,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 331
                }
              },
              "docs": []
            }
          },
          {
            "id": 333,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 334
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 334,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 334,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "ValidationCode"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 335,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "HeadData"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 336,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 337
                }
              },
              "docs": []
            }
          },
          {
            "id": 337,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "ValidityAttestation"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Implicit",
                      "fields": [
                        {
                          "name": null,
                          "type": 319,
                          "typeName": "ValidatorSignature",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Explicit",
                      "fields": [
                        {
                          "name": null,
                          "type": 319,
                          "typeName": "ValidatorSignature",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 338,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 339
                }
              },
              "docs": []
            }
          },
          {
            "id": 339,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "DisputeStatementSet"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "candidate_hash",
                      "type": 340,
                      "typeName": "CandidateHash",
                      "docs": []
                    },
                    {
                      "name": "session",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    },
                    {
                      "name": "statements",
                      "type": 341,
                      "typeName": "Vec<(DisputeStatement, ValidatorIndex, ValidatorSignature)>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 340,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "CandidateHash"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 12,
                      "typeName": "Hash",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 341,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 342
                }
              },
              "docs": []
            }
          },
          {
            "id": 342,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  343,
                  318,
                  319
                ]
              },
              "docs": []
            }
          },
          {
            "id": 343,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "DisputeStatement"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Valid",
                      "fields": [
                        {
                          "name": null,
                          "type": 344,
                          "typeName": "ValidDisputeStatementKind",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Invalid",
                      "fields": [
                        {
                          "name": null,
                          "type": 345,
                          "typeName": "InvalidDisputeStatementKind",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 344,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "ValidDisputeStatementKind"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Explicit",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "BackingSeconded",
                      "fields": [
                        {
                          "name": null,
                          "type": 12,
                          "typeName": "Hash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "BackingValid",
                      "fields": [
                        {
                          "name": null,
                          "type": 12,
                          "typeName": "Hash",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "ApprovalChecking",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 345,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "InvalidDisputeStatementKind"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Explicit",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 346,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "paras",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "force_set_current_code",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "new_code",
                          "type": 334,
                          "typeName": "ValidationCode",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::force_set_current_code`]."
                      ]
                    },
                    {
                      "name": "force_set_current_head",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "new_head",
                          "type": 335,
                          "typeName": "HeadData",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::force_set_current_head`]."
                      ]
                    },
                    {
                      "name": "force_schedule_code_upgrade",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "new_code",
                          "type": 334,
                          "typeName": "ValidationCode",
                          "docs": []
                        },
                        {
                          "name": "relay_parent_number",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::force_schedule_code_upgrade`]."
                      ]
                    },
                    {
                      "name": "force_note_new_head",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "new_head",
                          "type": 335,
                          "typeName": "HeadData",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::force_note_new_head`]."
                      ]
                    },
                    {
                      "name": "force_queue_action",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_queue_action`]."
                      ]
                    },
                    {
                      "name": "add_trusted_validation_code",
                      "fields": [
                        {
                          "name": "validation_code",
                          "type": 334,
                          "typeName": "ValidationCode",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::add_trusted_validation_code`]."
                      ]
                    },
                    {
                      "name": "poke_unused_validation_code",
                      "fields": [
                        {
                          "name": "validation_code_hash",
                          "type": 327,
                          "typeName": "ValidationCodeHash",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::poke_unused_validation_code`]."
                      ]
                    },
                    {
                      "name": "include_pvf_check_statement",
                      "fields": [
                        {
                          "name": "stmt",
                          "type": 347,
                          "typeName": "PvfCheckStatement",
                          "docs": []
                        },
                        {
                          "name": "signature",
                          "type": 319,
                          "typeName": "ValidatorSignature",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::include_pvf_check_statement`]."
                      ]
                    },
                    {
                      "name": "force_set_most_recent_context",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "context",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::force_set_most_recent_context`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 347,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "PvfCheckStatement"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "accept",
                      "type": 39,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "subject",
                      "type": 327,
                      "typeName": "ValidationCodeHash",
                      "docs": []
                    },
                    {
                      "name": "session_index",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    },
                    {
                      "name": "validator_index",
                      "type": 318,
                      "typeName": "ValidatorIndex",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 348,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "initializer",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "force_approve",
                      "fields": [
                        {
                          "name": "up_to",
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::force_approve`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 349,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "hrmp",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "hrmp_init_open_channel",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "proposed_max_capacity",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "proposed_max_message_size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::hrmp_init_open_channel`]."
                      ]
                    },
                    {
                      "name": "hrmp_accept_open_channel",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::hrmp_accept_open_channel`]."
                      ]
                    },
                    {
                      "name": "hrmp_close_channel",
                      "fields": [
                        {
                          "name": "channel_id",
                          "type": 350,
                          "typeName": "HrmpChannelId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::hrmp_close_channel`]."
                      ]
                    },
                    {
                      "name": "force_clean_hrmp",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "num_inbound",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "num_outbound",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::force_clean_hrmp`]."
                      ]
                    },
                    {
                      "name": "force_process_hrmp_open",
                      "fields": [
                        {
                          "name": "channels",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_process_hrmp_open`]."
                      ]
                    },
                    {
                      "name": "force_process_hrmp_close",
                      "fields": [
                        {
                          "name": "channels",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_process_hrmp_close`]."
                      ]
                    },
                    {
                      "name": "hrmp_cancel_open_request",
                      "fields": [
                        {
                          "name": "channel_id",
                          "type": 350,
                          "typeName": "HrmpChannelId",
                          "docs": []
                        },
                        {
                          "name": "open_requests",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::hrmp_cancel_open_request`]."
                      ]
                    },
                    {
                      "name": "force_open_hrmp_channel",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "recipient",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "max_capacity",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_message_size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::force_open_hrmp_channel`]."
                      ]
                    },
                    {
                      "name": "establish_system_channel",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "recipient",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::establish_system_channel`]."
                      ]
                    },
                    {
                      "name": "poke_channel_deposits",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "recipient",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::poke_channel_deposits`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 350,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "HrmpChannelId"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sender",
                      "type": 152,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "recipient",
                      "type": 152,
                      "typeName": "Id",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 351,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "disputes",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "force_unfreeze",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::force_unfreeze`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 352,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "disputes",
                "slashing",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "report_dispute_lost_unsigned",
                      "fields": [
                        {
                          "name": "dispute_proof",
                          "type": 353,
                          "typeName": "Box<DisputeProof>",
                          "docs": []
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 96,
                          "typeName": "T::KeyOwnerProof",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::report_dispute_lost_unsigned`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 353,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "slashing",
                "DisputeProof"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "time_slot",
                      "type": 354,
                      "typeName": "DisputesTimeSlot",
                      "docs": []
                    },
                    {
                      "name": "kind",
                      "type": 355,
                      "typeName": "SlashingOffenceKind",
                      "docs": []
                    },
                    {
                      "name": "validator_index",
                      "type": 318,
                      "typeName": "ValidatorIndex",
                      "docs": []
                    },
                    {
                      "name": "validator_id",
                      "type": 131,
                      "typeName": "ValidatorId",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 354,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "slashing",
                "DisputesTimeSlot"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "session_index",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    },
                    {
                      "name": "candidate_hash",
                      "type": 340,
                      "typeName": "CandidateHash",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 355,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "slashing",
                "SlashingOffenceKind"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ForInvalid",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "AgainstValid",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 356,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "paras_registrar",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "register",
                      "fields": [
                        {
                          "name": "id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "genesis_head",
                          "type": 335,
                          "typeName": "HeadData",
                          "docs": []
                        },
                        {
                          "name": "validation_code",
                          "type": 334,
                          "typeName": "ValidationCode",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::register`]."
                      ]
                    },
                    {
                      "name": "force_register",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "genesis_head",
                          "type": 335,
                          "typeName": "HeadData",
                          "docs": []
                        },
                        {
                          "name": "validation_code",
                          "type": 334,
                          "typeName": "ValidationCode",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::force_register`]."
                      ]
                    },
                    {
                      "name": "deregister",
                      "fields": [
                        {
                          "name": "id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::deregister`]."
                      ]
                    },
                    {
                      "name": "swap",
                      "fields": [
                        {
                          "name": "id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "other",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::swap`]."
                      ]
                    },
                    {
                      "name": "remove_lock",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_lock`]."
                      ]
                    },
                    {
                      "name": "reserve",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::reserve`]."
                      ]
                    },
                    {
                      "name": "add_lock",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::add_lock`]."
                      ]
                    },
                    {
                      "name": "schedule_code_upgrade",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "new_code",
                          "type": 334,
                          "typeName": "ValidationCode",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::schedule_code_upgrade`]."
                      ]
                    },
                    {
                      "name": "set_current_head",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "new_head",
                          "type": 335,
                          "typeName": "HeadData",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_current_head`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 357,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "slots",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "force_lease",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "leaser",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "period_begin",
                          "type": 4,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        },
                        {
                          "name": "period_count",
                          "type": 4,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::force_lease`]."
                      ]
                    },
                    {
                      "name": "clear_all_leases",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::clear_all_leases`]."
                      ]
                    },
                    {
                      "name": "trigger_onboard",
                      "fields": [
                        {
                          "name": "para",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::trigger_onboard`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 358,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "paras_sudo_wrapper",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "sudo_schedule_para_initialize",
                      "fields": [
                        {
                          "name": "id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "genesis",
                          "type": 359,
                          "typeName": "ParaGenesisArgs",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::sudo_schedule_para_initialize`]."
                      ]
                    },
                    {
                      "name": "sudo_schedule_para_cleanup",
                      "fields": [
                        {
                          "name": "id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::sudo_schedule_para_cleanup`]."
                      ]
                    },
                    {
                      "name": "sudo_schedule_parathread_upgrade",
                      "fields": [
                        {
                          "name": "id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::sudo_schedule_parathread_upgrade`]."
                      ]
                    },
                    {
                      "name": "sudo_schedule_parachain_downgrade",
                      "fields": [
                        {
                          "name": "id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::sudo_schedule_parachain_downgrade`]."
                      ]
                    },
                    {
                      "name": "sudo_queue_downward_xcm",
                      "fields": [
                        {
                          "name": "id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 360,
                          "typeName": "Box<xcm::opaque::VersionedXcm>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::sudo_queue_downward_xcm`]."
                      ]
                    },
                    {
                      "name": "sudo_establish_hrmp_channel",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "recipient",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "max_capacity",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_message_size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::sudo_establish_hrmp_channel`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 359,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "paras",
                "ParaGenesisArgs"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "genesis_head",
                      "type": 335,
                      "typeName": "HeadData",
                      "docs": []
                    },
                    {
                      "name": "validation_code",
                      "type": 334,
                      "typeName": "ValidationCode",
                      "docs": []
                    },
                    {
                      "name": "para_kind",
                      "type": 39,
                      "typeName": "ParaKind",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 360,
            "type": {
              "path": [
                "xcm",
                "VersionedXcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 361,
                          "typeName": "v2::Xcm<RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": null,
                          "type": 380,
                          "typeName": "v3::Xcm<RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 361,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Xcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 362,
                      "typeName": "Vec<Instruction<RuntimeCall>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 362,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 363
                }
              },
              "docs": []
            }
          },
          {
            "id": 363,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Instruction"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "name": null,
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "response",
                          "type": 370,
                          "typeName": "Response",
                          "docs": []
                        },
                        {
                          "name": "max_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 361,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 374,
                          "typeName": "OriginKind",
                          "docs": []
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 375,
                          "typeName": "DoubleEncoded<RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_message_size",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_capacity",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "sender",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "recipient",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "ClearOrigin",
                      "fields": [],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 296,
                          "typeName": "InteriorMultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 376,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "max_assets",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": []
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 376,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "max_assets",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 361,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 376,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "receive",
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 376,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "reserve",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 361,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 376,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 361,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "assets",
                          "type": 376,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 366,
                          "typeName": "MultiAsset",
                          "docs": []
                        },
                        {
                          "name": "weight_limit",
                          "type": 379,
                          "typeName": "WeightLimit",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "RefundSurplus",
                      "fields": [],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "name": null,
                          "type": 361,
                          "typeName": "Xcm<RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "name": null,
                          "type": 361,
                          "typeName": "Xcm<RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "ClearError",
                      "fields": [],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "ticket",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": []
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": []
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": []
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "fields": [],
                      "index": 27,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 364,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "MultiAssets"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 365,
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 365,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 366
                }
              },
              "docs": []
            }
          },
          {
            "id": 366,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "MultiAsset"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 367,
                      "typeName": "AssetId",
                      "docs": []
                    },
                    {
                      "name": "fun",
                      "type": 368,
                      "typeName": "Fungibility",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 367,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "AssetId"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Concrete",
                      "fields": [
                        {
                          "name": null,
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Abstract",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 368,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "Fungibility"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [
                        {
                          "name": null,
                          "type": 106,
                          "typeName": "u128",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "NonFungible",
                      "fields": [
                        {
                          "name": null,
                          "type": 369,
                          "typeName": "AssetInstance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 369,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "AssetInstance"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Undefined",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "name": null,
                          "type": 106,
                          "typeName": "u128",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Array4",
                      "fields": [
                        {
                          "name": null,
                          "type": 17,
                          "typeName": "[u8; 4]",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Array8",
                      "fields": [
                        {
                          "name": null,
                          "type": 173,
                          "typeName": "[u8; 8]",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Array16",
                      "fields": [
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "[u8; 16]",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Array32",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Blob",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 370,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Response"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Null",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "name": null,
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "ExecutionResult",
                      "fields": [
                        {
                          "name": null,
                          "type": 371,
                          "typeName": "Option<(u32, Error)>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Version",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "super::Version",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 371,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 372
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 372,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 372,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  373
                ]
              },
              "docs": []
            }
          },
          {
            "id": 373,
            "type": {
              "path": [
                "xcm",
                "v2",
                "traits",
                "Error"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Overflow",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Unimplemented",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "UntrustedReserveLocation",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "UntrustedTeleportLocation",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "MultiLocationFull",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "MultiLocationNotInvertible",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "BadOrigin",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "InvalidLocation",
                      "fields": [],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "AssetNotFound",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "FailedToTransactAsset",
                      "fields": [],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "NotWithdrawable",
                      "fields": [],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "LocationCannotHold",
                      "fields": [],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "ExceedsMaxMessageSize",
                      "fields": [],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "DestinationUnsupported",
                      "fields": [],
                      "index": 13,
                      "docs": []
                    },
                    {
                      "name": "Transport",
                      "fields": [],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "Unroutable",
                      "fields": [],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "UnknownClaim",
                      "fields": [],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "FailedToDecode",
                      "fields": [],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "MaxWeightInvalid",
                      "fields": [],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "NotHoldingFees",
                      "fields": [],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "TooExpensive",
                      "fields": [],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 11,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "UnhandledXcmVersion",
                      "fields": [],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "WeightLimitReached",
                      "fields": [
                        {
                          "name": null,
                          "type": 11,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "Barrier",
                      "fields": [],
                      "index": 24,
                      "docs": []
                    },
                    {
                      "name": "WeightNotComputable",
                      "fields": [],
                      "index": 25,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 374,
            "type": {
              "path": [
                "xcm",
                "v2",
                "OriginKind"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Native",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "SovereignAccount",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Superuser",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Xcm",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 375,
            "type": {
              "path": [
                "xcm",
                "double_encoded",
                "DoubleEncoded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "encoded",
                      "type": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 376,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "MultiAssetFilter"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Definite",
                      "fields": [
                        {
                          "name": null,
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Wild",
                      "fields": [
                        {
                          "name": null,
                          "type": 377,
                          "typeName": "WildMultiAsset",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 377,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "WildMultiAsset"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "All",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "AllOf",
                      "fields": [
                        {
                          "name": "id",
                          "type": 367,
                          "typeName": "AssetId",
                          "docs": []
                        },
                        {
                          "name": "fun",
                          "type": 378,
                          "typeName": "WildFungibility",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 378,
            "type": {
              "path": [
                "xcm",
                "v2",
                "multiasset",
                "WildFungibility"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "NonFungible",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 379,
            "type": {
              "path": [
                "xcm",
                "v2",
                "WeightLimit"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unlimited",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Limited",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 380,
            "type": {
              "path": [
                "xcm",
                "v3",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 381,
                      "typeName": "Vec<Instruction<Call>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 381,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 382
                }
              },
              "docs": []
            }
          },
          {
            "id": 382,
            "type": {
              "path": [
                "xcm",
                "v3",
                "Instruction"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "response",
                          "type": 388,
                          "typeName": "Response",
                          "docs": []
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "querier",
                          "type": 398,
                          "typeName": "Option<MultiLocation>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 380,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_kind",
                          "type": 374,
                          "typeName": "OriginKind",
                          "docs": []
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 375,
                          "typeName": "DoubleEncoded<Call>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_message_size",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_capacity",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "sender",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "recipient",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "ClearOrigin",
                      "fields": [],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 155,
                          "typeName": "InteriorMultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": null,
                          "type": 399,
                          "typeName": "QueryResponseInfo",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 400,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": []
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 400,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 380,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 400,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "want",
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "maximal",
                          "type": 39,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 400,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "reserve",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 380,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 400,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 380,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "ReportHolding",
                      "fields": [
                        {
                          "name": "response_info",
                          "type": 399,
                          "typeName": "QueryResponseInfo",
                          "docs": []
                        },
                        {
                          "name": "assets",
                          "type": 400,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 385,
                          "typeName": "MultiAsset",
                          "docs": []
                        },
                        {
                          "name": "weight_limit",
                          "type": 403,
                          "typeName": "WeightLimit",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "RefundSurplus",
                      "fields": [],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "name": null,
                          "type": 380,
                          "typeName": "Xcm<Call>",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "name": null,
                          "type": 380,
                          "typeName": "Xcm<Call>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "ClearError",
                      "fields": [],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "ticket",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": []
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": []
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "max_response_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": []
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "fields": [],
                      "index": 27,
                      "docs": []
                    },
                    {
                      "name": "BurnAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": []
                    },
                    {
                      "name": "ExpectAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": []
                    },
                    {
                      "name": "ExpectOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 398,
                          "typeName": "Option<MultiLocation>",
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": []
                    },
                    {
                      "name": "ExpectError",
                      "fields": [
                        {
                          "name": null,
                          "type": 389,
                          "typeName": "Option<(u32, Error)>",
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": []
                    },
                    {
                      "name": "ExpectTransactStatus",
                      "fields": [
                        {
                          "name": null,
                          "type": 396,
                          "typeName": "MaybeErrorCode",
                          "docs": []
                        }
                      ],
                      "index": 32,
                      "docs": []
                    },
                    {
                      "name": "QueryPallet",
                      "fields": [
                        {
                          "name": "module_name",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "response_info",
                          "type": 399,
                          "typeName": "QueryResponseInfo",
                          "docs": []
                        }
                      ],
                      "index": 33,
                      "docs": []
                    },
                    {
                      "name": "ExpectPallet",
                      "fields": [
                        {
                          "name": "index",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "name",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "module_name",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "crate_major",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "min_crate_minor",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 34,
                      "docs": []
                    },
                    {
                      "name": "ReportTransactStatus",
                      "fields": [
                        {
                          "name": null,
                          "type": 399,
                          "typeName": "QueryResponseInfo",
                          "docs": []
                        }
                      ],
                      "index": 35,
                      "docs": []
                    },
                    {
                      "name": "ClearTransactStatus",
                      "fields": [],
                      "index": 36,
                      "docs": []
                    },
                    {
                      "name": "UniversalOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 37,
                      "docs": []
                    },
                    {
                      "name": "ExportMessage",
                      "fields": [
                        {
                          "name": "network",
                          "type": 158,
                          "typeName": "NetworkId",
                          "docs": []
                        },
                        {
                          "name": "destination",
                          "type": 155,
                          "typeName": "InteriorMultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 380,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 38,
                      "docs": []
                    },
                    {
                      "name": "LockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 385,
                          "typeName": "MultiAsset",
                          "docs": []
                        },
                        {
                          "name": "unlocker",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 39,
                      "docs": []
                    },
                    {
                      "name": "UnlockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 385,
                          "typeName": "MultiAsset",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 40,
                      "docs": []
                    },
                    {
                      "name": "NoteUnlockable",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 385,
                          "typeName": "MultiAsset",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 41,
                      "docs": []
                    },
                    {
                      "name": "RequestUnlock",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 385,
                          "typeName": "MultiAsset",
                          "docs": []
                        },
                        {
                          "name": "locker",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 42,
                      "docs": []
                    },
                    {
                      "name": "SetFeesMode",
                      "fields": [
                        {
                          "name": "jit_withdraw",
                          "type": 39,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 43,
                      "docs": []
                    },
                    {
                      "name": "SetTopic",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 44,
                      "docs": []
                    },
                    {
                      "name": "ClearTopic",
                      "fields": [],
                      "index": 45,
                      "docs": []
                    },
                    {
                      "name": "AliasOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 46,
                      "docs": []
                    },
                    {
                      "name": "UnpaidExecution",
                      "fields": [
                        {
                          "name": "weight_limit",
                          "type": 403,
                          "typeName": "WeightLimit",
                          "docs": []
                        },
                        {
                          "name": "check_origin",
                          "type": 398,
                          "typeName": "Option<MultiLocation>",
                          "docs": []
                        }
                      ],
                      "index": 47,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 383,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "MultiAssets"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 384,
                      "typeName": "Vec<MultiAsset>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 384,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 385
                }
              },
              "docs": []
            }
          },
          {
            "id": 385,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "MultiAsset"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 293,
                      "typeName": "AssetId",
                      "docs": []
                    },
                    {
                      "name": "fun",
                      "type": 386,
                      "typeName": "Fungibility",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 386,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "Fungibility"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [
                        {
                          "name": null,
                          "type": 106,
                          "typeName": "u128",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "NonFungible",
                      "fields": [
                        {
                          "name": null,
                          "type": 387,
                          "typeName": "AssetInstance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 387,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "AssetInstance"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Undefined",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "name": null,
                          "type": 106,
                          "typeName": "u128",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Array4",
                      "fields": [
                        {
                          "name": null,
                          "type": 17,
                          "typeName": "[u8; 4]",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Array8",
                      "fields": [
                        {
                          "name": null,
                          "type": 173,
                          "typeName": "[u8; 8]",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Array16",
                      "fields": [
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "[u8; 16]",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Array32",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 388,
            "type": {
              "path": [
                "xcm",
                "v3",
                "Response"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Null",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "ExecutionResult",
                      "fields": [
                        {
                          "name": null,
                          "type": 389,
                          "typeName": "Option<(u32, Error)>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Version",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "super::Version",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "PalletsInfo",
                      "fields": [
                        {
                          "name": null,
                          "type": 392,
                          "typeName": "BoundedVec<PalletInfo, MaxPalletsInfo>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "DispatchResult",
                      "fields": [
                        {
                          "name": null,
                          "type": 396,
                          "typeName": "MaybeErrorCode",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 389,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 390
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 390,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 390,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  391
                ]
              },
              "docs": []
            }
          },
          {
            "id": 391,
            "type": {
              "path": [
                "xcm",
                "v3",
                "traits",
                "Error"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Overflow",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Unimplemented",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "UntrustedReserveLocation",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "UntrustedTeleportLocation",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "LocationFull",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "LocationNotInvertible",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "BadOrigin",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "InvalidLocation",
                      "fields": [],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "AssetNotFound",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "FailedToTransactAsset",
                      "fields": [],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "NotWithdrawable",
                      "fields": [],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "LocationCannotHold",
                      "fields": [],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "ExceedsMaxMessageSize",
                      "fields": [],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "DestinationUnsupported",
                      "fields": [],
                      "index": 13,
                      "docs": []
                    },
                    {
                      "name": "Transport",
                      "fields": [],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "Unroutable",
                      "fields": [],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "UnknownClaim",
                      "fields": [],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "FailedToDecode",
                      "fields": [],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "MaxWeightInvalid",
                      "fields": [],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "NotHoldingFees",
                      "fields": [],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "TooExpensive",
                      "fields": [],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 11,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "ExpectationFalse",
                      "fields": [],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "PalletNotFound",
                      "fields": [],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "NameMismatch",
                      "fields": [],
                      "index": 24,
                      "docs": []
                    },
                    {
                      "name": "VersionIncompatible",
                      "fields": [],
                      "index": 25,
                      "docs": []
                    },
                    {
                      "name": "HoldingWouldOverflow",
                      "fields": [],
                      "index": 26,
                      "docs": []
                    },
                    {
                      "name": "ExportError",
                      "fields": [],
                      "index": 27,
                      "docs": []
                    },
                    {
                      "name": "ReanchorFailed",
                      "fields": [],
                      "index": 28,
                      "docs": []
                    },
                    {
                      "name": "NoDeal",
                      "fields": [],
                      "index": 29,
                      "docs": []
                    },
                    {
                      "name": "FeesNotMet",
                      "fields": [],
                      "index": 30,
                      "docs": []
                    },
                    {
                      "name": "LockError",
                      "fields": [],
                      "index": 31,
                      "docs": []
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 32,
                      "docs": []
                    },
                    {
                      "name": "Unanchored",
                      "fields": [],
                      "index": 33,
                      "docs": []
                    },
                    {
                      "name": "NotDepositable",
                      "fields": [],
                      "index": 34,
                      "docs": []
                    },
                    {
                      "name": "UnhandledXcmVersion",
                      "fields": [],
                      "index": 35,
                      "docs": []
                    },
                    {
                      "name": "WeightLimitReached",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 36,
                      "docs": []
                    },
                    {
                      "name": "Barrier",
                      "fields": [],
                      "index": 37,
                      "docs": []
                    },
                    {
                      "name": "WeightNotComputable",
                      "fields": [],
                      "index": 38,
                      "docs": []
                    },
                    {
                      "name": "ExceedsStackLimit",
                      "fields": [],
                      "index": 39,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 392,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 393
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 395,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 393,
            "type": {
              "path": [
                "xcm",
                "v3",
                "PalletInfo"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 92,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "name",
                      "type": 394,
                      "typeName": "BoundedVec<u8, MaxPalletNameLen>",
                      "docs": []
                    },
                    {
                      "name": "module_name",
                      "type": 394,
                      "typeName": "BoundedVec<u8, MaxPalletNameLen>",
                      "docs": []
                    },
                    {
                      "name": "major",
                      "type": 92,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "minor",
                      "type": 92,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "patch",
                      "type": 92,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 394,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 395,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 393
                }
              },
              "docs": []
            }
          },
          {
            "id": 396,
            "type": {
              "path": [
                "xcm",
                "v3",
                "MaybeErrorCode"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Success",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Error",
                      "fields": [
                        {
                          "name": null,
                          "type": 397,
                          "typeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "TruncatedError",
                      "fields": [
                        {
                          "name": null,
                          "type": 397,
                          "typeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 397,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 398,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 154
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 154,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 399,
            "type": {
              "path": [
                "xcm",
                "v3",
                "QueryResponseInfo"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "destination",
                      "type": 154,
                      "typeName": "MultiLocation",
                      "docs": []
                    },
                    {
                      "name": "query_id",
                      "type": 10,
                      "typeName": "QueryId",
                      "docs": []
                    },
                    {
                      "name": "max_weight",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 400,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "MultiAssetFilter"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Definite",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Wild",
                      "fields": [
                        {
                          "name": null,
                          "type": 401,
                          "typeName": "WildMultiAsset",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 401,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "WildMultiAsset"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "All",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "AllOf",
                      "fields": [
                        {
                          "name": "id",
                          "type": 293,
                          "typeName": "AssetId",
                          "docs": []
                        },
                        {
                          "name": "fun",
                          "type": 402,
                          "typeName": "WildFungibility",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "AllCounted",
                      "fields": [
                        {
                          "name": null,
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "AllOfCounted",
                      "fields": [
                        {
                          "name": "id",
                          "type": 293,
                          "typeName": "AssetId",
                          "docs": []
                        },
                        {
                          "name": "fun",
                          "type": 402,
                          "typeName": "WildFungibility",
                          "docs": []
                        },
                        {
                          "name": "count",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 402,
            "type": {
              "path": [
                "xcm",
                "v3",
                "multiasset",
                "WildFungibility"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "NonFungible",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 403,
            "type": {
              "path": [
                "xcm",
                "v3",
                "WeightLimit"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unlimited",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Limited",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 404,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "auctions",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "new_auction",
                      "fields": [
                        {
                          "name": "duration",
                          "type": 92,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "lease_period_index",
                          "type": 92,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::new_auction`]."
                      ]
                    },
                    {
                      "name": "bid",
                      "fields": [
                        {
                          "name": "para",
                          "type": 405,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "auction_index",
                          "type": 92,
                          "typeName": "AuctionIndex",
                          "docs": []
                        },
                        {
                          "name": "first_slot",
                          "type": 92,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        },
                        {
                          "name": "last_slot",
                          "type": 92,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::bid`]."
                      ]
                    },
                    {
                      "name": "cancel_auction",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::cancel_auction`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 405,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 152
                }
              },
              "docs": []
            }
          },
          {
            "id": 406,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "crowdloan",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "create",
                      "fields": [
                        {
                          "name": "index",
                          "type": 405,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "cap",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "first_period",
                          "type": 92,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        },
                        {
                          "name": "last_period",
                          "type": 92,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        },
                        {
                          "name": "end",
                          "type": 92,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "verifier",
                          "type": 407,
                          "typeName": "Option<MultiSigner>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::create`]."
                      ]
                    },
                    {
                      "name": "contribute",
                      "fields": [
                        {
                          "name": "index",
                          "type": 405,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "signature",
                          "type": 409,
                          "typeName": "Option<MultiSignature>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::contribute`]."
                      ]
                    },
                    {
                      "name": "withdraw",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 405,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::withdraw`]."
                      ]
                    },
                    {
                      "name": "refund",
                      "fields": [
                        {
                          "name": "index",
                          "type": 405,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::refund`]."
                      ]
                    },
                    {
                      "name": "dissolve",
                      "fields": [
                        {
                          "name": "index",
                          "type": 405,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::dissolve`]."
                      ]
                    },
                    {
                      "name": "edit",
                      "fields": [
                        {
                          "name": "index",
                          "type": 405,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "cap",
                          "type": 106,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "first_period",
                          "type": 92,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        },
                        {
                          "name": "last_period",
                          "type": 92,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        },
                        {
                          "name": "end",
                          "type": 92,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "verifier",
                          "type": 407,
                          "typeName": "Option<MultiSigner>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::edit`]."
                      ]
                    },
                    {
                      "name": "add_memo",
                      "fields": [
                        {
                          "name": "index",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "memo",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::add_memo`]."
                      ]
                    },
                    {
                      "name": "poke",
                      "fields": [
                        {
                          "name": "index",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::poke`]."
                      ]
                    },
                    {
                      "name": "contribute_all",
                      "fields": [
                        {
                          "name": "index",
                          "type": 405,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "signature",
                          "type": 409,
                          "typeName": "Option<MultiSignature>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::contribute_all`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 407,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 408
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 408,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 408,
            "type": {
              "path": [
                "sp_runtime",
                "MultiSigner"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ed25519",
                      "fields": [
                        {
                          "name": null,
                          "type": 48,
                          "typeName": "ed25519::Public",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Sr25519",
                      "fields": [
                        {
                          "name": null,
                          "type": 94,
                          "typeName": "sr25519::Public",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Ecdsa",
                      "fields": [
                        {
                          "name": null,
                          "type": 118,
                          "typeName": "ecdsa::Public",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 409,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 410
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 410,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 410,
            "type": {
              "path": [
                "sp_runtime",
                "MultiSignature"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ed25519",
                      "fields": [
                        {
                          "name": null,
                          "type": 140,
                          "typeName": "ed25519::Signature",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Sr25519",
                      "fields": [
                        {
                          "name": null,
                          "type": 320,
                          "typeName": "sr25519::Signature",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Ecdsa",
                      "fields": [
                        {
                          "name": null,
                          "type": 121,
                          "typeName": "ecdsa::Signature",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 411,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "assigned_slots",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "assign_perm_parachain_slot",
                      "fields": [
                        {
                          "name": "id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::assign_perm_parachain_slot`]."
                      ]
                    },
                    {
                      "name": "assign_temp_parachain_slot",
                      "fields": [
                        {
                          "name": "id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "lease_period_start",
                          "type": 412,
                          "typeName": "SlotLeasePeriodStart",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::assign_temp_parachain_slot`]."
                      ]
                    },
                    {
                      "name": "unassign_parachain_slot",
                      "fields": [
                        {
                          "name": "id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::unassign_parachain_slot`]."
                      ]
                    },
                    {
                      "name": "set_max_permanent_slots",
                      "fields": [
                        {
                          "name": "slots",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_max_permanent_slots`]."
                      ]
                    },
                    {
                      "name": "set_max_temporary_slots",
                      "fields": [
                        {
                          "name": "slots",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_max_temporary_slots`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 412,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "assigned_slots",
                "SlotLeasePeriodStart"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Current",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Next",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 413,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "send",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 294,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": []
                        },
                        {
                          "name": "message",
                          "type": 360,
                          "typeName": "Box<VersionedXcm<()>>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::send`]."
                      ]
                    },
                    {
                      "name": "teleport_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 294,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 294,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": []
                        },
                        {
                          "name": "assets",
                          "type": 414,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": []
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::teleport_assets`]."
                      ]
                    },
                    {
                      "name": "reserve_transfer_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 294,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 294,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": []
                        },
                        {
                          "name": "assets",
                          "type": 414,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": []
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::reserve_transfer_assets`]."
                      ]
                    },
                    {
                      "name": "execute",
                      "fields": [
                        {
                          "name": "message",
                          "type": 415,
                          "typeName": "Box<VersionedXcm<<T as Config>::RuntimeCall>>",
                          "docs": []
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::execute`]."
                      ]
                    },
                    {
                      "name": "force_xcm_version",
                      "fields": [
                        {
                          "name": "location",
                          "type": 154,
                          "typeName": "Box<MultiLocation>",
                          "docs": []
                        },
                        {
                          "name": "version",
                          "type": 4,
                          "typeName": "XcmVersion",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_xcm_version`]."
                      ]
                    },
                    {
                      "name": "force_default_xcm_version",
                      "fields": [
                        {
                          "name": "maybe_xcm_version",
                          "type": 272,
                          "typeName": "Option<XcmVersion>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_default_xcm_version`]."
                      ]
                    },
                    {
                      "name": "force_subscribe_version_notify",
                      "fields": [
                        {
                          "name": "location",
                          "type": 294,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::force_subscribe_version_notify`]."
                      ]
                    },
                    {
                      "name": "force_unsubscribe_version_notify",
                      "fields": [
                        {
                          "name": "location",
                          "type": 294,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::force_unsubscribe_version_notify`]."
                      ]
                    },
                    {
                      "name": "limited_reserve_transfer_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 294,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 294,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": []
                        },
                        {
                          "name": "assets",
                          "type": 414,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": []
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "weight_limit",
                          "type": 403,
                          "typeName": "WeightLimit",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::limited_reserve_transfer_assets`]."
                      ]
                    },
                    {
                      "name": "limited_teleport_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 294,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 294,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": []
                        },
                        {
                          "name": "assets",
                          "type": 414,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": []
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "weight_limit",
                          "type": 403,
                          "typeName": "WeightLimit",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::limited_teleport_assets`]."
                      ]
                    },
                    {
                      "name": "force_suspension",
                      "fields": [
                        {
                          "name": "suspended",
                          "type": 39,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::force_suspension`]."
                      ]
                    },
                    {
                      "name": "transfer_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 294,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 294,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": []
                        },
                        {
                          "name": "assets",
                          "type": 414,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": []
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "weight_limit",
                          "type": 403,
                          "typeName": "WeightLimit",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::transfer_assets`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 414,
            "type": {
              "path": [
                "xcm",
                "VersionedMultiAssets"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 364,
                          "typeName": "v2::MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "v3::MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 415,
            "type": {
              "path": [
                "xcm",
                "VersionedXcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 416,
                          "typeName": "v2::Xcm<RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": null,
                          "type": 420,
                          "typeName": "v3::Xcm<RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 416,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Xcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 417,
                      "typeName": "Vec<Instruction<RuntimeCall>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 417,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 418
                }
              },
              "docs": []
            }
          },
          {
            "id": 418,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Instruction"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "name": null,
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "response",
                          "type": 370,
                          "typeName": "Response",
                          "docs": []
                        },
                        {
                          "name": "max_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 361,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 374,
                          "typeName": "OriginKind",
                          "docs": []
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 419,
                          "typeName": "DoubleEncoded<RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_message_size",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_capacity",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "sender",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "recipient",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "ClearOrigin",
                      "fields": [],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 296,
                          "typeName": "InteriorMultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 376,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "max_assets",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": []
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 376,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "max_assets",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 361,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 376,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "receive",
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 376,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "reserve",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 361,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 376,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 361,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "assets",
                          "type": 376,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 366,
                          "typeName": "MultiAsset",
                          "docs": []
                        },
                        {
                          "name": "weight_limit",
                          "type": 379,
                          "typeName": "WeightLimit",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "RefundSurplus",
                      "fields": [],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "name": null,
                          "type": 416,
                          "typeName": "Xcm<RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "name": null,
                          "type": 416,
                          "typeName": "Xcm<RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "ClearError",
                      "fields": [],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 364,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "ticket",
                          "type": 295,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": []
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": []
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": []
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "fields": [],
                      "index": 27,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 419,
            "type": {
              "path": [
                "xcm",
                "double_encoded",
                "DoubleEncoded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "encoded",
                      "type": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 420,
            "type": {
              "path": [
                "xcm",
                "v3",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 421,
                      "typeName": "Vec<Instruction<Call>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 421,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 422
                }
              },
              "docs": []
            }
          },
          {
            "id": 422,
            "type": {
              "path": [
                "xcm",
                "v3",
                "Instruction"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "response",
                          "type": 388,
                          "typeName": "Response",
                          "docs": []
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "querier",
                          "type": 398,
                          "typeName": "Option<MultiLocation>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 380,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_kind",
                          "type": 374,
                          "typeName": "OriginKind",
                          "docs": []
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 419,
                          "typeName": "DoubleEncoded<Call>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_message_size",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_capacity",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "sender",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "recipient",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "ClearOrigin",
                      "fields": [],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 155,
                          "typeName": "InteriorMultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": null,
                          "type": 399,
                          "typeName": "QueryResponseInfo",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 400,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": []
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 400,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 380,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 400,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "want",
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "maximal",
                          "type": 39,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 400,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "reserve",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 380,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 400,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 380,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "ReportHolding",
                      "fields": [
                        {
                          "name": "response_info",
                          "type": 399,
                          "typeName": "QueryResponseInfo",
                          "docs": []
                        },
                        {
                          "name": "assets",
                          "type": 400,
                          "typeName": "MultiAssetFilter",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 385,
                          "typeName": "MultiAsset",
                          "docs": []
                        },
                        {
                          "name": "weight_limit",
                          "type": 403,
                          "typeName": "WeightLimit",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "RefundSurplus",
                      "fields": [],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "name": null,
                          "type": 420,
                          "typeName": "Xcm<Call>",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "name": null,
                          "type": 420,
                          "typeName": "Xcm<Call>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "ClearError",
                      "fields": [],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "ticket",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": []
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": []
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "max_response_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": []
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "fields": [],
                      "index": 27,
                      "docs": []
                    },
                    {
                      "name": "BurnAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": []
                    },
                    {
                      "name": "ExpectAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": []
                    },
                    {
                      "name": "ExpectOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 398,
                          "typeName": "Option<MultiLocation>",
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": []
                    },
                    {
                      "name": "ExpectError",
                      "fields": [
                        {
                          "name": null,
                          "type": 389,
                          "typeName": "Option<(u32, Error)>",
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": []
                    },
                    {
                      "name": "ExpectTransactStatus",
                      "fields": [
                        {
                          "name": null,
                          "type": 396,
                          "typeName": "MaybeErrorCode",
                          "docs": []
                        }
                      ],
                      "index": 32,
                      "docs": []
                    },
                    {
                      "name": "QueryPallet",
                      "fields": [
                        {
                          "name": "module_name",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "response_info",
                          "type": 399,
                          "typeName": "QueryResponseInfo",
                          "docs": []
                        }
                      ],
                      "index": 33,
                      "docs": []
                    },
                    {
                      "name": "ExpectPallet",
                      "fields": [
                        {
                          "name": "index",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "name",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "module_name",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "crate_major",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "min_crate_minor",
                          "type": 92,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 34,
                      "docs": []
                    },
                    {
                      "name": "ReportTransactStatus",
                      "fields": [
                        {
                          "name": null,
                          "type": 399,
                          "typeName": "QueryResponseInfo",
                          "docs": []
                        }
                      ],
                      "index": 35,
                      "docs": []
                    },
                    {
                      "name": "ClearTransactStatus",
                      "fields": [],
                      "index": 36,
                      "docs": []
                    },
                    {
                      "name": "UniversalOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 156,
                          "typeName": "Junction",
                          "docs": []
                        }
                      ],
                      "index": 37,
                      "docs": []
                    },
                    {
                      "name": "ExportMessage",
                      "fields": [
                        {
                          "name": "network",
                          "type": 158,
                          "typeName": "NetworkId",
                          "docs": []
                        },
                        {
                          "name": "destination",
                          "type": 155,
                          "typeName": "InteriorMultiLocation",
                          "docs": []
                        },
                        {
                          "name": "xcm",
                          "type": 380,
                          "typeName": "Xcm<()>",
                          "docs": []
                        }
                      ],
                      "index": 38,
                      "docs": []
                    },
                    {
                      "name": "LockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 385,
                          "typeName": "MultiAsset",
                          "docs": []
                        },
                        {
                          "name": "unlocker",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 39,
                      "docs": []
                    },
                    {
                      "name": "UnlockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 385,
                          "typeName": "MultiAsset",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 40,
                      "docs": []
                    },
                    {
                      "name": "NoteUnlockable",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 385,
                          "typeName": "MultiAsset",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 41,
                      "docs": []
                    },
                    {
                      "name": "RequestUnlock",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 385,
                          "typeName": "MultiAsset",
                          "docs": []
                        },
                        {
                          "name": "locker",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 42,
                      "docs": []
                    },
                    {
                      "name": "SetFeesMode",
                      "fields": [
                        {
                          "name": "jit_withdraw",
                          "type": 39,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 43,
                      "docs": []
                    },
                    {
                      "name": "SetTopic",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 44,
                      "docs": []
                    },
                    {
                      "name": "ClearTopic",
                      "fields": [],
                      "index": 45,
                      "docs": []
                    },
                    {
                      "name": "AliasOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        }
                      ],
                      "index": 46,
                      "docs": []
                    },
                    {
                      "name": "UnpaidExecution",
                      "fields": [
                        {
                          "name": "weight_limit",
                          "type": 403,
                          "typeName": "WeightLimit",
                          "docs": []
                        },
                        {
                          "name": "check_origin",
                          "type": 398,
                          "typeName": "Option<MultiLocation>",
                          "docs": []
                        }
                      ],
                      "index": 47,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 423,
            "type": {
              "path": [
                "pallet_message_queue",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "reap_page",
                      "fields": [
                        {
                          "name": "message_origin",
                          "type": 424,
                          "typeName": "MessageOriginOf<T>",
                          "docs": []
                        },
                        {
                          "name": "page_index",
                          "type": 4,
                          "typeName": "PageIndex",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::reap_page`]."
                      ]
                    },
                    {
                      "name": "execute_overweight",
                      "fields": [
                        {
                          "name": "message_origin",
                          "type": 424,
                          "typeName": "MessageOriginOf<T>",
                          "docs": []
                        },
                        {
                          "name": "page",
                          "type": 4,
                          "typeName": "PageIndex",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::Size",
                          "docs": []
                        },
                        {
                          "name": "weight_limit",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::execute_overweight`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 424,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "inclusion",
                "AggregateMessageOrigin"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ump",
                      "fields": [
                        {
                          "name": null,
                          "type": 425,
                          "typeName": "UmpQueueId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 425,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "inclusion",
                "UmpQueueId"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Para",
                      "fields": [
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 426,
            "type": {
              "path": [
                "pallet_asset_rate",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "create",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 292,
                          "typeName": "Box<T::AssetKind>",
                          "docs": []
                        },
                        {
                          "name": "rate",
                          "type": 427,
                          "typeName": "FixedU128",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::create`]."
                      ]
                    },
                    {
                      "name": "update",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 292,
                          "typeName": "Box<T::AssetKind>",
                          "docs": []
                        },
                        {
                          "name": "rate",
                          "type": 427,
                          "typeName": "FixedU128",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::update`]."
                      ]
                    },
                    {
                      "name": "remove",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 292,
                          "typeName": "Box<T::AssetKind>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::remove`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 427,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedU128"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 6,
                      "typeName": "u128",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 428,
            "type": {
              "path": [
                "pallet_root_testing",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "fill_block",
                      "fields": [
                        {
                          "name": "ratio",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See `Pallet::fill_block`."
                      ]
                    },
                    {
                      "name": "trigger_defensive",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "See `Pallet::trigger_defensive`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 429,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "identity_migrator",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "reap_identity",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::reap_identity`]."
                      ]
                    },
                    {
                      "name": "poke_deposit",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::poke_deposit`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 430,
            "type": {
              "path": [
                "sp_runtime",
                "traits",
                "BlakeTwo256"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 431,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 432,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "types",
                "Tally"
              ],
              "params": [
                {
                  "name": "Votes",
                  "type": 6
                },
                {
                  "name": "Total",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ayes",
                      "type": 6,
                      "typeName": "Votes",
                      "docs": []
                    },
                    {
                      "name": "nays",
                      "type": 6,
                      "typeName": "Votes",
                      "docs": []
                    },
                    {
                      "name": "support",
                      "type": 6,
                      "typeName": "Votes",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 433,
            "type": {
              "path": [
                "pallet_whitelist",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CallWhitelisted",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "WhitelistedCallRemoved",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "WhitelistedCallDispatched",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 434,
                          "typeName": "DispatchResultWithPostInfo",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 434,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 435
                },
                {
                  "name": "E",
                  "type": 437
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "name": null,
                          "type": 435,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "name": null,
                          "type": 437,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 435,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PostDispatchInfo"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "actual_weight",
                      "type": 436,
                      "typeName": "Option<Weight>",
                      "docs": []
                    },
                    {
                      "name": "pays_fee",
                      "type": 24,
                      "typeName": "Pays",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 436,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 437,
            "type": {
              "path": [
                "sp_runtime",
                "DispatchErrorWithPostInfo"
              ],
              "params": [
                {
                  "name": "Info",
                  "type": 435
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "post_info",
                      "type": 435,
                      "typeName": "Info",
                      "docs": []
                    },
                    {
                      "name": "error",
                      "type": 25,
                      "typeName": "DispatchError",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 438,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New proposal."
                      ]
                    },
                    {
                      "name": "Spending",
                      "fields": [
                        {
                          "name": "budget_remaining",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "We have ended a spend period and will now allocate funds."
                      ]
                    },
                    {
                      "name": "Awarded",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "award",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Some funds have been allocated."
                      ]
                    },
                    {
                      "name": "Rejected",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "slashed",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proposal was rejected; funds were slashed."
                      ]
                    },
                    {
                      "name": "Burnt",
                      "fields": [
                        {
                          "name": "burnt_funds",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some of our funds have been burnt."
                      ]
                    },
                    {
                      "name": "Rollover",
                      "fields": [
                        {
                          "name": "rollover_balance",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Spending has finished; this is the amount that rolls over until next spend."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some funds have been deposited."
                      ]
                    },
                    {
                      "name": "SpendApproved",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A new spend proposal has been approved."
                      ]
                    },
                    {
                      "name": "UpdatedInactive",
                      "fields": [
                        {
                          "name": "reactivated",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "deactivated",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "The inactive funds of the pallet have been updated."
                      ]
                    },
                    {
                      "name": "AssetSpendApproved",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        },
                        {
                          "name": "asset_kind",
                          "type": 292,
                          "typeName": "T::AssetKind",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "AssetBalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 294,
                          "typeName": "T::Beneficiary",
                          "docs": []
                        },
                        {
                          "name": "valid_from",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "expire_at",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A new asset spend proposal has been approved."
                      ]
                    },
                    {
                      "name": "AssetSpendVoided",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "An approved spend was voided."
                      ]
                    },
                    {
                      "name": "Paid",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        },
                        {
                          "name": "payment_id",
                          "type": 11,
                          "typeName": "<T::Paymaster as Pay>::Id",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A payment happened."
                      ]
                    },
                    {
                      "name": "PaymentFailed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        },
                        {
                          "name": "payment_id",
                          "type": 11,
                          "typeName": "<T::Paymaster as Pay>::Id",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A payment failed and can be retried."
                      ]
                    },
                    {
                      "name": "SpendProcessed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A spend was processed and removed from the storage. It might have been successfully",
                        "paid or it may have expired."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 439,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "inclusion",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CandidateBacked",
                      "fields": [
                        {
                          "name": null,
                          "type": 440,
                          "typeName": "CandidateReceipt<T::Hash>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 335,
                          "typeName": "HeadData",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 441,
                          "typeName": "CoreIndex",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 442,
                          "typeName": "GroupIndex",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A candidate was backed. `[candidate, head_data]`"
                      ]
                    },
                    {
                      "name": "CandidateIncluded",
                      "fields": [
                        {
                          "name": null,
                          "type": 440,
                          "typeName": "CandidateReceipt<T::Hash>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 335,
                          "typeName": "HeadData",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 441,
                          "typeName": "CoreIndex",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 442,
                          "typeName": "GroupIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A candidate was included. `[candidate, head_data]`"
                      ]
                    },
                    {
                      "name": "CandidateTimedOut",
                      "fields": [
                        {
                          "name": null,
                          "type": 440,
                          "typeName": "CandidateReceipt<T::Hash>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 335,
                          "typeName": "HeadData",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 441,
                          "typeName": "CoreIndex",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A candidate timed out. `[candidate, head_data]`"
                      ]
                    },
                    {
                      "name": "UpwardMessagesReceived",
                      "fields": [
                        {
                          "name": "from",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "count",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Some upward messages have been received and will be processed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 440,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "CandidateReceipt"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "descriptor",
                      "type": 324,
                      "typeName": "CandidateDescriptor<H>",
                      "docs": []
                    },
                    {
                      "name": "commitments_hash",
                      "type": 12,
                      "typeName": "Hash",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 441,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "CoreIndex"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 442,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "GroupIndex"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 443,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "paras",
                "pallet",
                "Event"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CurrentCodeUpdated",
                      "fields": [
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Current code has been updated for a Para. `para_id`"
                      ]
                    },
                    {
                      "name": "CurrentHeadUpdated",
                      "fields": [
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Current head has been updated for a Para. `para_id`"
                      ]
                    },
                    {
                      "name": "CodeUpgradeScheduled",
                      "fields": [
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A code upgrade has been scheduled for a Para. `para_id`"
                      ]
                    },
                    {
                      "name": "NewHeadNoted",
                      "fields": [
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A new head has been noted for a Para. `para_id`"
                      ]
                    },
                    {
                      "name": "ActionQueued",
                      "fields": [
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "SessionIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A para has been queued to execute pending actions. `para_id`"
                      ]
                    },
                    {
                      "name": "PvfCheckStarted",
                      "fields": [
                        {
                          "name": null,
                          "type": 327,
                          "typeName": "ValidationCodeHash",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The given para either initiated or subscribed to a PVF check for the given validation",
                        "code. `code_hash` `para_id`"
                      ]
                    },
                    {
                      "name": "PvfCheckAccepted",
                      "fields": [
                        {
                          "name": null,
                          "type": 327,
                          "typeName": "ValidationCodeHash",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "The given validation code was accepted by the PVF pre-checking vote.",
                        "`code_hash` `para_id`"
                      ]
                    },
                    {
                      "name": "PvfCheckRejected",
                      "fields": [
                        {
                          "name": null,
                          "type": 327,
                          "typeName": "ValidationCodeHash",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The given validation code was rejected by the PVF pre-checking vote.",
                        "`code_hash` `para_id`"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 444,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "hrmp",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "OpenChannelRequested",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "recipient",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "proposed_max_capacity",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "proposed_max_message_size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Open HRMP channel requested."
                      ]
                    },
                    {
                      "name": "OpenChannelCanceled",
                      "fields": [
                        {
                          "name": "by_parachain",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "channel_id",
                          "type": 350,
                          "typeName": "HrmpChannelId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An HRMP channel request sent by the receiver was canceled by either party."
                      ]
                    },
                    {
                      "name": "OpenChannelAccepted",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "recipient",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Open HRMP channel accepted."
                      ]
                    },
                    {
                      "name": "ChannelClosed",
                      "fields": [
                        {
                          "name": "by_parachain",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "channel_id",
                          "type": 350,
                          "typeName": "HrmpChannelId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "HRMP channel closed."
                      ]
                    },
                    {
                      "name": "HrmpChannelForceOpened",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "recipient",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "proposed_max_capacity",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "proposed_max_message_size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An HRMP channel was opened via Root origin."
                      ]
                    },
                    {
                      "name": "HrmpSystemChannelOpened",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "recipient",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "proposed_max_capacity",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "proposed_max_message_size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "An HRMP channel was opened between two system chains."
                      ]
                    },
                    {
                      "name": "OpenChannelDepositsUpdated",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "recipient",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "An HRMP channel's deposits were updated."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 445,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "disputes",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DisputeInitiated",
                      "fields": [
                        {
                          "name": null,
                          "type": 340,
                          "typeName": "CandidateHash",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 446,
                          "typeName": "DisputeLocation",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A dispute has been initiated. \\[candidate hash, dispute location\\]"
                      ]
                    },
                    {
                      "name": "DisputeConcluded",
                      "fields": [
                        {
                          "name": null,
                          "type": 340,
                          "typeName": "CandidateHash",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 447,
                          "typeName": "DisputeResult",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A dispute has concluded for or against a candidate.",
                        "`\\[para id, candidate hash, dispute result\\]`"
                      ]
                    },
                    {
                      "name": "Revert",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A dispute has concluded with supermajority against a candidate.",
                        "Block authors should no longer build on top of this head and should",
                        "instead revert the block at the given height. This should be the",
                        "number of the child of the last known valid block in the chain."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 446,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "disputes",
                "DisputeLocation"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Local",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Remote",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 447,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "disputes",
                "DisputeResult"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Valid",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Invalid",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 448,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "paras_registrar",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Registered",
                      "fields": [
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "manager",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Deregistered",
                      "fields": [
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Reserved",
                      "fields": [
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Swapped",
                      "fields": [
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "other_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 449,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "slots",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewLeasePeriod",
                      "fields": [
                        {
                          "name": "lease_period",
                          "type": 4,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new `[lease_period]` is beginning."
                      ]
                    },
                    {
                      "name": "Leased",
                      "fields": [
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "leaser",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "period_begin",
                          "type": 4,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        },
                        {
                          "name": "period_count",
                          "type": 4,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        },
                        {
                          "name": "extra_reserved",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "total_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A para has won the right to a continuous set of lease periods as a parachain.",
                        "First balance is any extra amount reserved on top of the para's existing deposit.",
                        "Second balance is the total amount reserved."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 450,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "auctions",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AuctionStarted",
                      "fields": [
                        {
                          "name": "auction_index",
                          "type": 4,
                          "typeName": "AuctionIndex",
                          "docs": []
                        },
                        {
                          "name": "lease_period",
                          "type": 4,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        },
                        {
                          "name": "ending",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An auction started. Provides its index and the block number where it will begin to",
                        "close and the first lease period of the quadruplet that is auctioned."
                      ]
                    },
                    {
                      "name": "AuctionClosed",
                      "fields": [
                        {
                          "name": "auction_index",
                          "type": 4,
                          "typeName": "AuctionIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An auction ended. All funds become unreserved."
                      ]
                    },
                    {
                      "name": "Reserved",
                      "fields": [
                        {
                          "name": "bidder",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "extra_reserved",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "total_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Funds were reserved for a winning bid. First balance is the extra amount reserved.",
                        "Second is the total."
                      ]
                    },
                    {
                      "name": "Unreserved",
                      "fields": [
                        {
                          "name": "bidder",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Funds were unreserved since bidder is no longer active. `[bidder, amount]`"
                      ]
                    },
                    {
                      "name": "ReserveConfiscated",
                      "fields": [
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "leaser",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Someone attempted to lease the same slot twice for a parachain. The amount is held in",
                        "reserve but no parachain slot has been leased."
                      ]
                    },
                    {
                      "name": "BidAccepted",
                      "fields": [
                        {
                          "name": "bidder",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "first_slot",
                          "type": 4,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        },
                        {
                          "name": "last_slot",
                          "type": 4,
                          "typeName": "LeasePeriodOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A new bid has been accepted as the current winner."
                      ]
                    },
                    {
                      "name": "WinningOffset",
                      "fields": [
                        {
                          "name": "auction_index",
                          "type": 4,
                          "typeName": "AuctionIndex",
                          "docs": []
                        },
                        {
                          "name": "block_number",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "The winning offset was chosen for an auction. This will map into the `Winning` storage",
                        "map."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 451,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "crowdloan",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Created",
                      "fields": [
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Create a new crowdloaning campaign."
                      ]
                    },
                    {
                      "name": "Contributed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "fund_index",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Contributed to a crowd sale."
                      ]
                    },
                    {
                      "name": "Withdrew",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "fund_index",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Withdrew full balance of a contributor."
                      ]
                    },
                    {
                      "name": "PartiallyRefunded",
                      "fields": [
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The loans in a fund have been partially dissolved, i.e. there are some left",
                        "over child keys that still need to be killed."
                      ]
                    },
                    {
                      "name": "AllRefunded",
                      "fields": [
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "All loans in a fund have been refunded."
                      ]
                    },
                    {
                      "name": "Dissolved",
                      "fields": [
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Fund is dissolved."
                      ]
                    },
                    {
                      "name": "HandleBidResult",
                      "fields": [
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 50,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "The result of trying to submit a new bid to the Slots pallet."
                      ]
                    },
                    {
                      "name": "Edited",
                      "fields": [
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "The configuration to a crowdloan has been edited."
                      ]
                    },
                    {
                      "name": "MemoUpdated",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "memo",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A memo has been updated."
                      ]
                    },
                    {
                      "name": "AddedToNewRaise",
                      "fields": [
                        {
                          "name": "para_id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A parachain has been moved to `NewRaise`"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 452,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "assigned_slots",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PermanentSlotAssigned",
                      "fields": [
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A parachain was assigned a permanent parachain slot"
                      ]
                    },
                    {
                      "name": "TemporarySlotAssigned",
                      "fields": [
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A parachain was assigned a temporary parachain slot"
                      ]
                    },
                    {
                      "name": "MaxPermanentSlotsChanged",
                      "fields": [
                        {
                          "name": "slots",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The maximum number of permanent slots has been changed"
                      ]
                    },
                    {
                      "name": "MaxTemporarySlotsChanged",
                      "fields": [
                        {
                          "name": "slots",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The maximum number of temporary slots has been changed"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 453,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Attempted",
                      "fields": [
                        {
                          "name": "outcome",
                          "type": 454,
                          "typeName": "xcm::latest::Outcome",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Execution of an XCM message was attempted."
                      ]
                    },
                    {
                      "name": "Sent",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "destination",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "message",
                          "type": 380,
                          "typeName": "Xcm<()>",
                          "docs": []
                        },
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "XcmHash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A XCM message was sent."
                      ]
                    },
                    {
                      "name": "UnexpectedResponse",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Query response received which does not match a registered query. This may be because a",
                        "matching query was never registered, it may be because it is a duplicate response, or",
                        "because the query timed out."
                      ]
                    },
                    {
                      "name": "ResponseReady",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "response",
                          "type": 388,
                          "typeName": "Response",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Query response has been received and is ready for taking with `take_response`. There is",
                        "no registered notification call."
                      ]
                    },
                    {
                      "name": "Notified",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Query response has been received and query is removed. The registered notification has",
                        "been dispatched and executed successfully."
                      ]
                    },
                    {
                      "name": "NotifyOverweight",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        },
                        {
                          "name": "actual_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "max_budgeted_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Query response has been received and query is removed. The registered notification",
                        "could not be dispatched because the dispatch weight is greater than the maximum weight",
                        "originally budgeted by this runtime for the query result."
                      ]
                    },
                    {
                      "name": "NotifyDispatchError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Query response has been received and query is removed. There was a general error with",
                        "dispatching the notification call."
                      ]
                    },
                    {
                      "name": "NotifyDecodeFailed",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Query response has been received and query is removed. The dispatch was unable to be",
                        "decoded into a `Call`; this might be due to dispatch function having a signature which",
                        "is not `(origin, QueryId, Response)`."
                      ]
                    },
                    {
                      "name": "InvalidResponder",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "expected_location",
                          "type": 398,
                          "typeName": "Option<MultiLocation>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Expected query response has been received but the origin location of the response does",
                        "not match that expected. The query remains registered for a later, valid, response to",
                        "be received and acted upon."
                      ]
                    },
                    {
                      "name": "InvalidResponderVersion",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Expected query response has been received but the expected origin location placed in",
                        "storage by this runtime previously cannot be decoded. The query remains registered.",
                        "",
                        "This is unexpected (since a location placed in storage in a previously executing",
                        "runtime should be readable prior to query timeout) and dangerous since the possibly",
                        "valid response will be dropped. Manual governance intervention is probably going to be",
                        "needed."
                      ]
                    },
                    {
                      "name": "ResponseTaken",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Received query response has been read and removed."
                      ]
                    },
                    {
                      "name": "AssetsTrapped",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H256",
                          "docs": []
                        },
                        {
                          "name": "origin",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "assets",
                          "type": 414,
                          "typeName": "VersionedMultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Some assets have been placed in an asset trap."
                      ]
                    },
                    {
                      "name": "VersionChangeNotified",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 4,
                          "typeName": "XcmVersion",
                          "docs": []
                        },
                        {
                          "name": "cost",
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "XcmHash",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "An XCM version change notification message has been attempted to be sent.",
                        "",
                        "The cost of sending it (borne by the chain) is included."
                      ]
                    },
                    {
                      "name": "SupportedVersionChanged",
                      "fields": [
                        {
                          "name": "location",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "version",
                          "type": 4,
                          "typeName": "XcmVersion",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "The supported version of a location has been changed. This might be through an",
                        "automatic notification or a manual intervention."
                      ]
                    },
                    {
                      "name": "NotifyTargetSendFail",
                      "fields": [
                        {
                          "name": "location",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "error",
                          "type": 391,
                          "typeName": "XcmError",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "A given location which had a version change subscription was dropped owing to an error",
                        "sending the notification to it."
                      ]
                    },
                    {
                      "name": "NotifyTargetMigrationFail",
                      "fields": [
                        {
                          "name": "location",
                          "type": 294,
                          "typeName": "VersionedMultiLocation",
                          "docs": []
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "A given location which had a version change subscription was dropped owing to an error",
                        "migrating the location to our new XCM format."
                      ]
                    },
                    {
                      "name": "InvalidQuerierVersion",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Expected query response has been received but the expected querier location placed in",
                        "storage by this runtime previously cannot be decoded. The query remains registered.",
                        "",
                        "This is unexpected (since a location placed in storage in a previously executing",
                        "runtime should be readable prior to query timeout) and dangerous since the possibly",
                        "valid response will be dropped. Manual governance intervention is probably going to be",
                        "needed."
                      ]
                    },
                    {
                      "name": "InvalidQuerier",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": []
                        },
                        {
                          "name": "expected_querier",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "maybe_actual_querier",
                          "type": 398,
                          "typeName": "Option<MultiLocation>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Expected query response has been received but the querier location of the response does",
                        "not match the expected. The query remains registered for a later, valid, response to",
                        "be received and acted upon."
                      ]
                    },
                    {
                      "name": "VersionNotifyStarted",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "cost",
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "XcmHash",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "A remote has requested XCM version change notification from us and we have honored it.",
                        "A version information message is sent to them and its cost is included."
                      ]
                    },
                    {
                      "name": "VersionNotifyRequested",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "cost",
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "XcmHash",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "We have requested that a remote chain send us XCM version change notifications."
                      ]
                    },
                    {
                      "name": "VersionNotifyUnrequested",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "cost",
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        },
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "XcmHash",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "We have requested that a remote chain stops sending us XCM version change",
                        "notifications."
                      ]
                    },
                    {
                      "name": "FeesPaid",
                      "fields": [
                        {
                          "name": "paying",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "fees",
                          "type": 383,
                          "typeName": "MultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "Fees were paid from a location for an operation (often for using `SendXcm`)."
                      ]
                    },
                    {
                      "name": "AssetsClaimed",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H256",
                          "docs": []
                        },
                        {
                          "name": "origin",
                          "type": 154,
                          "typeName": "MultiLocation",
                          "docs": []
                        },
                        {
                          "name": "assets",
                          "type": 414,
                          "typeName": "VersionedMultiAssets",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Some assets have been claimed from an asset trap"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 454,
            "type": {
              "path": [
                "xcm",
                "v3",
                "traits",
                "Outcome"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Complete",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Incomplete",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 391,
                          "typeName": "Error",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Error",
                      "fields": [
                        {
                          "name": null,
                          "type": 391,
                          "typeName": "Error",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 455,
            "type": {
              "path": [
                "pallet_message_queue",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ProcessingFailed",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        },
                        {
                          "name": "origin",
                          "type": 424,
                          "typeName": "MessageOriginOf<T>",
                          "docs": []
                        },
                        {
                          "name": "error",
                          "type": 456,
                          "typeName": "ProcessMessageError",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Message discarded due to an error in the `MessageProcessor` (usually a format error)."
                      ]
                    },
                    {
                      "name": "Processed",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        },
                        {
                          "name": "origin",
                          "type": 424,
                          "typeName": "MessageOriginOf<T>",
                          "docs": []
                        },
                        {
                          "name": "weight_used",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "success",
                          "type": 39,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Message is processed."
                      ]
                    },
                    {
                      "name": "OverweightEnqueued",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        },
                        {
                          "name": "origin",
                          "type": 424,
                          "typeName": "MessageOriginOf<T>",
                          "docs": []
                        },
                        {
                          "name": "page_index",
                          "type": 4,
                          "typeName": "PageIndex",
                          "docs": []
                        },
                        {
                          "name": "message_index",
                          "type": 4,
                          "typeName": "T::Size",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Message placed in overweight queue."
                      ]
                    },
                    {
                      "name": "PageReaped",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 424,
                          "typeName": "MessageOriginOf<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "PageIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "This page was reaped."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 456,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "messages",
                "ProcessMessageError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BadFormat",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Corrupt",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Unsupported",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Overweight",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Yield",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 457,
            "type": {
              "path": [
                "pallet_asset_rate",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AssetRateCreated",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 292,
                          "typeName": "T::AssetKind",
                          "docs": []
                        },
                        {
                          "name": "rate",
                          "type": 427,
                          "typeName": "FixedU128",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "AssetRateRemoved",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 292,
                          "typeName": "T::AssetKind",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "AssetRateUpdated",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 292,
                          "typeName": "T::AssetKind",
                          "docs": []
                        },
                        {
                          "name": "old",
                          "type": 427,
                          "typeName": "FixedU128",
                          "docs": []
                        },
                        {
                          "name": "new",
                          "type": 427,
                          "typeName": "FixedU128",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 458,
            "type": {
              "path": [
                "pallet_root_testing",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DefensiveTestCall",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Event dispatched when the trigger_defensive extrinsic is called."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 459,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "identity_migrator",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "IdentityReaped",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The identity and all sub accounts were reaped for `who`."
                      ]
                    },
                    {
                      "name": "DepositUpdated",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "identity",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "subs",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The deposits held for `who` were updated. `identity` is the new deposit held for",
                        "identity info, and `subs` is the new deposit held for the sub-accounts."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 460,
            "type": {
              "path": [
                "frame_system",
                "Phase"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ApplyExtrinsic",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Finalization",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Initialization",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 461,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 56
                }
              },
              "docs": []
            }
          },
          {
            "id": 462,
            "type": {
              "path": [
                "frame_system",
                "LastRuntimeUpgradeInfo"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_version",
                      "type": 92,
                      "typeName": "codec::Compact<u32>",
                      "docs": []
                    },
                    {
                      "name": "spec_name",
                      "type": 463,
                      "typeName": "sp_runtime::RuntimeString",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 463,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "Str"
              },
              "docs": []
            }
          },
          {
            "id": 464,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockWeights"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_block",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "max_block",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "per_class",
                      "type": 465,
                      "typeName": "PerDispatchClass<WeightsPerClass>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 465,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 466
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 466,
                      "typeName": "T",
                      "docs": []
                    },
                    {
                      "name": "operational",
                      "type": 466,
                      "typeName": "T",
                      "docs": []
                    },
                    {
                      "name": "mandatory",
                      "type": 466,
                      "typeName": "T",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 466,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "WeightsPerClass"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_extrinsic",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "max_extrinsic",
                      "type": 436,
                      "typeName": "Option<Weight>",
                      "docs": []
                    },
                    {
                      "name": "max_total",
                      "type": 436,
                      "typeName": "Option<Weight>",
                      "docs": []
                    },
                    {
                      "name": "reserved",
                      "type": 436,
                      "typeName": "Option<Weight>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 467,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockLength"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max",
                      "type": 468,
                      "typeName": "PerDispatchClass<u32>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 468,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 4,
                      "typeName": "T",
                      "docs": []
                    },
                    {
                      "name": "operational",
                      "type": 4,
                      "typeName": "T",
                      "docs": []
                    },
                    {
                      "name": "mandatory",
                      "type": 4,
                      "typeName": "T",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 469,
            "type": {
              "path": [
                "sp_weights",
                "RuntimeDbWeight"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "read",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "write",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 470,
            "type": {
              "path": [
                "sp_version",
                "RuntimeVersion"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_name",
                      "type": 463,
                      "typeName": "RuntimeString",
                      "docs": []
                    },
                    {
                      "name": "impl_name",
                      "type": 463,
                      "typeName": "RuntimeString",
                      "docs": []
                    },
                    {
                      "name": "authoring_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "spec_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "impl_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "apis",
                      "type": 471,
                      "typeName": "ApisVec",
                      "docs": []
                    },
                    {
                      "name": "transaction_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "state_version",
                      "type": 2,
                      "typeName": "u8",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 471,
            "type": {
              "path": [
                "Cow"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 472
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 472,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 472,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 473
                }
              },
              "docs": []
            }
          },
          {
            "id": 473,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  173,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 474,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSpecName",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The name of specification does not match between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "SpecVersionNeedsToIncrease",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The specification version is not allowed to decrease between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "FailedToExtractRuntimeVersion",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Failed to extract the runtime version from the new runtime.",
                        "",
                        "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                      ]
                    },
                    {
                      "name": "NonDefaultComposite",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Suicide called when the account has non-default composite data."
                      ]
                    },
                    {
                      "name": "NonZeroRefCount",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "There is a non-zero reference count preventing the account from being purged."
                      ]
                    },
                    {
                      "name": "CallFiltered",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The origin filter prevent the call to be dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the System pallet"
              ]
            }
          },
          {
            "id": 475,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 476
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 477,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 476,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  93,
                  11
                ]
              },
              "docs": []
            }
          },
          {
            "id": 477,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 476
                }
              },
              "docs": []
            }
          },
          {
            "id": 478,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 1
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 479,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 479,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 1
                }
              },
              "docs": []
            }
          },
          {
            "id": 480,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 481
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 481,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 481,
            "type": {
              "path": [
                "sp_consensus_babe",
                "digests",
                "PreDigest"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Primary",
                      "fields": [
                        {
                          "name": null,
                          "type": 482,
                          "typeName": "PrimaryPreDigest",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "SecondaryPlain",
                      "fields": [
                        {
                          "name": null,
                          "type": 484,
                          "typeName": "SecondaryPlainPreDigest",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "SecondaryVRF",
                      "fields": [
                        {
                          "name": null,
                          "type": 485,
                          "typeName": "SecondaryVRFPreDigest",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 482,
            "type": {
              "path": [
                "sp_consensus_babe",
                "digests",
                "PrimaryPreDigest"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "authority_index",
                      "type": 4,
                      "typeName": "super::AuthorityIndex",
                      "docs": []
                    },
                    {
                      "name": "slot",
                      "type": 95,
                      "typeName": "Slot",
                      "docs": []
                    },
                    {
                      "name": "vrf_signature",
                      "type": 483,
                      "typeName": "VrfSignature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 483,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "vrf",
                "VrfSignature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "pre_output",
                      "type": 1,
                      "typeName": "VrfPreOutput",
                      "docs": []
                    },
                    {
                      "name": "proof",
                      "type": 141,
                      "typeName": "VrfProof",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 484,
            "type": {
              "path": [
                "sp_consensus_babe",
                "digests",
                "SecondaryPlainPreDigest"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "authority_index",
                      "type": 4,
                      "typeName": "super::AuthorityIndex",
                      "docs": []
                    },
                    {
                      "name": "slot",
                      "type": 95,
                      "typeName": "Slot",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 485,
            "type": {
              "path": [
                "sp_consensus_babe",
                "digests",
                "SecondaryVRFPreDigest"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "authority_index",
                      "type": 4,
                      "typeName": "super::AuthorityIndex",
                      "docs": []
                    },
                    {
                      "name": "slot",
                      "type": 95,
                      "typeName": "Slot",
                      "docs": []
                    },
                    {
                      "name": "vrf_signature",
                      "type": 483,
                      "typeName": "VrfSignature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 486,
            "type": {
              "path": [
                "sp_consensus_babe",
                "BabeEpochConfiguration"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "c",
                      "type": 98,
                      "typeName": "(u64, u64)",
                      "docs": []
                    },
                    {
                      "name": "allowed_slots",
                      "type": 99,
                      "typeName": "AllowedSlots",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 487,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 488
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 489,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 488,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  11,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 489,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 488
                }
              },
              "docs": []
            }
          },
          {
            "id": 490,
            "type": {
              "path": [
                "pallet_babe",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidEquivocationProof",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "An equivocation proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "InvalidKeyOwnershipProof",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "A key ownership proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "DuplicateOffenceReport",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "A given equivocation report is valid but already previously reported."
                      ]
                    },
                    {
                      "name": "InvalidConfiguration",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Submitted configuration is invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 491,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  6,
                  39
                ]
              },
              "docs": []
            }
          },
          {
            "id": 492,
            "type": {
              "path": [
                "pallet_indices",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotAssigned",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The index was not already assigned."
                      ]
                    },
                    {
                      "name": "NotOwner",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The index is assigned to another account."
                      ]
                    },
                    {
                      "name": "InUse",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The index was not available."
                      ]
                    },
                    {
                      "name": "NotTransfer",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The source and destination accounts are identical."
                      ]
                    },
                    {
                      "name": "Permanent",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The index is permanent and may not be freed/changed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 493,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 494
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 496,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 494,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "BalanceLock"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 173,
                      "typeName": "LockIdentifier",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "reasons",
                      "type": 495,
                      "typeName": "Reasons",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 495,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "Reasons"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fee",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Misc",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "All",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 496,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 494
                }
              },
              "docs": []
            }
          },
          {
            "id": 497,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 498
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 499,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 498,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ReserveData"
              ],
              "params": [
                {
                  "name": "ReserveIdentifier",
                  "type": 173
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 173,
                      "typeName": "ReserveIdentifier",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 499,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 498
                }
              },
              "docs": []
            }
          },
          {
            "id": 500,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 501
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 504,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 501,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "IdAmount"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 502
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 502,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 502,
            "type": {
              "path": [
                "westend_runtime",
                "RuntimeHoldReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Preimage",
                      "fields": [
                        {
                          "name": null,
                          "type": 503,
                          "typeName": "pallet_preimage::HoldReason",
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 503,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "HoldReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Preimage",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 504,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 501
                }
              },
              "docs": []
            }
          },
          {
            "id": 505,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 506
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 509,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 506,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "IdAmount"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 507
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 507,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 507,
            "type": {
              "path": [
                "westend_runtime",
                "RuntimeFreezeReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NominationPools",
                      "fields": [
                        {
                          "name": null,
                          "type": 508,
                          "typeName": "pallet_nomination_pools::FreezeReason",
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 508,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "pallet",
                "FreezeReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PoolMinBalance",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 509,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 506
                }
              },
              "docs": []
            }
          },
          {
            "id": 510,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VestingBalance",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Vesting balance too high to send value."
                      ]
                    },
                    {
                      "name": "LiquidityRestrictions",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Account liquidity restrictions prevent withdrawal."
                      ]
                    },
                    {
                      "name": "InsufficientBalance",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Balance too low to send value."
                      ]
                    },
                    {
                      "name": "ExistentialDeposit",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Value too low to create account due to existential deposit."
                      ]
                    },
                    {
                      "name": "Expendability",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Transfer/payment would kill account."
                      ]
                    },
                    {
                      "name": "ExistingVestingSchedule",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "A vesting schedule already exists for this account."
                      ]
                    },
                    {
                      "name": "DeadAccount",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Beneficiary account must pre-exist."
                      ]
                    },
                    {
                      "name": "TooManyReserves",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Number of named reserves exceed `MaxReserves`."
                      ]
                    },
                    {
                      "name": "TooManyHolds",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Number of holds exceed `MaxHolds`."
                      ]
                    },
                    {
                      "name": "TooManyFreezes",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Number of freezes exceed `MaxFreezes`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 511,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "Releases"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V1Ancient",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "V2",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 512,
            "type": {
              "path": [
                "pallet_staking",
                "StakingLedger"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "stash",
                      "type": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "total",
                      "type": 106,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "active",
                      "type": 106,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "unlocking",
                      "type": 513,
                      "typeName": "BoundedVec<UnlockChunk<BalanceOf<T>>, T::MaxUnlockingChunks>",
                      "docs": []
                    },
                    {
                      "name": "legacy_claimed_rewards",
                      "type": 516,
                      "typeName": "BoundedVec<EraIndex, T::HistoryDepth>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 513,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 514
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 515,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 514,
            "type": {
              "path": [
                "pallet_staking",
                "UnlockChunk"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "value",
                      "type": 106,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "era",
                      "type": 92,
                      "typeName": "EraIndex",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 515,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 514
                }
              },
              "docs": []
            }
          },
          {
            "id": 516,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 80,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 517,
            "type": {
              "path": [
                "pallet_staking",
                "Nominations"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "targets",
                      "type": 518,
                      "typeName": "BoundedVec<T::AccountId, MaxNominationsOf<T>>",
                      "docs": []
                    },
                    {
                      "name": "submitted_in",
                      "type": 4,
                      "typeName": "EraIndex",
                      "docs": []
                    },
                    {
                      "name": "suppressed",
                      "type": 39,
                      "typeName": "bool",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 518,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 107,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 519,
            "type": {
              "path": [
                "pallet_staking",
                "ActiveEraInfo"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 4,
                      "typeName": "EraIndex",
                      "docs": []
                    },
                    {
                      "name": "start",
                      "type": 520,
                      "typeName": "Option<u64>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 520,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 11
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 11,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 521,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  0
                ]
              },
              "docs": []
            }
          },
          {
            "id": 522,
            "type": {
              "path": [
                "sp_staking",
                "Exposure"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 106,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "own",
                      "type": 106,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "others",
                      "type": 523,
                      "typeName": "Vec<IndividualExposure<AccountId, Balance>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 523,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 524
                }
              },
              "docs": []
            }
          },
          {
            "id": 524,
            "type": {
              "path": [
                "sp_staking",
                "IndividualExposure"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "type": 106,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 525,
            "type": {
              "path": [
                "sp_staking",
                "PagedExposureMetadata"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 106,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "own",
                      "type": 106,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "nominator_count",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "page_count",
                      "type": 4,
                      "typeName": "Page",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 526,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  0,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 527,
            "type": {
              "path": [
                "sp_staking",
                "ExposurePage"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "page_total",
                      "type": 106,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "others",
                      "type": 523,
                      "typeName": "Vec<IndividualExposure<AccountId, Balance>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 528,
            "type": {
              "path": [
                "pallet_staking",
                "EraRewardPoints"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 4,
                      "typeName": "RewardPoint",
                      "docs": []
                    },
                    {
                      "name": "individual",
                      "type": 529,
                      "typeName": "BTreeMap<AccountId, RewardPoint>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 529,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 530,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 530,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 531
                }
              },
              "docs": []
            }
          },
          {
            "id": 531,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 532,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 533
                }
              },
              "docs": []
            }
          },
          {
            "id": 533,
            "type": {
              "path": [
                "pallet_staking",
                "UnappliedSlash"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "validator",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "own",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "others",
                      "type": 270,
                      "typeName": "Vec<(AccountId, Balance)>",
                      "docs": []
                    },
                    {
                      "name": "reporters",
                      "type": 107,
                      "typeName": "Vec<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "payout",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 534,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  36,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 535,
            "type": {
              "path": [
                "pallet_staking",
                "slashing",
                "SlashingSpans"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "span_index",
                      "type": 4,
                      "typeName": "SpanIndex",
                      "docs": []
                    },
                    {
                      "name": "last_start",
                      "type": 4,
                      "typeName": "EraIndex",
                      "docs": []
                    },
                    {
                      "name": "last_nonzero_slash",
                      "type": 4,
                      "typeName": "EraIndex",
                      "docs": []
                    },
                    {
                      "name": "prior",
                      "type": 80,
                      "typeName": "Vec<EraIndex>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 536,
            "type": {
              "path": [
                "pallet_staking",
                "slashing",
                "SpanRecord"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "slashed",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "paid_out",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 537,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 538
                }
              },
              "docs": []
            }
          },
          {
            "id": 538,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  39
                ]
              },
              "docs": []
            }
          },
          {
            "id": 539,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotController",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Not a controller account."
                      ]
                    },
                    {
                      "name": "NotStash",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Not a stash account."
                      ]
                    },
                    {
                      "name": "AlreadyBonded",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Stash is already bonded."
                      ]
                    },
                    {
                      "name": "AlreadyPaired",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Controller is already paired."
                      ]
                    },
                    {
                      "name": "EmptyTargets",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Targets cannot be empty."
                      ]
                    },
                    {
                      "name": "DuplicateIndex",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Duplicate index."
                      ]
                    },
                    {
                      "name": "InvalidSlashIndex",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Slash record index out of bounds."
                      ]
                    },
                    {
                      "name": "InsufficientBond",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Cannot have a validator or nominator role, with value less than the minimum defined by",
                        "governance (see `MinValidatorBond` and `MinNominatorBond`). If unbonding is the",
                        "intention, `chill` first to remove one's role as validator/nominator."
                      ]
                    },
                    {
                      "name": "NoMoreChunks",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Can not schedule more unlock chunks."
                      ]
                    },
                    {
                      "name": "NoUnlockChunk",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Can not rebond without unlocking chunks."
                      ]
                    },
                    {
                      "name": "FundedTarget",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "Attempting to target a stash that still has funds."
                      ]
                    },
                    {
                      "name": "InvalidEraToReward",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "Invalid era to reward."
                      ]
                    },
                    {
                      "name": "InvalidNumberOfNominations",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "Invalid number of nominations."
                      ]
                    },
                    {
                      "name": "NotSortedAndUnique",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "Items are not sorted and unique."
                      ]
                    },
                    {
                      "name": "AlreadyClaimed",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "Rewards for this era have already been claimed for this validator."
                      ]
                    },
                    {
                      "name": "InvalidPage",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "No nominators exist on this page."
                      ]
                    },
                    {
                      "name": "IncorrectHistoryDepth",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "Incorrect previous history depth input provided."
                      ]
                    },
                    {
                      "name": "IncorrectSlashingSpans",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "Incorrect number of slashing spans provided."
                      ]
                    },
                    {
                      "name": "BadState",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "Internal state has become somehow corrupted and the operation cannot continue."
                      ]
                    },
                    {
                      "name": "TooManyTargets",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "Too many nomination targets supplied."
                      ]
                    },
                    {
                      "name": "BadTarget",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "A nomination target was supplied that was blocked or otherwise not a validator."
                      ]
                    },
                    {
                      "name": "CannotChillOther",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "The user has enough bond and thus cannot be chilled forcefully by an external person."
                      ]
                    },
                    {
                      "name": "TooManyNominators",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "There are too many nominators in the system. Governance needs to adjust the staking",
                        "settings to keep things safe for the runtime."
                      ]
                    },
                    {
                      "name": "TooManyValidators",
                      "fields": [],
                      "index": 23,
                      "docs": [
                        "There are too many validator candidates in the system. Governance needs to adjust the",
                        "staking settings to keep things safe for the runtime."
                      ]
                    },
                    {
                      "name": "CommissionTooLow",
                      "fields": [],
                      "index": 24,
                      "docs": [
                        "Commission is too low. Must be at least `MinCommission`."
                      ]
                    },
                    {
                      "name": "BoundNotMet",
                      "fields": [],
                      "index": 25,
                      "docs": [
                        "Some bound is not met."
                      ]
                    },
                    {
                      "name": "ControllerDeprecated",
                      "fields": [],
                      "index": 26,
                      "docs": [
                        "Used when attempting to use deprecated controller account logic."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 540,
            "type": {
              "path": [
                "sp_staking",
                "offence",
                "OffenceDetails"
              ],
              "params": [
                {
                  "name": "Reporter",
                  "type": 0
                },
                {
                  "name": "Offender",
                  "type": 541
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "offender",
                      "type": 541,
                      "typeName": "Offender",
                      "docs": []
                    },
                    {
                      "name": "reporters",
                      "type": 107,
                      "typeName": "Vec<Reporter>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 541,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  522
                ]
              },
              "docs": []
            }
          },
          {
            "id": 542,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  42,
                  13
                ]
              },
              "docs": []
            }
          },
          {
            "id": 543,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 117
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 544,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 544,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 117
                }
              },
              "docs": []
            }
          },
          {
            "id": 545,
            "type": {
              "path": [
                "pallet_beefy",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidKeyOwnershipProof",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "A key ownership proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "InvalidEquivocationProof",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "An equivocation proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "DuplicateOffenceReport",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "A given equivocation report is valid but already previously reported."
                      ]
                    },
                    {
                      "name": "InvalidConfiguration",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Submitted configuration is invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 546,
            "type": {
              "path": [
                "sp_consensus_beefy",
                "mmr",
                "BeefyAuthoritySet"
              ],
              "params": [
                {
                  "name": "AuthoritySetCommitment",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 11,
                      "typeName": "crate::ValidatorSetId",
                      "docs": []
                    },
                    {
                      "name": "len",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "keyset_commitment",
                      "type": 12,
                      "typeName": "AuthoritySetCommitment",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 547,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 548
                }
              },
              "docs": []
            }
          },
          {
            "id": 548,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  130
                ]
              },
              "docs": []
            }
          },
          {
            "id": 549,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  550,
                  13
                ]
              },
              "docs": []
            }
          },
          {
            "id": 550,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "KeyTypeId"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 17,
                      "typeName": "[u8; 4]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 551,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidProof",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Invalid ownership proof."
                      ]
                    },
                    {
                      "name": "NoAssociatedValidatorId",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "No associated validator ID for account."
                      ]
                    },
                    {
                      "name": "DuplicatedKey",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Registered duplicate key."
                      ]
                    },
                    {
                      "name": "NoKeys",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "No keys are associated with this account."
                      ]
                    },
                    {
                      "name": "NoAccount",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Key setting account is not live, so it's impossible to associate keys."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the session pallet."
              ]
            }
          },
          {
            "id": 552,
            "type": {
              "path": [
                "pallet_grandpa",
                "StoredState"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Live",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "PendingPause",
                      "fields": [
                        {
                          "name": "scheduled_at",
                          "type": 4,
                          "typeName": "N",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "N",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Paused",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "PendingResume",
                      "fields": [
                        {
                          "name": "scheduled_at",
                          "type": 4,
                          "typeName": "N",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "N",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 553,
            "type": {
              "path": [
                "pallet_grandpa",
                "StoredPendingChange"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                },
                {
                  "name": "Limit",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "scheduled_at",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    },
                    {
                      "name": "next_authorities",
                      "type": 554,
                      "typeName": "BoundedAuthorityList<Limit>",
                      "docs": []
                    },
                    {
                      "name": "forced",
                      "type": 272,
                      "typeName": "Option<N>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 554,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 46
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 45,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 555,
            "type": {
              "path": [
                "pallet_grandpa",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PauseFailed",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Attempt to signal GRANDPA pause when the authority set isn't live",
                        "(either paused or already pending pause)."
                      ]
                    },
                    {
                      "name": "ResumeFailed",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Attempt to signal GRANDPA resume when the authority set isn't paused",
                        "(either live or already pending resume)."
                      ]
                    },
                    {
                      "name": "ChangePending",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Attempt to signal GRANDPA change with one already pending."
                      ]
                    },
                    {
                      "name": "TooSoon",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Cannot signal forced change so soon after last."
                      ]
                    },
                    {
                      "name": "InvalidKeyOwnershipProof",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "A key ownership proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "InvalidEquivocationProof",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "An equivocation proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "DuplicateOffenceReport",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "A given equivocation report is valid but already previously reported."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 556,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooManyCalls",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Too many calls batched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 557,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "Registration"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "MaxJudgements",
                  "type": null
                },
                {
                  "name": "IdentityInfo",
                  "type": 163
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "judgements",
                      "type": 558,
                      "typeName": "BoundedVec<(RegistrarIndex, Judgement<Balance>), MaxJudgements>",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "info",
                      "type": 163,
                      "typeName": "IdentityInfo",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 558,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 559
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 560,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 559,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  199
                ]
              },
              "docs": []
            }
          },
          {
            "id": 560,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 559
                }
              },
              "docs": []
            }
          },
          {
            "id": 561,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  6,
                  562
                ]
              },
              "docs": []
            }
          },
          {
            "id": 562,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 107,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 563,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 564
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 566,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 564,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 565
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 565,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 565,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "RegistrarInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "IdField",
                  "type": 11
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "fields",
                      "type": 11,
                      "typeName": "IdField",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 566,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 564
                }
              },
              "docs": []
            }
          },
          {
            "id": 567,
            "type": {
              "path": [
                "pallet_identity",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooManySubAccounts",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Too many subs-accounts."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Account isn't found."
                      ]
                    },
                    {
                      "name": "NotNamed",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Account isn't named."
                      ]
                    },
                    {
                      "name": "EmptyIndex",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Empty index."
                      ]
                    },
                    {
                      "name": "FeeChanged",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Fee is changed."
                      ]
                    },
                    {
                      "name": "NoIdentity",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "No identity found."
                      ]
                    },
                    {
                      "name": "StickyJudgement",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Sticky judgement."
                      ]
                    },
                    {
                      "name": "JudgementGiven",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Judgement given."
                      ]
                    },
                    {
                      "name": "InvalidJudgement",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Invalid judgement."
                      ]
                    },
                    {
                      "name": "InvalidIndex",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The index is invalid."
                      ]
                    },
                    {
                      "name": "InvalidTarget",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The target is invalid."
                      ]
                    },
                    {
                      "name": "TooManyRegistrars",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "Maximum amount of registrars reached. Cannot add any more."
                      ]
                    },
                    {
                      "name": "AlreadyClaimed",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "Account ID is already named."
                      ]
                    },
                    {
                      "name": "NotSub",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "Sender is not a sub-account."
                      ]
                    },
                    {
                      "name": "NotOwned",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "Sub-account isn't owned by sender."
                      ]
                    },
                    {
                      "name": "JudgementForDifferentIdentity",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "The provided judgement was for a different identity."
                      ]
                    },
                    {
                      "name": "JudgementPaymentFailed",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "Error that occurs when there is an issue paying for judgement."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 568,
            "type": {
              "path": [
                "pallet_recovery",
                "RecoveryConfig"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Friends",
                  "type": 569
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "delay_period",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "friends",
                      "type": 569,
                      "typeName": "Friends",
                      "docs": []
                    },
                    {
                      "name": "threshold",
                      "type": 63,
                      "typeName": "u16",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 569,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 107,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 570,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  0
                ]
              },
              "docs": []
            }
          },
          {
            "id": 571,
            "type": {
              "path": [
                "pallet_recovery",
                "ActiveRecovery"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Friends",
                  "type": 569
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "created",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "friends",
                      "type": 569,
                      "typeName": "Friends",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 572,
            "type": {
              "path": [
                "pallet_recovery",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotAllowed",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "User is not allowed to make a call on behalf of this account"
                      ]
                    },
                    {
                      "name": "ZeroThreshold",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Threshold must be greater than zero"
                      ]
                    },
                    {
                      "name": "NotEnoughFriends",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Friends list must be greater than zero and threshold"
                      ]
                    },
                    {
                      "name": "MaxFriends",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Friends list must be less than max friends"
                      ]
                    },
                    {
                      "name": "NotSorted",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Friends list must be sorted and free of duplicates"
                      ]
                    },
                    {
                      "name": "NotRecoverable",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "This account is not set up for recovery"
                      ]
                    },
                    {
                      "name": "AlreadyRecoverable",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "This account is already set up for recovery"
                      ]
                    },
                    {
                      "name": "AlreadyStarted",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "A recovery process has already started for this account"
                      ]
                    },
                    {
                      "name": "NotStarted",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "A recovery process has not started for this rescuer"
                      ]
                    },
                    {
                      "name": "NotFriend",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "This account is not a friend who can vouch"
                      ]
                    },
                    {
                      "name": "DelayPeriod",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The friend must wait until the delay period to vouch for this recovery"
                      ]
                    },
                    {
                      "name": "AlreadyVouched",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "This user has already vouched for this recovery"
                      ]
                    },
                    {
                      "name": "Threshold",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The threshold for recovering this account has not been met"
                      ]
                    },
                    {
                      "name": "StillActive",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "There are still active recovery attempts that need to be closed"
                      ]
                    },
                    {
                      "name": "AlreadyProxy",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "This account is already set up for recovery"
                      ]
                    },
                    {
                      "name": "BadState",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "Some internal state is broken."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 573,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 202
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 574,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 574,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 202
                }
              },
              "docs": []
            }
          },
          {
            "id": 575,
            "type": {
              "path": [
                "pallet_vesting",
                "Releases"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V0",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "V1",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 576,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotVesting",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The account given is not vesting."
                      ]
                    },
                    {
                      "name": "AtMaxVestingSchedules",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The account already has `MaxVestingSchedules` count of schedules and thus",
                        "cannot add another one. Consider merging existing schedules in order to add another."
                      ]
                    },
                    {
                      "name": "AmountLow",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Amount being transferred is too low to create a vesting schedule."
                      ]
                    },
                    {
                      "name": "ScheduleIndexOutOfBounds",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "An index was out of bounds of the vesting schedules."
                      ]
                    },
                    {
                      "name": "InvalidScheduleParams",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Failed to create a new schedule because some parameter was invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the vesting pallet."
              ]
            }
          },
          {
            "id": 577,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 578
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 580,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 578,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 579
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 579,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 579,
            "type": {
              "path": [
                "pallet_scheduler",
                "Scheduled"
              ],
              "params": [
                {
                  "name": "Name",
                  "type": 1
                },
                {
                  "name": "Call",
                  "type": 83
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "PalletsOrigin",
                  "type": 148
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "maybe_id",
                      "type": 57,
                      "typeName": "Option<Name>",
                      "docs": []
                    },
                    {
                      "name": "priority",
                      "type": 2,
                      "typeName": "schedule::Priority",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "type": 83,
                      "typeName": "Call",
                      "docs": []
                    },
                    {
                      "name": "maybe_periodic",
                      "type": 204,
                      "typeName": "Option<schedule::Period<BlockNumber>>",
                      "docs": []
                    },
                    {
                      "name": "origin",
                      "type": 148,
                      "typeName": "PalletsOrigin",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 580,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 578
                }
              },
              "docs": []
            }
          },
          {
            "id": 581,
            "type": {
              "path": [
                "pallet_scheduler",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FailedToSchedule",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Failed to schedule a call"
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Cannot find the scheduled call."
                      ]
                    },
                    {
                      "name": "TargetBlockNumberInPast",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Given target block number is in the past."
                      ]
                    },
                    {
                      "name": "RescheduleNoChange",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Reschedule failed because it does not change scheduled time."
                      ]
                    },
                    {
                      "name": "Named",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Attempt to use a non-named function on a named task."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 582,
            "type": {
              "path": [
                "pallet_preimage",
                "OldRequestStatus"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unrequested",
                      "fields": [
                        {
                          "name": "deposit",
                          "type": 271,
                          "typeName": "(AccountId, Balance)",
                          "docs": []
                        },
                        {
                          "name": "len",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Requested",
                      "fields": [
                        {
                          "name": "deposit",
                          "type": 583,
                          "typeName": "Option<(AccountId, Balance)>",
                          "docs": []
                        },
                        {
                          "name": "count",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "len",
                          "type": 272,
                          "typeName": "Option<u32>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 583,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 271
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 271,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 584,
            "type": {
              "path": [
                "pallet_preimage",
                "RequestStatus"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Ticket",
                  "type": 585
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unrequested",
                      "fields": [
                        {
                          "name": "ticket",
                          "type": 586,
                          "typeName": "(AccountId, Ticket)",
                          "docs": []
                        },
                        {
                          "name": "len",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Requested",
                      "fields": [
                        {
                          "name": "maybe_ticket",
                          "type": 587,
                          "typeName": "Option<(AccountId, Ticket)>",
                          "docs": []
                        },
                        {
                          "name": "count",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "maybe_len",
                          "type": 272,
                          "typeName": "Option<u32>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 585,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "tokens",
                "fungible",
                "HoldConsideration"
              ],
              "params": [
                {
                  "name": "A",
                  "type": null
                },
                {
                  "name": "F",
                  "type": null
                },
                {
                  "name": "R",
                  "type": null
                },
                {
                  "name": "D",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 6,
                      "typeName": "F::Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 586,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  585
                ]
              },
              "docs": []
            }
          },
          {
            "id": 587,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 586
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 586,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 588,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  12,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 589,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 590,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooBig",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Preimage is too large to store on-chain."
                      ]
                    },
                    {
                      "name": "AlreadyNoted",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Preimage has already been noted on-chain."
                      ]
                    },
                    {
                      "name": "NotAuthorized",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The user is not authorized to perform this action."
                      ]
                    },
                    {
                      "name": "NotNoted",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The preimage cannot be removed since it has not yet been noted."
                      ]
                    },
                    {
                      "name": "Requested",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "A preimage may not be removed when there are outstanding requests."
                      ]
                    },
                    {
                      "name": "NotRequested",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The preimage request cannot be removed since no outstanding requests exist."
                      ]
                    },
                    {
                      "name": "TooMany",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "More than `MAX_HASH_UPGRADE_BULK_COUNT` hashes were requested to be upgraded at once."
                      ]
                    },
                    {
                      "name": "TooFew",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Too few hashes were requested to be upgraded (i.e. zero)."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 591,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RequireSudo",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Sender must be the Sudo account."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the Sudo pallet."
              ]
            }
          },
          {
            "id": 592,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  593,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 593,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 594
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 595,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 594,
            "type": {
              "path": [
                "pallet_proxy",
                "ProxyDefinition"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "ProxyType",
                  "type": 62
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "delegate",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "proxy_type",
                      "type": 62,
                      "typeName": "ProxyType",
                      "docs": []
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 595,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 594
                }
              },
              "docs": []
            }
          },
          {
            "id": 596,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  597,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 597,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 598
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 599,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 598,
            "type": {
              "path": [
                "pallet_proxy",
                "Announcement"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Hash",
                  "type": 12
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "real",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "call_hash",
                      "type": 12,
                      "typeName": "Hash",
                      "docs": []
                    },
                    {
                      "name": "height",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 599,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 598
                }
              },
              "docs": []
            }
          },
          {
            "id": 600,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooMany",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "There are too many proxies registered or too many announcements pending."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Proxy registration not found."
                      ]
                    },
                    {
                      "name": "NotProxy",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Sender is not a proxy of the account to be proxied."
                      ]
                    },
                    {
                      "name": "Unproxyable",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "A call which is incompatible with the proxy type's filter was attempted."
                      ]
                    },
                    {
                      "name": "Duplicate",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Account is already a proxy."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Call may not be made by proxy because it may escalate its privileges."
                      ]
                    },
                    {
                      "name": "Unannounced",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Announcement, if made at all, was made too recently."
                      ]
                    },
                    {
                      "name": "NoSelfProxy",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Cannot add self as proxy."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 601,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  1
                ]
              },
              "docs": []
            }
          },
          {
            "id": 602,
            "type": {
              "path": [
                "pallet_multisig",
                "Multisig"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "MaxApprovals",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "when",
                      "type": 65,
                      "typeName": "Timepoint<BlockNumber>",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "depositor",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "approvals",
                      "type": 603,
                      "typeName": "BoundedVec<AccountId, MaxApprovals>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 603,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 107,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 604,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MinimumThreshold",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Threshold must be 2 or greater."
                      ]
                    },
                    {
                      "name": "AlreadyApproved",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Call is already approved by this signatory."
                      ]
                    },
                    {
                      "name": "NoApprovalsNeeded",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Call doesn't need any (more) approvals."
                      ]
                    },
                    {
                      "name": "TooFewSignatories",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "There are too few signatories in the list."
                      ]
                    },
                    {
                      "name": "TooManySignatories",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "There are too many signatories in the list."
                      ]
                    },
                    {
                      "name": "SignatoriesOutOfOrder",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The signatories were provided out of order; they should be ordered."
                      ]
                    },
                    {
                      "name": "SenderInSignatories",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The sender was contained in the other signatories; it shouldn't be."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Multisig operation not found when attempting to cancel."
                      ]
                    },
                    {
                      "name": "NotOwner",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Only the account that originally created the multisig is able to cancel it."
                      ]
                    },
                    {
                      "name": "NoTimepoint",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "No timepoint was given, yet the multisig operation is already underway."
                      ]
                    },
                    {
                      "name": "WrongTimepoint",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "A different timepoint was given to the multisig operation that is underway."
                      ]
                    },
                    {
                      "name": "UnexpectedTimepoint",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "A timepoint was given, yet no multisig operation is underway."
                      ]
                    },
                    {
                      "name": "MaxWeightTooLow",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The maximum weight information provided was too low."
                      ]
                    },
                    {
                      "name": "AlreadyStored",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The data to be stored is already stored."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 605,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "ReadySolution"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": null
                },
                {
                  "name": "MaxWinners",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "supports",
                      "type": 606,
                      "typeName": "BoundedSupports<AccountId, MaxWinners>",
                      "docs": []
                    },
                    {
                      "name": "score",
                      "type": 68,
                      "typeName": "ElectionScore",
                      "docs": []
                    },
                    {
                      "name": "compute",
                      "type": 67,
                      "typeName": "ElectionCompute",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 606,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 268
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 267,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 607,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "RoundSnapshot"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "DataProvider",
                  "type": 608
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "voters",
                      "type": 609,
                      "typeName": "Vec<DataProvider>",
                      "docs": []
                    },
                    {
                      "name": "targets",
                      "type": 107,
                      "typeName": "Vec<AccountId>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 608,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  11,
                  518
                ]
              },
              "docs": []
            }
          },
          {
            "id": 609,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 608
                }
              },
              "docs": []
            }
          },
          {
            "id": 610,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 611
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 612,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 611,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  68,
                  4,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 612,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 611
                }
              },
              "docs": []
            }
          },
          {
            "id": 613,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "signed",
                "SignedSubmission"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Solution",
                  "type": 214
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "raw_solution",
                      "type": 213,
                      "typeName": "RawSolution<Solution>",
                      "docs": []
                    },
                    {
                      "name": "call_fee",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 614,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PreDispatchEarlySubmission",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Submission was too early."
                      ]
                    },
                    {
                      "name": "PreDispatchWrongWinnerCount",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Wrong number of winners presented."
                      ]
                    },
                    {
                      "name": "PreDispatchWeakSubmission",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Submission was too weak, score-wise."
                      ]
                    },
                    {
                      "name": "SignedQueueFull",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The queue was full, and the solution was not better than any of the existing ones."
                      ]
                    },
                    {
                      "name": "SignedCannotPayDeposit",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The origin failed to pay the deposit."
                      ]
                    },
                    {
                      "name": "SignedInvalidWitness",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Witness data to dispatchable is invalid."
                      ]
                    },
                    {
                      "name": "SignedTooMuchWeight",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The signed submission consumes too much weight"
                      ]
                    },
                    {
                      "name": "OcwCallWrongEra",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "OCW submitted solution for wrong round"
                      ]
                    },
                    {
                      "name": "MissingSnapshotMetadata",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Snapshot metadata should exist but didn't."
                      ]
                    },
                    {
                      "name": "InvalidSubmissionIndex",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "`Self::insert_submission` returned an invalid index."
                      ]
                    },
                    {
                      "name": "CallNotAllowed",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The call is not allowed at this point."
                      ]
                    },
                    {
                      "name": "FallbackFailed",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The fallback failed"
                      ]
                    },
                    {
                      "name": "BoundNotMet",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "Some bound not met"
                      ]
                    },
                    {
                      "name": "TooManyWinners",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "Submitted solution has too many winners"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error of the pallet that can be returned in response to dispatches."
              ]
            }
          },
          {
            "id": 615,
            "type": {
              "path": [
                "pallet_bags_list",
                "list",
                "Node"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "prev",
                      "type": 60,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "next",
                      "type": 60,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "bag_upper",
                      "type": 11,
                      "typeName": "T::Score",
                      "docs": []
                    },
                    {
                      "name": "score",
                      "type": 11,
                      "typeName": "T::Score",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 616,
            "type": {
              "path": [
                "pallet_bags_list",
                "list",
                "Bag"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "head",
                      "type": 60,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "tail",
                      "type": 60,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 617,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 11
                }
              },
              "docs": []
            }
          },
          {
            "id": 618,
            "type": {
              "path": [
                "pallet_bags_list",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "List",
                      "fields": [
                        {
                          "name": null,
                          "type": 619,
                          "typeName": "ListError",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A error in the list interface implementation."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 619,
            "type": {
              "path": [
                "pallet_bags_list",
                "list",
                "ListError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Duplicate",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "NotHeavier",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "NotInSameBag",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "NodeNotFound",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 620,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "PoolMember"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "pool_id",
                      "type": 4,
                      "typeName": "PoolId",
                      "docs": []
                    },
                    {
                      "name": "points",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "last_recorded_reward_counter",
                      "type": 427,
                      "typeName": "T::RewardCounter",
                      "docs": []
                    },
                    {
                      "name": "unbonding_eras",
                      "type": 621,
                      "typeName": "BoundedBTreeMap<EraIndex, BalanceOf<T>, T::MaxUnbonding>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 621,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_btree_map",
                "BoundedBTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 4
                },
                {
                  "name": "V",
                  "type": 6
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 622,
                      "typeName": "BTreeMap<K, V>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 622,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 4
                },
                {
                  "name": "V",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 623,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 623,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 624
                }
              },
              "docs": []
            }
          },
          {
            "id": 624,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 625,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "BondedPoolInner"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "commission",
                      "type": 626,
                      "typeName": "Commission<T>",
                      "docs": []
                    },
                    {
                      "name": "member_counter",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "points",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "roles",
                      "type": 629,
                      "typeName": "PoolRoles<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "state",
                      "type": 73,
                      "typeName": "PoolState",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 626,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "Commission"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "current",
                      "type": 74,
                      "typeName": "Option<(Perbill, T::AccountId)>",
                      "docs": []
                    },
                    {
                      "name": "max",
                      "type": 627,
                      "typeName": "Option<Perbill>",
                      "docs": []
                    },
                    {
                      "name": "change_rate",
                      "type": 628,
                      "typeName": "Option<CommissionChangeRate<BlockNumberFor<T>>>",
                      "docs": []
                    },
                    {
                      "name": "throttle_from",
                      "type": 272,
                      "typeName": "Option<BlockNumberFor<T>>",
                      "docs": []
                    },
                    {
                      "name": "claim_permission",
                      "type": 77,
                      "typeName": "Option<CommissionClaimPermission<T::AccountId>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 627,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 36
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 36,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 628,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 76
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 76,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 629,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "PoolRoles"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "depositor",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "root",
                      "type": 60,
                      "typeName": "Option<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "nominator",
                      "type": 60,
                      "typeName": "Option<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "bouncer",
                      "type": 60,
                      "typeName": "Option<AccountId>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 630,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "RewardPool"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "last_recorded_reward_counter",
                      "type": 427,
                      "typeName": "T::RewardCounter",
                      "docs": []
                    },
                    {
                      "name": "last_recorded_total_payouts",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "total_rewards_claimed",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "total_commission_pending",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "total_commission_claimed",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 631,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "SubPools"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "no_era",
                      "type": 632,
                      "typeName": "UnbondPool<T>",
                      "docs": []
                    },
                    {
                      "name": "with_era",
                      "type": 633,
                      "typeName": "BoundedBTreeMap<EraIndex, UnbondPool<T>, TotalUnbondingPools<T>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 632,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "UnbondPool"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "points",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "balance",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 633,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_btree_map",
                "BoundedBTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 4
                },
                {
                  "name": "V",
                  "type": 632
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 634,
                      "typeName": "BTreeMap<K, V>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 634,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 4
                },
                {
                  "name": "V",
                  "type": 632
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 635,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 635,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 636
                }
              },
              "docs": []
            }
          },
          {
            "id": 636,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  632
                ]
              },
              "docs": []
            }
          },
          {
            "id": 637,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 638,
            "type": {
              "path": [
                "frame_support",
                "PalletId"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 173,
                      "typeName": "[u8; 8]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 639,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PoolNotFound",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "A (bonded) pool id does not exist."
                      ]
                    },
                    {
                      "name": "PoolMemberNotFound",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "An account is not a member."
                      ]
                    },
                    {
                      "name": "RewardPoolNotFound",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "A reward pool does not exist. In all cases this is a system logic error."
                      ]
                    },
                    {
                      "name": "SubPoolsNotFound",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "A sub pool does not exist."
                      ]
                    },
                    {
                      "name": "AccountBelongsToOtherPool",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "An account is already delegating in another pool. An account may only belong to one",
                        "pool at a time."
                      ]
                    },
                    {
                      "name": "FullyUnbonding",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The member is fully unbonded (and thus cannot access the bonded and reward pool",
                        "anymore to, for example, collect rewards)."
                      ]
                    },
                    {
                      "name": "MaxUnbondingLimit",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The member cannot unbond further chunks due to reaching the limit."
                      ]
                    },
                    {
                      "name": "CannotWithdrawAny",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "None of the funds can be withdrawn yet because the bonding duration has not passed."
                      ]
                    },
                    {
                      "name": "MinimumBondNotMet",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The amount does not meet the minimum bond to either join or create a pool.",
                        "",
                        "The depositor can never unbond to a value less than `Pallet::depositor_min_bond`. The",
                        "caller does not have nominating permissions for the pool. Members can never unbond to a",
                        "value below `MinJoinBond`."
                      ]
                    },
                    {
                      "name": "OverflowRisk",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The transaction could not be executed due to overflow risk for the pool."
                      ]
                    },
                    {
                      "name": "NotDestroying",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "A pool must be in [`PoolState::Destroying`] in order for the depositor to unbond or for",
                        "other members to be permissionlessly unbonded."
                      ]
                    },
                    {
                      "name": "NotNominator",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The caller does not have nominating permissions for the pool."
                      ]
                    },
                    {
                      "name": "NotKickerOrDestroying",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "Either a) the caller cannot make a valid kick or b) the pool is not destroying."
                      ]
                    },
                    {
                      "name": "NotOpen",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The pool is not open to join"
                      ]
                    },
                    {
                      "name": "MaxPools",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "The system is maxed out on pools."
                      ]
                    },
                    {
                      "name": "MaxPoolMembers",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "Too many members in the pool or system."
                      ]
                    },
                    {
                      "name": "CanNotChangeState",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "The pools state cannot be changed."
                      ]
                    },
                    {
                      "name": "DoesNotHavePermission",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "The caller does not have adequate permissions."
                      ]
                    },
                    {
                      "name": "MetadataExceedsMaxLen",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "Metadata exceeds [`Config::MaxMetadataLen`]"
                      ]
                    },
                    {
                      "name": "Defensive",
                      "fields": [
                        {
                          "name": null,
                          "type": 640,
                          "typeName": "DefensiveError",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Some error occurred that should never happen. This should be reported to the",
                        "maintainers."
                      ]
                    },
                    {
                      "name": "PartialUnbondNotAllowedPermissionlessly",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "Partial unbonding now allowed permissionlessly."
                      ]
                    },
                    {
                      "name": "MaxCommissionRestricted",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "The pool's max commission cannot be set higher than the existing value."
                      ]
                    },
                    {
                      "name": "CommissionExceedsMaximum",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "The supplied commission exceeds the max allowed commission."
                      ]
                    },
                    {
                      "name": "CommissionExceedsGlobalMaximum",
                      "fields": [],
                      "index": 23,
                      "docs": [
                        "The supplied commission exceeds global maximum commission."
                      ]
                    },
                    {
                      "name": "CommissionChangeThrottled",
                      "fields": [],
                      "index": 24,
                      "docs": [
                        "Not enough blocks have surpassed since the last commission update."
                      ]
                    },
                    {
                      "name": "CommissionChangeRateNotAllowed",
                      "fields": [],
                      "index": 25,
                      "docs": [
                        "The submitted changes to commission change rate are not allowed."
                      ]
                    },
                    {
                      "name": "NoPendingCommission",
                      "fields": [],
                      "index": 26,
                      "docs": [
                        "There is no pending commission to claim."
                      ]
                    },
                    {
                      "name": "NoCommissionCurrentSet",
                      "fields": [],
                      "index": 27,
                      "docs": [
                        "No commission current has been set."
                      ]
                    },
                    {
                      "name": "PoolIdInUse",
                      "fields": [],
                      "index": 28,
                      "docs": [
                        "Pool id currently in use."
                      ]
                    },
                    {
                      "name": "InvalidPoolId",
                      "fields": [],
                      "index": 29,
                      "docs": [
                        "Pool id provided is not correct/usable."
                      ]
                    },
                    {
                      "name": "BondExtraRestricted",
                      "fields": [],
                      "index": 30,
                      "docs": [
                        "Bonding extra is restricted to the exact pending reward amount."
                      ]
                    },
                    {
                      "name": "NothingToAdjust",
                      "fields": [],
                      "index": 31,
                      "docs": [
                        "No imbalance in the ED deposit for the pool."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 640,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "pallet",
                "DefensiveError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotEnoughSpaceInUnbondPool",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "PoolNotFound",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "RewardPoolNotFound",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "SubPoolsNotFound",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "BondedStashKilledPrematurely",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 641,
            "type": {
              "path": [
                "pallet_fast_unstake",
                "types",
                "UnstakeRequest"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "stashes",
                      "type": 642,
                      "typeName": "BoundedVec<(T::AccountId, BalanceOf<T>), T::BatchSize>",
                      "docs": []
                    },
                    {
                      "name": "checked",
                      "type": 643,
                      "typeName": "BoundedVec<EraIndex, MaxChecking<T>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 642,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 271
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 270,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 643,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 80,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 644,
            "type": {
              "path": [
                "pallet_fast_unstake",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotController",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The provided Controller account was not found.",
                        "",
                        "This means that the given account is not bonded."
                      ]
                    },
                    {
                      "name": "AlreadyQueued",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The bonded account has already been queued."
                      ]
                    },
                    {
                      "name": "NotFullyBonded",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The bonded account has active unlocking chunks."
                      ]
                    },
                    {
                      "name": "NotQueued",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The provided un-staker is not in the `Queue`."
                      ]
                    },
                    {
                      "name": "AlreadyHead",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The provided un-staker is already in Head, and cannot deregister."
                      ]
                    },
                    {
                      "name": "CallNotAllowed",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The call is not allowed at this point because the pallet is not active."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 645,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  63
                ]
              },
              "docs": []
            }
          },
          {
            "id": 646,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "vote",
                "Voting"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "PollIndex",
                  "type": 4
                },
                {
                  "name": "MaxVotes",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Casting",
                      "fields": [
                        {
                          "name": null,
                          "type": 647,
                          "typeName": "Casting<Balance, BlockNumber, PollIndex, MaxVotes>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Delegating",
                      "fields": [
                        {
                          "name": null,
                          "type": 653,
                          "typeName": "Delegating<Balance, AccountId, BlockNumber>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 647,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "vote",
                "Casting"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "PollIndex",
                  "type": 4
                },
                {
                  "name": "MaxVotes",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "votes",
                      "type": 648,
                      "typeName": "BoundedVec<(PollIndex, AccountVote<Balance>), MaxVotes>",
                      "docs": []
                    },
                    {
                      "name": "delegations",
                      "type": 651,
                      "typeName": "Delegations<Balance>",
                      "docs": []
                    },
                    {
                      "name": "prior",
                      "type": 652,
                      "typeName": "PriorLock<BlockNumber, Balance>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 648,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 649
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 650,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 649,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  283
                ]
              },
              "docs": []
            }
          },
          {
            "id": 650,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 649
                }
              },
              "docs": []
            }
          },
          {
            "id": 651,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "types",
                "Delegations"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "votes",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "capital",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 652,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "vote",
                "PriorLock"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 653,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "vote",
                "Delegating"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "balance",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "target",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "conviction",
                      "type": 285,
                      "typeName": "Conviction",
                      "docs": []
                    },
                    {
                      "name": "delegations",
                      "type": 651,
                      "typeName": "Delegations<Balance>",
                      "docs": []
                    },
                    {
                      "name": "prior",
                      "type": 652,
                      "typeName": "PriorLock<BlockNumber, Balance>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 654,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 655
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 656,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 655,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  63,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 656,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 655
                }
              },
              "docs": []
            }
          },
          {
            "id": 657,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotOngoing",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Poll is not ongoing."
                      ]
                    },
                    {
                      "name": "NotVoter",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The given account did not vote on the poll."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The actor has no permission to conduct the action."
                      ]
                    },
                    {
                      "name": "NoPermissionYet",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The actor has no permission to conduct the action right now but will do in the future."
                      ]
                    },
                    {
                      "name": "AlreadyDelegating",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The account is already delegating."
                      ]
                    },
                    {
                      "name": "AlreadyVoting",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The account currently has votes attached to it and the operation cannot succeed until",
                        "these are removed, either through `unvote` or `reap_vote`."
                      ]
                    },
                    {
                      "name": "InsufficientFunds",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Too high a balance was provided that the account cannot afford."
                      ]
                    },
                    {
                      "name": "NotDelegating",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "The account is not currently delegating."
                      ]
                    },
                    {
                      "name": "Nonsense",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Delegation to oneself makes no sense."
                      ]
                    },
                    {
                      "name": "MaxVotesReached",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Maximum number of votes reached."
                      ]
                    },
                    {
                      "name": "ClassNeeded",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The class must be supplied since it is not easily determinable from the state."
                      ]
                    },
                    {
                      "name": "BadClass",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The class ID supplied is invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 658,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "ReferendumInfo"
              ],
              "params": [
                {
                  "name": "TrackId",
                  "type": 63
                },
                {
                  "name": "RuntimeOrigin",
                  "type": 148
                },
                {
                  "name": "Moment",
                  "type": 4
                },
                {
                  "name": "Call",
                  "type": 83
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Tally",
                  "type": 432
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "ScheduleAddress",
                  "type": 56
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ongoing",
                      "fields": [
                        {
                          "name": null,
                          "type": 659,
                          "typeName": "ReferendumStatus<TrackId, RuntimeOrigin, Moment, Call, Balance, Tally,\nAccountId, ScheduleAddress,>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 661,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 661,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Rejected",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 661,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 661,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Cancelled",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 661,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 661,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "TimedOut",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 661,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 661,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Killed",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 659,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "ReferendumStatus"
              ],
              "params": [
                {
                  "name": "TrackId",
                  "type": 63
                },
                {
                  "name": "RuntimeOrigin",
                  "type": 148
                },
                {
                  "name": "Moment",
                  "type": 4
                },
                {
                  "name": "Call",
                  "type": 83
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Tally",
                  "type": 432
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "ScheduleAddress",
                  "type": 56
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "track",
                      "type": 63,
                      "typeName": "TrackId",
                      "docs": []
                    },
                    {
                      "name": "origin",
                      "type": 148,
                      "typeName": "RuntimeOrigin",
                      "docs": []
                    },
                    {
                      "name": "proposal",
                      "type": 83,
                      "typeName": "Call",
                      "docs": []
                    },
                    {
                      "name": "enactment",
                      "type": 288,
                      "typeName": "DispatchTime<Moment>",
                      "docs": []
                    },
                    {
                      "name": "submitted",
                      "type": 4,
                      "typeName": "Moment",
                      "docs": []
                    },
                    {
                      "name": "submission_deposit",
                      "type": 660,
                      "typeName": "Deposit<AccountId, Balance>",
                      "docs": []
                    },
                    {
                      "name": "decision_deposit",
                      "type": 661,
                      "typeName": "Option<Deposit<AccountId, Balance>>",
                      "docs": []
                    },
                    {
                      "name": "deciding",
                      "type": 662,
                      "typeName": "Option<DecidingStatus<Moment>>",
                      "docs": []
                    },
                    {
                      "name": "tally",
                      "type": 432,
                      "typeName": "Tally",
                      "docs": []
                    },
                    {
                      "name": "in_queue",
                      "type": 39,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "alarm",
                      "type": 664,
                      "typeName": "Option<(Moment, ScheduleAddress)>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 660,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "Deposit"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 661,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 660
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 660,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 662,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 663
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 663,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 663,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "DecidingStatus"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "since",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "confirming",
                      "type": 272,
                      "typeName": "Option<BlockNumber>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 664,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 665
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 665,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 665,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  56
                ]
              },
              "docs": []
            }
          },
          {
            "id": 666,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 624
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 623,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 667,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 668
                }
              },
              "docs": []
            }
          },
          {
            "id": 668,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  63,
                  669
                ]
              },
              "docs": []
            }
          },
          {
            "id": 669,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "TrackInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Moment",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "name",
                      "type": 463,
                      "typeName": "&'static str",
                      "docs": []
                    },
                    {
                      "name": "max_deciding",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "decision_deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "prepare_period",
                      "type": 4,
                      "typeName": "Moment",
                      "docs": []
                    },
                    {
                      "name": "decision_period",
                      "type": 4,
                      "typeName": "Moment",
                      "docs": []
                    },
                    {
                      "name": "confirm_period",
                      "type": 4,
                      "typeName": "Moment",
                      "docs": []
                    },
                    {
                      "name": "min_enactment_period",
                      "type": 4,
                      "typeName": "Moment",
                      "docs": []
                    },
                    {
                      "name": "min_approval",
                      "type": 670,
                      "typeName": "Curve",
                      "docs": []
                    },
                    {
                      "name": "min_support",
                      "type": 670,
                      "typeName": "Curve",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 670,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "Curve"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LinearDecreasing",
                      "fields": [
                        {
                          "name": "length",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        },
                        {
                          "name": "floor",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        },
                        {
                          "name": "ceil",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "SteppedDecreasing",
                      "fields": [
                        {
                          "name": "begin",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        },
                        {
                          "name": "end",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        },
                        {
                          "name": "step",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        },
                        {
                          "name": "period",
                          "type": 36,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Reciprocal",
                      "fields": [
                        {
                          "name": "factor",
                          "type": 671,
                          "typeName": "FixedI64",
                          "docs": []
                        },
                        {
                          "name": "x_offset",
                          "type": 671,
                          "typeName": "FixedI64",
                          "docs": []
                        },
                        {
                          "name": "y_offset",
                          "type": 671,
                          "typeName": "FixedI64",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 671,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedI64"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 672,
                      "typeName": "i64",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 672,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "I64"
              },
              "docs": []
            }
          },
          {
            "id": 673,
            "type": {
              "path": [
                "pallet_referenda",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotOngoing",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Referendum is not ongoing."
                      ]
                    },
                    {
                      "name": "HasDeposit",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Referendum's decision deposit is already paid."
                      ]
                    },
                    {
                      "name": "BadTrack",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The track identifier given was invalid."
                      ]
                    },
                    {
                      "name": "Full",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "There are already a full complement of referenda in progress for this track."
                      ]
                    },
                    {
                      "name": "QueueEmpty",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The queue of the track is empty."
                      ]
                    },
                    {
                      "name": "BadReferendum",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The referendum index provided is invalid in this context."
                      ]
                    },
                    {
                      "name": "NothingToDo",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "There was nothing to do in the advancement."
                      ]
                    },
                    {
                      "name": "NoTrack",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "No track exists for the proposal origin."
                      ]
                    },
                    {
                      "name": "Unfinished",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Any deposit cannot be refunded until after the decision is over."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The deposit refunder is not the depositor."
                      ]
                    },
                    {
                      "name": "NoDeposit",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The deposit cannot be refunded since none was made."
                      ]
                    },
                    {
                      "name": "BadStatus",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The referendum status is invalid for this operation."
                      ]
                    },
                    {
                      "name": "PreimageNotExist",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The preimage does not exist."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 674,
            "type": {
              "path": [
                "pallet_whitelist",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UnavailablePreImage",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The preimage of the call hash could not be loaded."
                      ]
                    },
                    {
                      "name": "UndecodableCall",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The call could not be decoded."
                      ]
                    },
                    {
                      "name": "InvalidCallWeightWitness",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The weight of the decoded call was higher than the witness."
                      ]
                    },
                    {
                      "name": "CallIsNotWhitelisted",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The call was not whitelisted."
                      ]
                    },
                    {
                      "name": "CallAlreadyWhitelisted",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The call was already whitelisted; No-Op."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 675,
            "type": {
              "path": [
                "pallet_treasury",
                "Proposal"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "proposer",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "bond",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 676,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 80,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 677,
            "type": {
              "path": [
                "pallet_treasury",
                "SpendStatus"
              ],
              "params": [
                {
                  "name": "AssetKind",
                  "type": 292
                },
                {
                  "name": "AssetBalance",
                  "type": 6
                },
                {
                  "name": "Beneficiary",
                  "type": 294
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "PaymentId",
                  "type": 11
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset_kind",
                      "type": 292,
                      "typeName": "AssetKind",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "AssetBalance",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": 294,
                      "typeName": "Beneficiary",
                      "docs": []
                    },
                    {
                      "name": "valid_from",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "expire_at",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "status",
                      "type": 678,
                      "typeName": "PaymentState<PaymentId>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 678,
            "type": {
              "path": [
                "pallet_treasury",
                "PaymentState"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 11
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Pending",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Attempted",
                      "fields": [
                        {
                          "name": "id",
                          "type": 11,
                          "typeName": "Id",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Failed",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 679,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Permill"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 680,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 681,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InsufficientProposersBalance",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Proposer's balance is too low."
                      ]
                    },
                    {
                      "name": "InvalidIndex",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "No proposal, bounty or spend at that index."
                      ]
                    },
                    {
                      "name": "TooManyApprovals",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Too many approvals in the queue."
                      ]
                    },
                    {
                      "name": "InsufficientPermission",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The spend origin is valid but the amount it is allowed to spend is lower than the",
                        "amount to be spent."
                      ]
                    },
                    {
                      "name": "ProposalNotApproved",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Proposal has not been approved."
                      ]
                    },
                    {
                      "name": "FailedToConvertBalance",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The balance of the asset kind is not convertible to the balance of the native asset."
                      ]
                    },
                    {
                      "name": "SpendExpired",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The spend has expired and cannot be claimed."
                      ]
                    },
                    {
                      "name": "EarlyPayout",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "The spend is not yet eligible for payout."
                      ]
                    },
                    {
                      "name": "AlreadyAttempted",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The payment has already been attempted."
                      ]
                    },
                    {
                      "name": "PayoutError",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "There was some issue with the mechanism of payment."
                      ]
                    },
                    {
                      "name": "NotAttempted",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The payout was not yet attempted/claimed."
                      ]
                    },
                    {
                      "name": "Inconclusive",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The payment has neither failed nor succeeded yet."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the treasury pallet."
              ]
            }
          },
          {
            "id": 682,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "configuration",
                "HostConfiguration"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_code_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_head_data_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_upward_queue_count",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_upward_queue_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_upward_message_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_upward_message_num_per_candidate",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "hrmp_max_message_num_per_candidate",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "validation_upgrade_cooldown",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "validation_upgrade_delay",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "async_backing_params",
                      "type": 303,
                      "typeName": "AsyncBackingParams",
                      "docs": []
                    },
                    {
                      "name": "max_pov_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_downward_message_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "hrmp_max_parachain_outbound_channels",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "hrmp_sender_deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "hrmp_recipient_deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "hrmp_channel_max_capacity",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "hrmp_channel_max_total_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "hrmp_max_parachain_inbound_channels",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "hrmp_channel_max_message_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "executor_params",
                      "type": 304,
                      "typeName": "ExecutorParams",
                      "docs": []
                    },
                    {
                      "name": "code_retention_period",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "on_demand_cores",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "on_demand_retries",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "on_demand_queue_max_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "on_demand_target_queue_utilization",
                      "type": 36,
                      "typeName": "Perbill",
                      "docs": []
                    },
                    {
                      "name": "on_demand_fee_variability",
                      "type": 36,
                      "typeName": "Perbill",
                      "docs": []
                    },
                    {
                      "name": "on_demand_base_fee",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "on_demand_ttl",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "group_rotation_frequency",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "paras_availability_period",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "scheduling_lookahead",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_validators_per_core",
                      "type": 272,
                      "typeName": "Option<u32>",
                      "docs": []
                    },
                    {
                      "name": "max_validators",
                      "type": 272,
                      "typeName": "Option<u32>",
                      "docs": []
                    },
                    {
                      "name": "dispute_period",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    },
                    {
                      "name": "dispute_post_conclusion_acceptance_period",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "no_show_slots",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "n_delay_tranches",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "zeroth_delay_tranche_width",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "needed_approvals",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "relay_vrf_modulo_samples",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "pvf_voting_ttl",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    },
                    {
                      "name": "minimum_validation_upgrade_delay",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "minimum_backing_votes",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "node_features",
                      "type": 316,
                      "typeName": "NodeFeatures",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 683,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 684
                }
              },
              "docs": []
            }
          },
          {
            "id": 684,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  682
                ]
              },
              "docs": []
            }
          },
          {
            "id": 685,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "configuration",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidNewValue",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The new value for a configuration parameter is invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 686,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 318
                }
              },
              "docs": []
            }
          },
          {
            "id": 687,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 131
                }
              },
              "docs": []
            }
          },
          {
            "id": 688,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "shared",
                "AllowedRelayParentsTracker"
              ],
              "params": [
                {
                  "name": "Hash",
                  "type": 12
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "buffer",
                      "type": 689,
                      "typeName": "VecDeque<(Hash, Hash)>",
                      "docs": []
                    },
                    {
                      "name": "latest_number",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 689,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 690
                }
              },
              "docs": []
            }
          },
          {
            "id": 690,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  12,
                  12
                ]
              },
              "docs": []
            }
          },
          {
            "id": 691,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "inclusion",
                "AvailabilityBitfieldRecord"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "bitfield",
                      "type": 315,
                      "typeName": "AvailabilityBitfield",
                      "docs": []
                    },
                    {
                      "name": "submitted_at",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 692,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "inclusion",
                "CandidatePendingAvailability"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "core",
                      "type": 441,
                      "typeName": "CoreIndex",
                      "docs": []
                    },
                    {
                      "name": "hash",
                      "type": 340,
                      "typeName": "CandidateHash",
                      "docs": []
                    },
                    {
                      "name": "descriptor",
                      "type": 324,
                      "typeName": "CandidateDescriptor<H>",
                      "docs": []
                    },
                    {
                      "name": "availability_votes",
                      "type": 316,
                      "typeName": "BitVec<u8, BitOrderLsb0>",
                      "docs": []
                    },
                    {
                      "name": "backers",
                      "type": 316,
                      "typeName": "BitVec<u8, BitOrderLsb0>",
                      "docs": []
                    },
                    {
                      "name": "relay_parent_number",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    },
                    {
                      "name": "backed_in_number",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    },
                    {
                      "name": "backing_group",
                      "type": 442,
                      "typeName": "GroupIndex",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 693,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "inclusion",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UnsortedOrDuplicateValidatorIndices",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Validator indices are out of order or contains duplicates."
                      ]
                    },
                    {
                      "name": "UnsortedOrDuplicateDisputeStatementSet",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Dispute statement sets are out of order or contain duplicates."
                      ]
                    },
                    {
                      "name": "UnsortedOrDuplicateBackedCandidates",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Backed candidates are out of order (core index) or contain duplicates."
                      ]
                    },
                    {
                      "name": "UnexpectedRelayParent",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "A different relay parent was provided compared to the on-chain stored one."
                      ]
                    },
                    {
                      "name": "WrongBitfieldSize",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Availability bitfield has unexpected size."
                      ]
                    },
                    {
                      "name": "BitfieldAllZeros",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Bitfield consists of zeros only."
                      ]
                    },
                    {
                      "name": "BitfieldDuplicateOrUnordered",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Multiple bitfields submitted by same validator or validators out of order by index."
                      ]
                    },
                    {
                      "name": "ValidatorIndexOutOfBounds",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Validator index out of bounds."
                      ]
                    },
                    {
                      "name": "InvalidBitfieldSignature",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Invalid signature"
                      ]
                    },
                    {
                      "name": "UnscheduledCandidate",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Candidate submitted but para not scheduled."
                      ]
                    },
                    {
                      "name": "CandidateScheduledBeforeParaFree",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "Candidate scheduled despite pending candidate already existing for the para."
                      ]
                    },
                    {
                      "name": "ScheduledOutOfOrder",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "Scheduled cores out of order."
                      ]
                    },
                    {
                      "name": "HeadDataTooLarge",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "Head data exceeds the configured maximum."
                      ]
                    },
                    {
                      "name": "PrematureCodeUpgrade",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "Code upgrade prematurely."
                      ]
                    },
                    {
                      "name": "NewCodeTooLarge",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "Output code is too large"
                      ]
                    },
                    {
                      "name": "DisallowedRelayParent",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "The candidate's relay-parent was not allowed. Either it was",
                        "not recent enough or it didn't advance based on the last parachain block."
                      ]
                    },
                    {
                      "name": "InvalidAssignment",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "Failed to compute group index for the core: either it's out of bounds",
                        "or the relay parent doesn't belong to the current session."
                      ]
                    },
                    {
                      "name": "InvalidGroupIndex",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "Invalid group index in core assignment."
                      ]
                    },
                    {
                      "name": "InsufficientBacking",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "Insufficient (non-majority) backing."
                      ]
                    },
                    {
                      "name": "InvalidBacking",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "Invalid (bad signature, unknown validator, etc.) backing."
                      ]
                    },
                    {
                      "name": "NotCollatorSigned",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "Collator did not sign PoV."
                      ]
                    },
                    {
                      "name": "ValidationDataHashMismatch",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "The validation data hash does not match expected."
                      ]
                    },
                    {
                      "name": "IncorrectDownwardMessageHandling",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "The downward message queue is not processed correctly."
                      ]
                    },
                    {
                      "name": "InvalidUpwardMessages",
                      "fields": [],
                      "index": 23,
                      "docs": [
                        "At least one upward message sent does not pass the acceptance criteria."
                      ]
                    },
                    {
                      "name": "HrmpWatermarkMishandling",
                      "fields": [],
                      "index": 24,
                      "docs": [
                        "The candidate didn't follow the rules of HRMP watermark advancement."
                      ]
                    },
                    {
                      "name": "InvalidOutboundHrmp",
                      "fields": [],
                      "index": 25,
                      "docs": [
                        "The HRMP messages sent by the candidate is not valid."
                      ]
                    },
                    {
                      "name": "InvalidValidationCodeHash",
                      "fields": [],
                      "index": 26,
                      "docs": [
                        "The validation code hash of the candidate is not valid."
                      ]
                    },
                    {
                      "name": "ParaHeadMismatch",
                      "fields": [],
                      "index": 27,
                      "docs": [
                        "The `para_head` hash in the candidate descriptor doesn't match the hash of the actual",
                        "para head in the commitments."
                      ]
                    },
                    {
                      "name": "BitfieldReferencesFreedCore",
                      "fields": [],
                      "index": 28,
                      "docs": [
                        "A bitfield that references a freed core,",
                        "either intentionally or as part of a concluded",
                        "invalid dispute."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 694,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "ScrapedOnChainVotes"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "session",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    },
                    {
                      "name": "backing_validators_per_candidate",
                      "type": 695,
                      "typeName": "Vec<(CandidateReceipt<H>, Vec<(ValidatorIndex, ValidityAttestation)>)\n>",
                      "docs": []
                    },
                    {
                      "name": "disputes",
                      "type": 338,
                      "typeName": "MultiDisputeStatementSet",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 695,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 696
                }
              },
              "docs": []
            }
          },
          {
            "id": 696,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  440,
                  697
                ]
              },
              "docs": []
            }
          },
          {
            "id": 697,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 698
                }
              },
              "docs": []
            }
          },
          {
            "id": 698,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  318,
                  337
                ]
              },
              "docs": []
            }
          },
          {
            "id": 699,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "paras_inherent",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooManyInclusionInherents",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Inclusion inherent called more than once per block."
                      ]
                    },
                    {
                      "name": "InvalidParentHeader",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The hash of the submitted parent header doesn't correspond to the saved block hash of",
                        "the parent."
                      ]
                    },
                    {
                      "name": "CandidateConcludedInvalid",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Disputed candidate that was concluded invalid."
                      ]
                    },
                    {
                      "name": "InherentOverweight",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The data given to the inherent will result in an overweight block."
                      ]
                    },
                    {
                      "name": "DisputeStatementsUnsortedOrDuplicates",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The ordering of dispute statements was invalid."
                      ]
                    },
                    {
                      "name": "DisputeInvalid",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "A dispute statement was invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 700,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 686
                }
              },
              "docs": []
            }
          },
          {
            "id": 701,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 702
                }
              },
              "docs": []
            }
          },
          {
            "id": 702,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "scheduler",
                "pallet",
                "CoreOccupied"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Free",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Paras",
                      "fields": [
                        {
                          "name": null,
                          "type": 703,
                          "typeName": "ParasEntry<N>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 703,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "scheduler",
                "pallet",
                "ParasEntry"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "assignment",
                      "type": 704,
                      "typeName": "Assignment",
                      "docs": []
                    },
                    {
                      "name": "availability_timeouts",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "ttl",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 704,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "scheduler",
                "common",
                "Assignment"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "para_id",
                      "type": 152,
                      "typeName": "ParaId",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 705,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 441
                },
                {
                  "name": "V",
                  "type": 706
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 708,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 706,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 707
                }
              },
              "docs": []
            }
          },
          {
            "id": 707,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 703
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 703,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 708,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 709
                }
              },
              "docs": []
            }
          },
          {
            "id": 709,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  441,
                  706
                ]
              },
              "docs": []
            }
          },
          {
            "id": 710,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "paras",
                "PvfCheckActiveVoteState"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "votes_accept",
                      "type": 316,
                      "typeName": "BitVec<u8, BitOrderLsb0>",
                      "docs": []
                    },
                    {
                      "name": "votes_reject",
                      "type": 316,
                      "typeName": "BitVec<u8, BitOrderLsb0>",
                      "docs": []
                    },
                    {
                      "name": "age",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    },
                    {
                      "name": "created_at",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "causes",
                      "type": 711,
                      "typeName": "Vec<PvfCheckCause<BlockNumber>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 711,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 712
                }
              },
              "docs": []
            }
          },
          {
            "id": 712,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "paras",
                "PvfCheckCause"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Onboarding",
                      "fields": [
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Upgrade",
                      "fields": [
                        {
                          "name": "id",
                          "type": 152,
                          "typeName": "ParaId",
                          "docs": []
                        },
                        {
                          "name": "included_at",
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": []
                        },
                        {
                          "name": "set_go_ahead",
                          "type": 713,
                          "typeName": "SetGoAhead",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 713,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "paras",
                "SetGoAhead"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Yes",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "No",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 714,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 327
                }
              },
              "docs": []
            }
          },
          {
            "id": 715,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 152
                }
              },
              "docs": []
            }
          },
          {
            "id": 716,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "paras",
                "ParaLifecycle"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Onboarding",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Parathread",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Parachain",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "UpgradingParathread",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "DowngradingParachain",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "OffboardingParathread",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "OffboardingParachain",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 717,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  152,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 718,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "paras",
                "ParaPastCodeMeta"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "upgrade_times",
                      "type": 719,
                      "typeName": "Vec<ReplacementTimes<N>>",
                      "docs": []
                    },
                    {
                      "name": "last_pruned",
                      "type": 272,
                      "typeName": "Option<N>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 719,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 720
                }
              },
              "docs": []
            }
          },
          {
            "id": 720,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "paras",
                "ReplacementTimes"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "expected_at",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    },
                    {
                      "name": "activated_at",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 721,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 717
                }
              },
              "docs": []
            }
          },
          {
            "id": 722,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "UpgradeGoAhead"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Abort",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "GoAhead",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 723,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "UpgradeRestriction"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Present",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 724,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "paras",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotRegistered",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Para is not registered in our system."
                      ]
                    },
                    {
                      "name": "CannotOnboard",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Para cannot be onboarded because it is already tracked by our system."
                      ]
                    },
                    {
                      "name": "CannotOffboard",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Para cannot be offboarded at this time."
                      ]
                    },
                    {
                      "name": "CannotUpgrade",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Para cannot be upgraded to a lease holding parachain."
                      ]
                    },
                    {
                      "name": "CannotDowngrade",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Para cannot be downgraded to an on-demand parachain."
                      ]
                    },
                    {
                      "name": "PvfCheckStatementStale",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The statement for PVF pre-checking is stale."
                      ]
                    },
                    {
                      "name": "PvfCheckStatementFuture",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The statement for PVF pre-checking is for a future session."
                      ]
                    },
                    {
                      "name": "PvfCheckValidatorIndexOutOfBounds",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Claimed validator index is out of bounds."
                      ]
                    },
                    {
                      "name": "PvfCheckInvalidSignature",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The signature for the PVF pre-checking is invalid."
                      ]
                    },
                    {
                      "name": "PvfCheckDoubleVote",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The given validator already has cast a vote."
                      ]
                    },
                    {
                      "name": "PvfCheckSubjectInvalid",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The given PVF does not exist at the moment of process a vote."
                      ]
                    },
                    {
                      "name": "CannotUpgradeCode",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "Parachain cannot currently schedule a code upgrade."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 725,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 726
                }
              },
              "docs": []
            }
          },
          {
            "id": 726,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "initializer",
                "BufferedSessionChange"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "validators",
                      "type": 687,
                      "typeName": "Vec<ValidatorId>",
                      "docs": []
                    },
                    {
                      "name": "queued",
                      "type": 687,
                      "typeName": "Vec<ValidatorId>",
                      "docs": []
                    },
                    {
                      "name": "session_index",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 727,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 728
                }
              },
              "docs": []
            }
          },
          {
            "id": 728,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "InboundDownwardMessage"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sent_at",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "msg",
                      "type": 13,
                      "typeName": "DownwardMessage",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 729,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "hrmp",
                "HrmpOpenChannelRequest"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "confirmed",
                      "type": 39,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "_age",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    },
                    {
                      "name": "sender_deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "max_message_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_capacity",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_total_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 730,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 350
                }
              },
              "docs": []
            }
          },
          {
            "id": 731,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "hrmp",
                "HrmpChannel"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_capacity",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_total_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_message_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "msg_count",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "total_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "mqc_head",
                      "type": 289,
                      "typeName": "Option<Hash>",
                      "docs": []
                    },
                    {
                      "name": "sender_deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "recipient_deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 732,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 733
                }
              },
              "docs": []
            }
          },
          {
            "id": 733,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "InboundHrmpMessage"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sent_at",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "type": 13,
                      "typeName": "sp_std::vec::Vec<u8>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 734,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 735
                }
              },
              "docs": []
            }
          },
          {
            "id": 735,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  715
                ]
              },
              "docs": []
            }
          },
          {
            "id": 736,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "hrmp",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "OpenHrmpChannelToSelf",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The sender tried to open a channel to themselves."
                      ]
                    },
                    {
                      "name": "OpenHrmpChannelInvalidRecipient",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The recipient is not a valid para."
                      ]
                    },
                    {
                      "name": "OpenHrmpChannelZeroCapacity",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The requested capacity is zero."
                      ]
                    },
                    {
                      "name": "OpenHrmpChannelCapacityExceedsLimit",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The requested capacity exceeds the global limit."
                      ]
                    },
                    {
                      "name": "OpenHrmpChannelZeroMessageSize",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The requested maximum message size is 0."
                      ]
                    },
                    {
                      "name": "OpenHrmpChannelMessageSizeExceedsLimit",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The open request requested the message size that exceeds the global limit."
                      ]
                    },
                    {
                      "name": "OpenHrmpChannelAlreadyExists",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The channel already exists"
                      ]
                    },
                    {
                      "name": "OpenHrmpChannelAlreadyRequested",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "There is already a request to open the same channel."
                      ]
                    },
                    {
                      "name": "OpenHrmpChannelLimitExceeded",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The sender already has the maximum number of allowed outbound channels."
                      ]
                    },
                    {
                      "name": "AcceptHrmpChannelDoesntExist",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The channel from the sender to the origin doesn't exist."
                      ]
                    },
                    {
                      "name": "AcceptHrmpChannelAlreadyConfirmed",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The channel is already confirmed."
                      ]
                    },
                    {
                      "name": "AcceptHrmpChannelLimitExceeded",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The recipient already has the maximum number of allowed inbound channels."
                      ]
                    },
                    {
                      "name": "CloseHrmpChannelUnauthorized",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The origin tries to close a channel where it is neither the sender nor the recipient."
                      ]
                    },
                    {
                      "name": "CloseHrmpChannelDoesntExist",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The channel to be closed doesn't exist."
                      ]
                    },
                    {
                      "name": "CloseHrmpChannelAlreadyUnderway",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "The channel close request is already requested."
                      ]
                    },
                    {
                      "name": "CancelHrmpOpenChannelUnauthorized",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "Canceling is requested by neither the sender nor recipient of the open channel request."
                      ]
                    },
                    {
                      "name": "OpenHrmpChannelDoesntExist",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "The open request doesn't exist."
                      ]
                    },
                    {
                      "name": "OpenHrmpChannelAlreadyConfirmed",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "Cannot cancel an HRMP open channel request because it is already confirmed."
                      ]
                    },
                    {
                      "name": "WrongWitness",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "The provided witness data is wrong."
                      ]
                    },
                    {
                      "name": "ChannelCreationNotAuthorized",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "The channel between these two chains cannot be authorized."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 737,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 132
                }
              },
              "docs": []
            }
          },
          {
            "id": 738,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "SessionInfo"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "active_validator_indices",
                      "type": 686,
                      "typeName": "Vec<ValidatorIndex>",
                      "docs": []
                    },
                    {
                      "name": "random_seed",
                      "type": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    },
                    {
                      "name": "dispute_period",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    },
                    {
                      "name": "validators",
                      "type": 739,
                      "typeName": "IndexedVec<ValidatorIndex, ValidatorId>",
                      "docs": []
                    },
                    {
                      "name": "discovery_keys",
                      "type": 740,
                      "typeName": "Vec<AuthorityDiscoveryId>",
                      "docs": []
                    },
                    {
                      "name": "assignment_keys",
                      "type": 737,
                      "typeName": "Vec<AssignmentId>",
                      "docs": []
                    },
                    {
                      "name": "validator_groups",
                      "type": 741,
                      "typeName": "IndexedVec<GroupIndex, Vec<ValidatorIndex>>",
                      "docs": []
                    },
                    {
                      "name": "n_cores",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "zeroth_delay_tranche_width",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "relay_vrf_modulo_samples",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "n_delay_tranches",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "no_show_slots",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "needed_approvals",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 739,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "IndexedVec"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 318
                },
                {
                  "name": "V",
                  "type": 131
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 687,
                      "typeName": "Vec<V>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 740,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 133
                }
              },
              "docs": []
            }
          },
          {
            "id": 741,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "IndexedVec"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 442
                },
                {
                  "name": "V",
                  "type": 686
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 700,
                      "typeName": "Vec<V>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 742,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  340
                ]
              },
              "docs": []
            }
          },
          {
            "id": 743,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "DisputeState"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "validators_for",
                      "type": 316,
                      "typeName": "BitVec<u8, bitvec::order::Lsb0>",
                      "docs": []
                    },
                    {
                      "name": "validators_against",
                      "type": 316,
                      "typeName": "BitVec<u8, bitvec::order::Lsb0>",
                      "docs": []
                    },
                    {
                      "name": "start",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    },
                    {
                      "name": "concluded_at",
                      "type": 272,
                      "typeName": "Option<N>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 744,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 318
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 686,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 745,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "disputes",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DuplicateDisputeStatementSets",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Duplicate dispute statement sets provided."
                      ]
                    },
                    {
                      "name": "AncientDisputeStatement",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Ancient dispute statement provided."
                      ]
                    },
                    {
                      "name": "ValidatorIndexOutOfBounds",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Validator index on statement is out of bounds for session."
                      ]
                    },
                    {
                      "name": "InvalidSignature",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Invalid signature on statement."
                      ]
                    },
                    {
                      "name": "DuplicateStatement",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Validator vote submitted more than once to dispute."
                      ]
                    },
                    {
                      "name": "SingleSidedDispute",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "A dispute where there are only votes on one side."
                      ]
                    },
                    {
                      "name": "MaliciousBacker",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "A dispute vote from a malicious backer."
                      ]
                    },
                    {
                      "name": "MissingBackingVotes",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "No backing votes were provides along dispute statements."
                      ]
                    },
                    {
                      "name": "UnconfirmedDispute",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Unconfirmed dispute statement sets provided."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 746,
            "type": {
              "path": [
                "polkadot_primitives",
                "v6",
                "slashing",
                "PendingSlashes"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "keys",
                      "type": 747,
                      "typeName": "BTreeMap<ValidatorIndex, ValidatorId>",
                      "docs": []
                    },
                    {
                      "name": "kind",
                      "type": 355,
                      "typeName": "SlashingOffenceKind",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 747,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 318
                },
                {
                  "name": "V",
                  "type": 131
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 748,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 748,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 749
                }
              },
              "docs": []
            }
          },
          {
            "id": 749,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  318,
                  131
                ]
              },
              "docs": []
            }
          },
          {
            "id": 750,
            "type": {
              "path": [
                "polkadot_runtime_parachains",
                "disputes",
                "slashing",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidKeyOwnershipProof",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The key ownership proof is invalid."
                      ]
                    },
                    {
                      "name": "InvalidSessionIndex",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The session index is too old or invalid."
                      ]
                    },
                    {
                      "name": "InvalidCandidateHash",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The candidate hash is invalid."
                      ]
                    },
                    {
                      "name": "InvalidValidatorIndex",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "There is no pending slash for the given validator index and time",
                        "slot."
                      ]
                    },
                    {
                      "name": "ValidatorIndexIdMismatch",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The validator index does not match the validator id."
                      ]
                    },
                    {
                      "name": "DuplicateSlashingReport",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The given slashing report is valid but already previously reported."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 751,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "paras_registrar",
                "ParaInfo"
              ],
              "params": [
                {
                  "name": "Account",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "manager",
                      "type": 0,
                      "typeName": "Account",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "locked",
                      "type": 752,
                      "typeName": "Option<bool>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 752,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 39
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 39,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 753,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "paras_registrar",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotRegistered",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The ID is not registered."
                      ]
                    },
                    {
                      "name": "AlreadyRegistered",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The ID is already registered."
                      ]
                    },
                    {
                      "name": "NotOwner",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The caller is not the owner of this Id."
                      ]
                    },
                    {
                      "name": "CodeTooLarge",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Invalid para code size."
                      ]
                    },
                    {
                      "name": "HeadDataTooLarge",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Invalid para head data size."
                      ]
                    },
                    {
                      "name": "NotParachain",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Para is not a Parachain."
                      ]
                    },
                    {
                      "name": "NotParathread",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Para is not a Parathread (on-demand parachain)."
                      ]
                    },
                    {
                      "name": "CannotDeregister",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Cannot deregister para"
                      ]
                    },
                    {
                      "name": "CannotDowngrade",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Cannot schedule downgrade of lease holding parachain to on-demand parachain"
                      ]
                    },
                    {
                      "name": "CannotUpgrade",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Cannot schedule upgrade of on-demand parachain to lease holding parachain"
                      ]
                    },
                    {
                      "name": "ParaLocked",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "Para is locked from manipulation by the manager. Must use parachain or relay chain",
                        "governance."
                      ]
                    },
                    {
                      "name": "NotReserved",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The ID given for registration has not been reserved."
                      ]
                    },
                    {
                      "name": "EmptyCode",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "Registering parachain with empty code is not allowed."
                      ]
                    },
                    {
                      "name": "CannotSwap",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "Cannot perform a parachain slot / lifecycle swap. Check that the state of both paras",
                        "are correct for the swap to work."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 754,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 583
                }
              },
              "docs": []
            }
          },
          {
            "id": 755,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "slots",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ParaNotOnboarding",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The parachain ID is not onboarding."
                      ]
                    },
                    {
                      "name": "LeaseError",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "There was an error with the lease."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 756,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "paras_sudo_wrapper",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ParaDoesntExist",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The specified parachain is not registered."
                      ]
                    },
                    {
                      "name": "ParaAlreadyExists",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The specified parachain is already registered."
                      ]
                    },
                    {
                      "name": "ExceedsMaxMessageSize",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "A DMP message couldn't be sent because it exceeds the maximum size allowed for a",
                        "downward message."
                      ]
                    },
                    {
                      "name": "CouldntCleanup",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Could not schedule para cleanup."
                      ]
                    },
                    {
                      "name": "NotParathread",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Not a parathread (on-demand parachain)."
                      ]
                    },
                    {
                      "name": "NotParachain",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Not a lease holding parachain."
                      ]
                    },
                    {
                      "name": "CannotUpgrade",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Cannot upgrade on-demand parachain to lease holding parachain."
                      ]
                    },
                    {
                      "name": "CannotDowngrade",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Cannot downgrade lease holding parachain to on-demand."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 757,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  152
                ]
              },
              "docs": []
            }
          },
          {
            "id": 758,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 36,
                  "type": 759
                }
              },
              "docs": []
            }
          },
          {
            "id": 759,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 760
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 760,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 760,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  152,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 761,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "auctions",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AuctionInProgress",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "This auction is already in progress."
                      ]
                    },
                    {
                      "name": "LeasePeriodInPast",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The lease period is in the past."
                      ]
                    },
                    {
                      "name": "ParaNotRegistered",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Para is not registered"
                      ]
                    },
                    {
                      "name": "NotCurrentAuction",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Not a current auction."
                      ]
                    },
                    {
                      "name": "NotAuction",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Not an auction."
                      ]
                    },
                    {
                      "name": "AuctionEnded",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Auction has already ended."
                      ]
                    },
                    {
                      "name": "AlreadyLeasedOut",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The para is already leased out for part of this range."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 762,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "crowdloan",
                "FundInfo"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "LeasePeriod",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "depositor",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "verifier",
                      "type": 407,
                      "typeName": "Option<MultiSigner>",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "raised",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "end",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "cap",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "last_contribution",
                      "type": 763,
                      "typeName": "LastContribution<BlockNumber>",
                      "docs": []
                    },
                    {
                      "name": "first_period",
                      "type": 4,
                      "typeName": "LeasePeriod",
                      "docs": []
                    },
                    {
                      "name": "last_period",
                      "type": 4,
                      "typeName": "LeasePeriod",
                      "docs": []
                    },
                    {
                      "name": "fund_index",
                      "type": 4,
                      "typeName": "FundIndex",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 763,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "crowdloan",
                "LastContribution"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Never",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "PreEnding",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Ending",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 764,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "crowdloan",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FirstPeriodInPast",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The current lease period is more than the first lease period."
                      ]
                    },
                    {
                      "name": "FirstPeriodTooFarInFuture",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The first lease period needs to at least be less than 3 `max_value`."
                      ]
                    },
                    {
                      "name": "LastPeriodBeforeFirstPeriod",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Last lease period must be greater than first lease period."
                      ]
                    },
                    {
                      "name": "LastPeriodTooFarInFuture",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The last lease period cannot be more than 3 periods after the first period."
                      ]
                    },
                    {
                      "name": "CannotEndInPast",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The campaign ends before the current block number. The end must be in the future."
                      ]
                    },
                    {
                      "name": "EndTooFarInFuture",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The end date for this crowdloan is not sensible."
                      ]
                    },
                    {
                      "name": "Overflow",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "There was an overflow."
                      ]
                    },
                    {
                      "name": "ContributionTooSmall",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "The contribution was below the minimum, `MinContribution`."
                      ]
                    },
                    {
                      "name": "InvalidParaId",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Invalid fund index."
                      ]
                    },
                    {
                      "name": "CapExceeded",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Contributions exceed maximum amount."
                      ]
                    },
                    {
                      "name": "ContributionPeriodOver",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The contribution period has already ended."
                      ]
                    },
                    {
                      "name": "InvalidOrigin",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The origin of this call is invalid."
                      ]
                    },
                    {
                      "name": "NotParachain",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "This crowdloan does not correspond to a parachain."
                      ]
                    },
                    {
                      "name": "LeaseActive",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "This parachain lease is still active and retirement cannot yet begin."
                      ]
                    },
                    {
                      "name": "BidOrLeaseActive",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "This parachain's bid or lease is still active and withdraw cannot yet begin."
                      ]
                    },
                    {
                      "name": "FundNotEnded",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "The crowdloan has not yet ended."
                      ]
                    },
                    {
                      "name": "NoContributions",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "There are no contributions stored in this crowdloan."
                      ]
                    },
                    {
                      "name": "NotReadyToDissolve",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "The crowdloan is not ready to dissolve. Potentially still has a slot or in retirement",
                        "period."
                      ]
                    },
                    {
                      "name": "InvalidSignature",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "Invalid signature."
                      ]
                    },
                    {
                      "name": "MemoTooLarge",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "The provided memo is too large."
                      ]
                    },
                    {
                      "name": "AlreadyInNewRaise",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "The fund is already in `NewRaise`"
                      ]
                    },
                    {
                      "name": "VrfDelayInProgress",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "No contributions allowed during the VRF delay"
                      ]
                    },
                    {
                      "name": "NoLeasePeriod",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "A lease period has not started yet, due to an offset in the starting block."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 765,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "assigned_slots",
                "ParachainTemporarySlot"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "LeasePeriod",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "manager",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "period_begin",
                      "type": 4,
                      "typeName": "LeasePeriod",
                      "docs": []
                    },
                    {
                      "name": "period_count",
                      "type": 4,
                      "typeName": "LeasePeriod",
                      "docs": []
                    },
                    {
                      "name": "last_lease",
                      "type": 272,
                      "typeName": "Option<LeasePeriod>",
                      "docs": []
                    },
                    {
                      "name": "lease_count",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 766,
            "type": {
              "path": [
                "polkadot_runtime_common",
                "assigned_slots",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ParaDoesntExist",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The specified parachain is not registered."
                      ]
                    },
                    {
                      "name": "NotParathread",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Not a parathread (on-demand parachain)."
                      ]
                    },
                    {
                      "name": "CannotUpgrade",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Cannot upgrade on-demand parachain to lease holding",
                        "parachain."
                      ]
                    },
                    {
                      "name": "CannotDowngrade",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Cannot downgrade lease holding parachain to",
                        "on-demand."
                      ]
                    },
                    {
                      "name": "SlotAlreadyAssigned",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Permanent or Temporary slot already assigned."
                      ]
                    },
                    {
                      "name": "SlotNotAssigned",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Permanent or Temporary slot has not been assigned."
                      ]
                    },
                    {
                      "name": "OngoingLeaseExists",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "An ongoing lease already exists."
                      ]
                    },
                    {
                      "name": "MaxPermanentSlotsExceeded",
                      "fields": [],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "MaxTemporarySlotsExceeded",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 767,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "QueryStatus"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Pending",
                      "fields": [
                        {
                          "name": "responder",
                          "type": 294,
                          "typeName": "VersionedMultiLocation",
                          "docs": []
                        },
                        {
                          "name": "maybe_match_querier",
                          "type": 768,
                          "typeName": "Option<VersionedMultiLocation>",
                          "docs": []
                        },
                        {
                          "name": "maybe_notify",
                          "type": 769,
                          "typeName": "Option<(u8, u8)>",
                          "docs": []
                        },
                        {
                          "name": "timeout",
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "VersionNotifier",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 294,
                          "typeName": "VersionedMultiLocation",
                          "docs": []
                        },
                        {
                          "name": "is_active",
                          "type": 39,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Ready",
                      "fields": [
                        {
                          "name": "response",
                          "type": 771,
                          "typeName": "VersionedResponse",
                          "docs": []
                        },
                        {
                          "name": "at",
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 768,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 294
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 294,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 769,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 770
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 770,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 770,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  2,
                  2
                ]
              },
              "docs": []
            }
          },
          {
            "id": 771,
            "type": {
              "path": [
                "xcm",
                "VersionedResponse"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 370,
                          "typeName": "v2::Response",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": null,
                          "type": 388,
                          "typeName": "v3::Response",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 772,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  294
                ]
              },
              "docs": []
            }
          },
          {
            "id": 773,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  11,
                  9,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 774,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 775
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 776,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 775,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  294,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 776,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 775
                }
              },
              "docs": []
            }
          },
          {
            "id": 777,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "VersionMigrationStage"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MigrateSupportedVersion",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "MigrateVersionNotifiers",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "NotifyCurrentTargets",
                      "fields": [
                        {
                          "name": null,
                          "type": 778,
                          "typeName": "Option<Vec<u8>>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "MigrateAndNotifyOldTargets",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 778,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 13
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 779,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  0,
                  780
                ]
              },
              "docs": []
            }
          },
          {
            "id": 780,
            "type": {
              "path": [
                "xcm",
                "VersionedAssetId"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": null,
                          "type": 293,
                          "typeName": "v3::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 781,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "RemoteLockedFungibleRecord"
              ],
              "params": [
                {
                  "name": "ConsumerIdentifier",
                  "type": 51
                },
                {
                  "name": "MaxConsumers",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "u128",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "type": 294,
                      "typeName": "VersionedMultiLocation",
                      "docs": []
                    },
                    {
                      "name": "locker",
                      "type": 294,
                      "typeName": "VersionedMultiLocation",
                      "docs": []
                    },
                    {
                      "name": "consumers",
                      "type": 782,
                      "typeName": "BoundedVec<(ConsumerIdentifier, u128), MaxConsumers>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 782,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 783
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 784,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 783,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  51,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 784,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 783
                }
              },
              "docs": []
            }
          },
          {
            "id": 785,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 786
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 787,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 786,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  6,
                  294
                ]
              },
              "docs": []
            }
          },
          {
            "id": 787,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 786
                }
              },
              "docs": []
            }
          },
          {
            "id": 788,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unreachable",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The desired destination was unreachable, generally because there is a no way of routing",
                        "to it."
                      ]
                    },
                    {
                      "name": "SendFailure",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "There was some other issue (i.e. not to do with routing) in sending the message.",
                        "Perhaps a lack of space for buffering the message."
                      ]
                    },
                    {
                      "name": "Filtered",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The message execution fails the filter."
                      ]
                    },
                    {
                      "name": "UnweighableMessage",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The message's weight could not be determined."
                      ]
                    },
                    {
                      "name": "DestinationNotInvertible",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The destination `MultiLocation` provided cannot be inverted."
                      ]
                    },
                    {
                      "name": "Empty",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The assets to be sent are empty."
                      ]
                    },
                    {
                      "name": "CannotReanchor",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Could not re-anchor the assets to declare the fees for the destination chain."
                      ]
                    },
                    {
                      "name": "TooManyAssets",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Too many assets have been attempted for transfer."
                      ]
                    },
                    {
                      "name": "InvalidOrigin",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Origin is invalid for sending."
                      ]
                    },
                    {
                      "name": "BadVersion",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The version of the `Versioned` value used is not able to be interpreted."
                      ]
                    },
                    {
                      "name": "BadLocation",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The given location could not be used (e.g. because it cannot be expressed in the",
                        "desired version of XCM)."
                      ]
                    },
                    {
                      "name": "NoSubscription",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The referenced subscription could not be found."
                      ]
                    },
                    {
                      "name": "AlreadySubscribed",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The location is invalid since it already has a subscription from us."
                      ]
                    },
                    {
                      "name": "CannotCheckOutTeleport",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "Could not check-out the assets for teleportation to the destination chain."
                      ]
                    },
                    {
                      "name": "LowBalance",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "The owner does not own (all) of the asset that they wish to do the operation on."
                      ]
                    },
                    {
                      "name": "TooManyLocks",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "The asset owner has too many locks on the asset."
                      ]
                    },
                    {
                      "name": "AccountNotSovereign",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "The given account is not an identifiable sovereign account for any location."
                      ]
                    },
                    {
                      "name": "FeesNotMet",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "The operation required fees to be paid which the initiator could not meet."
                      ]
                    },
                    {
                      "name": "LockNotFound",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "A remote lock with the corresponding data could not be found."
                      ]
                    },
                    {
                      "name": "InUse",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "The unlock operation cannot succeed because there are still consumers of the lock."
                      ]
                    },
                    {
                      "name": "InvalidAssetNotConcrete",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "Invalid non-concrete asset."
                      ]
                    },
                    {
                      "name": "InvalidAssetUnknownReserve",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "Invalid asset, reserve chain could not be determined for it."
                      ]
                    },
                    {
                      "name": "InvalidAssetUnsupportedReserve",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "Invalid asset, do not support remote asset reserves with different fees reserves."
                      ]
                    },
                    {
                      "name": "TooManyReserves",
                      "fields": [],
                      "index": 23,
                      "docs": [
                        "Too many assets with different reserve locations have been attempted for transfer."
                      ]
                    },
                    {
                      "name": "LocalExecutionIncomplete",
                      "fields": [],
                      "index": 24,
                      "docs": [
                        "Local XCM execution incomplete."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 789,
            "type": {
              "path": [
                "pallet_message_queue",
                "BookState"
              ],
              "params": [
                {
                  "name": "MessageOrigin",
                  "type": 424
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "begin",
                      "type": 4,
                      "typeName": "PageIndex",
                      "docs": []
                    },
                    {
                      "name": "end",
                      "type": 4,
                      "typeName": "PageIndex",
                      "docs": []
                    },
                    {
                      "name": "count",
                      "type": 4,
                      "typeName": "PageIndex",
                      "docs": []
                    },
                    {
                      "name": "ready_neighbours",
                      "type": 790,
                      "typeName": "Option<Neighbours<MessageOrigin>>",
                      "docs": []
                    },
                    {
                      "name": "message_count",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "size",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 790,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 791
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 791,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 791,
            "type": {
              "path": [
                "pallet_message_queue",
                "Neighbours"
              ],
              "params": [
                {
                  "name": "MessageOrigin",
                  "type": 424
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "prev",
                      "type": 424,
                      "typeName": "MessageOrigin",
                      "docs": []
                    },
                    {
                      "name": "next",
                      "type": 424,
                      "typeName": "MessageOrigin",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 792,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  424,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 793,
            "type": {
              "path": [
                "pallet_message_queue",
                "Page"
              ],
              "params": [
                {
                  "name": "Size",
                  "type": 4
                },
                {
                  "name": "HeapSize",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "remaining",
                      "type": 4,
                      "typeName": "Size",
                      "docs": []
                    },
                    {
                      "name": "remaining_size",
                      "type": 4,
                      "typeName": "Size",
                      "docs": []
                    },
                    {
                      "name": "first_index",
                      "type": 4,
                      "typeName": "Size",
                      "docs": []
                    },
                    {
                      "name": "first",
                      "type": 4,
                      "typeName": "Size",
                      "docs": []
                    },
                    {
                      "name": "last",
                      "type": 4,
                      "typeName": "Size",
                      "docs": []
                    },
                    {
                      "name": "heap",
                      "type": 794,
                      "typeName": "BoundedVec<u8, IntoU32<HeapSize, Size>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 794,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 795,
            "type": {
              "path": [
                "pallet_message_queue",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotReapable",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Page is not reapable because it has items remaining to be processed and is not old",
                        "enough."
                      ]
                    },
                    {
                      "name": "NoPage",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Page to be reaped does not exist."
                      ]
                    },
                    {
                      "name": "NoMessage",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The referenced message could not be found."
                      ]
                    },
                    {
                      "name": "AlreadyProcessed",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The message was already processed and cannot be processed again."
                      ]
                    },
                    {
                      "name": "Queued",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The message is queued for future execution."
                      ]
                    },
                    {
                      "name": "InsufficientWeight",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "There is temporarily not enough weight to continue servicing messages."
                      ]
                    },
                    {
                      "name": "TemporarilyUnprocessable",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "This message is temporarily unprocessable.",
                        "",
                        "Such errors are expected, but not guaranteed, to resolve themselves eventually through",
                        "retrying."
                      ]
                    },
                    {
                      "name": "QueuePaused",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "The queue is paused and no message can be executed from it.",
                        "",
                        "This can change at any time and may resolve in the future by re-trying."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 796,
            "type": {
              "path": [
                "pallet_asset_rate",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UnknownAssetKind",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The given asset ID is unknown."
                      ]
                    },
                    {
                      "name": "AlreadyExists",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The given asset ID already has an assigned conversion rate and cannot be re-created."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 797,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "unchecked_extrinsic",
                "UncheckedExtrinsic"
              ],
              "params": [
                {
                  "name": "Address",
                  "type": 102
                },
                {
                  "name": "Call",
                  "type": 84
                },
                {
                  "name": "Signature",
                  "type": 410
                },
                {
                  "name": "Extra",
                  "type": 798
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 798,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  799,
                  800,
                  801,
                  802,
                  803,
                  805,
                  806,
                  807
                ]
              },
              "docs": []
            }
          },
          {
            "id": 799,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_non_zero_sender",
                "CheckNonZeroSender"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 800,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_spec_version",
                "CheckSpecVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 801,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_tx_version",
                "CheckTxVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 802,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_genesis",
                "CheckGenesis"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 803,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_mortality",
                "CheckMortality"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 804,
                      "typeName": "Era",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 804,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "era",
                "Era"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Immortal",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Mortal1",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Mortal2",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Mortal3",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Mortal4",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Mortal5",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Mortal6",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Mortal7",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "Mortal8",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "Mortal9",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "Mortal10",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "Mortal11",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "Mortal12",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "Mortal13",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": []
                    },
                    {
                      "name": "Mortal14",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "Mortal15",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "Mortal16",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "Mortal17",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "Mortal18",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "Mortal19",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "Mortal20",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "Mortal21",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "Mortal22",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "Mortal23",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "Mortal24",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": []
                    },
                    {
                      "name": "Mortal25",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": []
                    },
                    {
                      "name": "Mortal26",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": []
                    },
                    {
                      "name": "Mortal27",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 27,
                      "docs": []
                    },
                    {
                      "name": "Mortal28",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": []
                    },
                    {
                      "name": "Mortal29",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": []
                    },
                    {
                      "name": "Mortal30",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": []
                    },
                    {
                      "name": "Mortal31",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": []
                    },
                    {
                      "name": "Mortal32",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 32,
                      "docs": []
                    },
                    {
                      "name": "Mortal33",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 33,
                      "docs": []
                    },
                    {
                      "name": "Mortal34",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 34,
                      "docs": []
                    },
                    {
                      "name": "Mortal35",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 35,
                      "docs": []
                    },
                    {
                      "name": "Mortal36",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 36,
                      "docs": []
                    },
                    {
                      "name": "Mortal37",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 37,
                      "docs": []
                    },
                    {
                      "name": "Mortal38",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 38,
                      "docs": []
                    },
                    {
                      "name": "Mortal39",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 39,
                      "docs": []
                    },
                    {
                      "name": "Mortal40",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 40,
                      "docs": []
                    },
                    {
                      "name": "Mortal41",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 41,
                      "docs": []
                    },
                    {
                      "name": "Mortal42",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 42,
                      "docs": []
                    },
                    {
                      "name": "Mortal43",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 43,
                      "docs": []
                    },
                    {
                      "name": "Mortal44",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 44,
                      "docs": []
                    },
                    {
                      "name": "Mortal45",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 45,
                      "docs": []
                    },
                    {
                      "name": "Mortal46",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 46,
                      "docs": []
                    },
                    {
                      "name": "Mortal47",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 47,
                      "docs": []
                    },
                    {
                      "name": "Mortal48",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 48,
                      "docs": []
                    },
                    {
                      "name": "Mortal49",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 49,
                      "docs": []
                    },
                    {
                      "name": "Mortal50",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 50,
                      "docs": []
                    },
                    {
                      "name": "Mortal51",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 51,
                      "docs": []
                    },
                    {
                      "name": "Mortal52",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 52,
                      "docs": []
                    },
                    {
                      "name": "Mortal53",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 53,
                      "docs": []
                    },
                    {
                      "name": "Mortal54",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 54,
                      "docs": []
                    },
                    {
                      "name": "Mortal55",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 55,
                      "docs": []
                    },
                    {
                      "name": "Mortal56",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 56,
                      "docs": []
                    },
                    {
                      "name": "Mortal57",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 57,
                      "docs": []
                    },
                    {
                      "name": "Mortal58",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 58,
                      "docs": []
                    },
                    {
                      "name": "Mortal59",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 59,
                      "docs": []
                    },
                    {
                      "name": "Mortal60",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 60,
                      "docs": []
                    },
                    {
                      "name": "Mortal61",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 61,
                      "docs": []
                    },
                    {
                      "name": "Mortal62",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 62,
                      "docs": []
                    },
                    {
                      "name": "Mortal63",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 63,
                      "docs": []
                    },
                    {
                      "name": "Mortal64",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 64,
                      "docs": []
                    },
                    {
                      "name": "Mortal65",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 65,
                      "docs": []
                    },
                    {
                      "name": "Mortal66",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 66,
                      "docs": []
                    },
                    {
                      "name": "Mortal67",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 67,
                      "docs": []
                    },
                    {
                      "name": "Mortal68",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 68,
                      "docs": []
                    },
                    {
                      "name": "Mortal69",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 69,
                      "docs": []
                    },
                    {
                      "name": "Mortal70",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 70,
                      "docs": []
                    },
                    {
                      "name": "Mortal71",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 71,
                      "docs": []
                    },
                    {
                      "name": "Mortal72",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 72,
                      "docs": []
                    },
                    {
                      "name": "Mortal73",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 73,
                      "docs": []
                    },
                    {
                      "name": "Mortal74",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 74,
                      "docs": []
                    },
                    {
                      "name": "Mortal75",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 75,
                      "docs": []
                    },
                    {
                      "name": "Mortal76",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 76,
                      "docs": []
                    },
                    {
                      "name": "Mortal77",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 77,
                      "docs": []
                    },
                    {
                      "name": "Mortal78",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 78,
                      "docs": []
                    },
                    {
                      "name": "Mortal79",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 79,
                      "docs": []
                    },
                    {
                      "name": "Mortal80",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 80,
                      "docs": []
                    },
                    {
                      "name": "Mortal81",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 81,
                      "docs": []
                    },
                    {
                      "name": "Mortal82",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 82,
                      "docs": []
                    },
                    {
                      "name": "Mortal83",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 83,
                      "docs": []
                    },
                    {
                      "name": "Mortal84",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 84,
                      "docs": []
                    },
                    {
                      "name": "Mortal85",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 85,
                      "docs": []
                    },
                    {
                      "name": "Mortal86",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 86,
                      "docs": []
                    },
                    {
                      "name": "Mortal87",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 87,
                      "docs": []
                    },
                    {
                      "name": "Mortal88",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 88,
                      "docs": []
                    },
                    {
                      "name": "Mortal89",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 89,
                      "docs": []
                    },
                    {
                      "name": "Mortal90",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 90,
                      "docs": []
                    },
                    {
                      "name": "Mortal91",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 91,
                      "docs": []
                    },
                    {
                      "name": "Mortal92",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 92,
                      "docs": []
                    },
                    {
                      "name": "Mortal93",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 93,
                      "docs": []
                    },
                    {
                      "name": "Mortal94",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 94,
                      "docs": []
                    },
                    {
                      "name": "Mortal95",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 95,
                      "docs": []
                    },
                    {
                      "name": "Mortal96",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 96,
                      "docs": []
                    },
                    {
                      "name": "Mortal97",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 97,
                      "docs": []
                    },
                    {
                      "name": "Mortal98",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 98,
                      "docs": []
                    },
                    {
                      "name": "Mortal99",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 99,
                      "docs": []
                    },
                    {
                      "name": "Mortal100",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 100,
                      "docs": []
                    },
                    {
                      "name": "Mortal101",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 101,
                      "docs": []
                    },
                    {
                      "name": "Mortal102",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 102,
                      "docs": []
                    },
                    {
                      "name": "Mortal103",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 103,
                      "docs": []
                    },
                    {
                      "name": "Mortal104",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 104,
                      "docs": []
                    },
                    {
                      "name": "Mortal105",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 105,
                      "docs": []
                    },
                    {
                      "name": "Mortal106",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 106,
                      "docs": []
                    },
                    {
                      "name": "Mortal107",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 107,
                      "docs": []
                    },
                    {
                      "name": "Mortal108",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 108,
                      "docs": []
                    },
                    {
                      "name": "Mortal109",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 109,
                      "docs": []
                    },
                    {
                      "name": "Mortal110",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 110,
                      "docs": []
                    },
                    {
                      "name": "Mortal111",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 111,
                      "docs": []
                    },
                    {
                      "name": "Mortal112",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 112,
                      "docs": []
                    },
                    {
                      "name": "Mortal113",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 113,
                      "docs": []
                    },
                    {
                      "name": "Mortal114",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 114,
                      "docs": []
                    },
                    {
                      "name": "Mortal115",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 115,
                      "docs": []
                    },
                    {
                      "name": "Mortal116",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 116,
                      "docs": []
                    },
                    {
                      "name": "Mortal117",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 117,
                      "docs": []
                    },
                    {
                      "name": "Mortal118",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 118,
                      "docs": []
                    },
                    {
                      "name": "Mortal119",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 119,
                      "docs": []
                    },
                    {
                      "name": "Mortal120",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 120,
                      "docs": []
                    },
                    {
                      "name": "Mortal121",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 121,
                      "docs": []
                    },
                    {
                      "name": "Mortal122",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 122,
                      "docs": []
                    },
                    {
                      "name": "Mortal123",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 123,
                      "docs": []
                    },
                    {
                      "name": "Mortal124",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 124,
                      "docs": []
                    },
                    {
                      "name": "Mortal125",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 125,
                      "docs": []
                    },
                    {
                      "name": "Mortal126",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 126,
                      "docs": []
                    },
                    {
                      "name": "Mortal127",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 127,
                      "docs": []
                    },
                    {
                      "name": "Mortal128",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 128,
                      "docs": []
                    },
                    {
                      "name": "Mortal129",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 129,
                      "docs": []
                    },
                    {
                      "name": "Mortal130",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 130,
                      "docs": []
                    },
                    {
                      "name": "Mortal131",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 131,
                      "docs": []
                    },
                    {
                      "name": "Mortal132",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 132,
                      "docs": []
                    },
                    {
                      "name": "Mortal133",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 133,
                      "docs": []
                    },
                    {
                      "name": "Mortal134",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 134,
                      "docs": []
                    },
                    {
                      "name": "Mortal135",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 135,
                      "docs": []
                    },
                    {
                      "name": "Mortal136",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 136,
                      "docs": []
                    },
                    {
                      "name": "Mortal137",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 137,
                      "docs": []
                    },
                    {
                      "name": "Mortal138",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 138,
                      "docs": []
                    },
                    {
                      "name": "Mortal139",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 139,
                      "docs": []
                    },
                    {
                      "name": "Mortal140",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 140,
                      "docs": []
                    },
                    {
                      "name": "Mortal141",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 141,
                      "docs": []
                    },
                    {
                      "name": "Mortal142",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 142,
                      "docs": []
                    },
                    {
                      "name": "Mortal143",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 143,
                      "docs": []
                    },
                    {
                      "name": "Mortal144",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 144,
                      "docs": []
                    },
                    {
                      "name": "Mortal145",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 145,
                      "docs": []
                    },
                    {
                      "name": "Mortal146",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 146,
                      "docs": []
                    },
                    {
                      "name": "Mortal147",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 147,
                      "docs": []
                    },
                    {
                      "name": "Mortal148",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 148,
                      "docs": []
                    },
                    {
                      "name": "Mortal149",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 149,
                      "docs": []
                    },
                    {
                      "name": "Mortal150",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 150,
                      "docs": []
                    },
                    {
                      "name": "Mortal151",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 151,
                      "docs": []
                    },
                    {
                      "name": "Mortal152",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 152,
                      "docs": []
                    },
                    {
                      "name": "Mortal153",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 153,
                      "docs": []
                    },
                    {
                      "name": "Mortal154",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 154,
                      "docs": []
                    },
                    {
                      "name": "Mortal155",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 155,
                      "docs": []
                    },
                    {
                      "name": "Mortal156",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 156,
                      "docs": []
                    },
                    {
                      "name": "Mortal157",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 157,
                      "docs": []
                    },
                    {
                      "name": "Mortal158",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 158,
                      "docs": []
                    },
                    {
                      "name": "Mortal159",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 159,
                      "docs": []
                    },
                    {
                      "name": "Mortal160",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 160,
                      "docs": []
                    },
                    {
                      "name": "Mortal161",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 161,
                      "docs": []
                    },
                    {
                      "name": "Mortal162",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 162,
                      "docs": []
                    },
                    {
                      "name": "Mortal163",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 163,
                      "docs": []
                    },
                    {
                      "name": "Mortal164",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 164,
                      "docs": []
                    },
                    {
                      "name": "Mortal165",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 165,
                      "docs": []
                    },
                    {
                      "name": "Mortal166",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 166,
                      "docs": []
                    },
                    {
                      "name": "Mortal167",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 167,
                      "docs": []
                    },
                    {
                      "name": "Mortal168",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 168,
                      "docs": []
                    },
                    {
                      "name": "Mortal169",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 169,
                      "docs": []
                    },
                    {
                      "name": "Mortal170",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 170,
                      "docs": []
                    },
                    {
                      "name": "Mortal171",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 171,
                      "docs": []
                    },
                    {
                      "name": "Mortal172",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 172,
                      "docs": []
                    },
                    {
                      "name": "Mortal173",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 173,
                      "docs": []
                    },
                    {
                      "name": "Mortal174",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 174,
                      "docs": []
                    },
                    {
                      "name": "Mortal175",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 175,
                      "docs": []
                    },
                    {
                      "name": "Mortal176",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 176,
                      "docs": []
                    },
                    {
                      "name": "Mortal177",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 177,
                      "docs": []
                    },
                    {
                      "name": "Mortal178",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 178,
                      "docs": []
                    },
                    {
                      "name": "Mortal179",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 179,
                      "docs": []
                    },
                    {
                      "name": "Mortal180",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 180,
                      "docs": []
                    },
                    {
                      "name": "Mortal181",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 181,
                      "docs": []
                    },
                    {
                      "name": "Mortal182",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 182,
                      "docs": []
                    },
                    {
                      "name": "Mortal183",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 183,
                      "docs": []
                    },
                    {
                      "name": "Mortal184",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 184,
                      "docs": []
                    },
                    {
                      "name": "Mortal185",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 185,
                      "docs": []
                    },
                    {
                      "name": "Mortal186",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 186,
                      "docs": []
                    },
                    {
                      "name": "Mortal187",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 187,
                      "docs": []
                    },
                    {
                      "name": "Mortal188",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 188,
                      "docs": []
                    },
                    {
                      "name": "Mortal189",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 189,
                      "docs": []
                    },
                    {
                      "name": "Mortal190",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 190,
                      "docs": []
                    },
                    {
                      "name": "Mortal191",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 191,
                      "docs": []
                    },
                    {
                      "name": "Mortal192",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 192,
                      "docs": []
                    },
                    {
                      "name": "Mortal193",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 193,
                      "docs": []
                    },
                    {
                      "name": "Mortal194",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 194,
                      "docs": []
                    },
                    {
                      "name": "Mortal195",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 195,
                      "docs": []
                    },
                    {
                      "name": "Mortal196",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 196,
                      "docs": []
                    },
                    {
                      "name": "Mortal197",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 197,
                      "docs": []
                    },
                    {
                      "name": "Mortal198",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 198,
                      "docs": []
                    },
                    {
                      "name": "Mortal199",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 199,
                      "docs": []
                    },
                    {
                      "name": "Mortal200",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 200,
                      "docs": []
                    },
                    {
                      "name": "Mortal201",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 201,
                      "docs": []
                    },
                    {
                      "name": "Mortal202",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 202,
                      "docs": []
                    },
                    {
                      "name": "Mortal203",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 203,
                      "docs": []
                    },
                    {
                      "name": "Mortal204",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 204,
                      "docs": []
                    },
                    {
                      "name": "Mortal205",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 205,
                      "docs": []
                    },
                    {
                      "name": "Mortal206",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 206,
                      "docs": []
                    },
                    {
                      "name": "Mortal207",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 207,
                      "docs": []
                    },
                    {
                      "name": "Mortal208",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 208,
                      "docs": []
                    },
                    {
                      "name": "Mortal209",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 209,
                      "docs": []
                    },
                    {
                      "name": "Mortal210",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 210,
                      "docs": []
                    },
                    {
                      "name": "Mortal211",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 211,
                      "docs": []
                    },
                    {
                      "name": "Mortal212",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 212,
                      "docs": []
                    },
                    {
                      "name": "Mortal213",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 213,
                      "docs": []
                    },
                    {
                      "name": "Mortal214",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 214,
                      "docs": []
                    },
                    {
                      "name": "Mortal215",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 215,
                      "docs": []
                    },
                    {
                      "name": "Mortal216",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 216,
                      "docs": []
                    },
                    {
                      "name": "Mortal217",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 217,
                      "docs": []
                    },
                    {
                      "name": "Mortal218",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 218,
                      "docs": []
                    },
                    {
                      "name": "Mortal219",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 219,
                      "docs": []
                    },
                    {
                      "name": "Mortal220",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 220,
                      "docs": []
                    },
                    {
                      "name": "Mortal221",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 221,
                      "docs": []
                    },
                    {
                      "name": "Mortal222",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 222,
                      "docs": []
                    },
                    {
                      "name": "Mortal223",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 223,
                      "docs": []
                    },
                    {
                      "name": "Mortal224",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 224,
                      "docs": []
                    },
                    {
                      "name": "Mortal225",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 225,
                      "docs": []
                    },
                    {
                      "name": "Mortal226",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 226,
                      "docs": []
                    },
                    {
                      "name": "Mortal227",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 227,
                      "docs": []
                    },
                    {
                      "name": "Mortal228",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 228,
                      "docs": []
                    },
                    {
                      "name": "Mortal229",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 229,
                      "docs": []
                    },
                    {
                      "name": "Mortal230",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 230,
                      "docs": []
                    },
                    {
                      "name": "Mortal231",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 231,
                      "docs": []
                    },
                    {
                      "name": "Mortal232",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 232,
                      "docs": []
                    },
                    {
                      "name": "Mortal233",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 233,
                      "docs": []
                    },
                    {
                      "name": "Mortal234",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 234,
                      "docs": []
                    },
                    {
                      "name": "Mortal235",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 235,
                      "docs": []
                    },
                    {
                      "name": "Mortal236",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 236,
                      "docs": []
                    },
                    {
                      "name": "Mortal237",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 237,
                      "docs": []
                    },
                    {
                      "name": "Mortal238",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 238,
                      "docs": []
                    },
                    {
                      "name": "Mortal239",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 239,
                      "docs": []
                    },
                    {
                      "name": "Mortal240",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 240,
                      "docs": []
                    },
                    {
                      "name": "Mortal241",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 241,
                      "docs": []
                    },
                    {
                      "name": "Mortal242",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 242,
                      "docs": []
                    },
                    {
                      "name": "Mortal243",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 243,
                      "docs": []
                    },
                    {
                      "name": "Mortal244",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 244,
                      "docs": []
                    },
                    {
                      "name": "Mortal245",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 245,
                      "docs": []
                    },
                    {
                      "name": "Mortal246",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 246,
                      "docs": []
                    },
                    {
                      "name": "Mortal247",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 247,
                      "docs": []
                    },
                    {
                      "name": "Mortal248",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 248,
                      "docs": []
                    },
                    {
                      "name": "Mortal249",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 249,
                      "docs": []
                    },
                    {
                      "name": "Mortal250",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 250,
                      "docs": []
                    },
                    {
                      "name": "Mortal251",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 251,
                      "docs": []
                    },
                    {
                      "name": "Mortal252",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 252,
                      "docs": []
                    },
                    {
                      "name": "Mortal253",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 253,
                      "docs": []
                    },
                    {
                      "name": "Mortal254",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 254,
                      "docs": []
                    },
                    {
                      "name": "Mortal255",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 255,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 805,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_nonce",
                "CheckNonce"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 92,
                      "typeName": "T::Nonce",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 806,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_weight",
                "CheckWeight"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 807,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "ChargeTransactionPayment"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 106,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 808,
            "type": {
              "path": [
                "westend_runtime",
                "Runtime"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          }
        ]
      },
      "pallets": [
        {
          "name": "System",
          "storage": {
            "prefix": "System",
            "items": [
              {
                "name": "Account",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 3
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080",
                "docs": [
                  " The full account information for a particular account ID."
                ]
              },
              {
                "name": "ExtrinsicCount",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Total extrinsics count for the current block."
                ]
              },
              {
                "name": "BlockWeight",
                "modifier": "Default",
                "type": {
                  "plain": 8
                },
                "fallback": "0x000000000000",
                "docs": [
                  " The current weight for the block."
                ]
              },
              {
                "name": "AllExtrinsicsLen",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Total length (in bytes) for all extrinsics put together, for the current block."
                ]
              },
              {
                "name": "BlockHash",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 12
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Map of block numbers to block hashes."
                ]
              },
              {
                "name": "ExtrinsicData",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 13
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Extrinsics data for the current block (maps an extrinsic's index to its data)."
                ]
              },
              {
                "name": "Number",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The current block number being processed. Set by `execute_block`."
                ]
              },
              {
                "name": "ParentHash",
                "modifier": "Default",
                "type": {
                  "plain": 12
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Hash of the previous block."
                ]
              },
              {
                "name": "Digest",
                "modifier": "Default",
                "type": {
                  "plain": 14
                },
                "fallback": "0x00",
                "docs": [
                  " Digest of the current block, also part of the block header."
                ]
              },
              {
                "name": "Events",
                "modifier": "Default",
                "type": {
                  "plain": 18
                },
                "fallback": "0x00",
                "docs": [
                  " Events deposited for the current block.",
                  "",
                  " NOTE: The item is unbound and should therefore never be read on chain.",
                  " It could otherwise inflate the PoV size of a block.",
                  "",
                  " Events have a large in-memory size. Box the events to not go out-of-memory",
                  " just in case someone still reads them from within the runtime."
                ]
              },
              {
                "name": "EventCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of events in the `Events<T>` list."
                ]
              },
              {
                "name": "EventTopics",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 12,
                    "value": 461
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                  " of events in the `<Events<T>>` list.",
                  "",
                  " All topic vectors have deterministic storage locations depending on the topic. This",
                  " allows light-clients to leverage the changes trie storage tracking mechanism and",
                  " in case of changes fetch the list of events of interest.",
                  "",
                  " The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just",
                  " the `EventIndex` then in case if the topic has the same contents on the next block",
                  " no notification will be triggered thus the event might be lost."
                ]
              },
              {
                "name": "LastRuntimeUpgrade",
                "modifier": "Optional",
                "type": {
                  "plain": 462
                },
                "fallback": "0x00",
                "docs": [
                  " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
                ]
              },
              {
                "name": "UpgradedToU32RefCount",
                "modifier": "Default",
                "type": {
                  "plain": 39
                },
                "fallback": "0x00",
                "docs": [
                  " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
                ]
              },
              {
                "name": "UpgradedToTripleRefCount",
                "modifier": "Default",
                "type": {
                  "plain": 39
                },
                "fallback": "0x00",
                "docs": [
                  " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                  " (default) if not."
                ]
              },
              {
                "name": "ExecutionPhase",
                "modifier": "Optional",
                "type": {
                  "plain": 460
                },
                "fallback": "0x00",
                "docs": [
                  " The execution phase of the block."
                ]
              }
            ]
          },
          "calls": {
            "type": 85
          },
          "events": {
            "type": 21
          },
          "constants": [
            {
              "name": "BlockWeights",
              "type": 464,
              "value": "0x8282256e000b00204aa9d10113ffffffffffffffff028c171b00010b00ed1990580113a3703d0ad7a370bd010b0098f73e5d0113ffffffffffffffbf010000028c171b00010b00756cfacc0113a3703d0ad7a370fd010b00204aa9d10113ffffffffffffffff01070088526a74130000000000000040028c171b00000000",
              "docs": [
                " Block & extrinsics weights: base values and limits."
              ]
            },
            {
              "name": "BlockLength",
              "type": 467,
              "value": "0x00003c000000500000005000",
              "docs": [
                " The maximum length of a block (in bytes)."
              ]
            },
            {
              "name": "BlockHashCount",
              "type": 4,
              "value": "0x00100000",
              "docs": [
                " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
              ]
            },
            {
              "name": "DbWeight",
              "type": 469,
              "value": "0x40787d010000000000e1f50500000000",
              "docs": [
                " The weight of runtime database operations the runtime can invoke."
              ]
            },
            {
              "name": "Version",
              "type": 470,
              "value": "0x1c77657374656e64387061726974792d77657374656e6402000000c8550f00000000004cdf6acb689907609b0400000037e397fc7c91f5e40200000040fe3ad401f8959a06000000d2bc9897eed08f1503000000f78b278be53f454c02000000af2c0297a23e6d3d0900000049eaaf1b548a0cb00300000091d5df18b0d2cf58020000002a5e924655399e6001000000ed99c5acb25eedf503000000cbca25e39f14238702000000687ad44ad37f03c201000000ab3c0572291feb8b01000000bc9d89904f5b923f0100000037c8bb1350a9a2a804000000f3ff14d5ab5270590300000017a6bc0d0062aeb30100000018ef58a3b67ba77001000000fbc577b9d747efd6010000001800000001",
              "docs": [
                " Get the chain's current version."
              ]
            },
            {
              "name": "SS58Prefix",
              "type": 63,
              "value": "0x2a00",
              "docs": [
                " The designated SS58 prefix of this chain.",
                "",
                " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
                " that the runtime should know about the prefix in order to make use of it as",
                " an identifier of the chain."
              ]
            }
          ],
          "errors": {
            "type": 474
          },
          "index": 0
        },
        {
          "name": "Babe",
          "storage": {
            "prefix": "Babe",
            "items": [
              {
                "name": "EpochIndex",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " Current epoch index."
                ]
              },
              {
                "name": "Authorities",
                "modifier": "Default",
                "type": {
                  "plain": 475
                },
                "fallback": "0x00",
                "docs": [
                  " Current epoch authorities."
                ]
              },
              {
                "name": "GenesisSlot",
                "modifier": "Default",
                "type": {
                  "plain": 95
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The slot at which the first epoch actually started. This is 0",
                  " until the first block of the chain."
                ]
              },
              {
                "name": "CurrentSlot",
                "modifier": "Default",
                "type": {
                  "plain": 95
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " Current slot number."
                ]
              },
              {
                "name": "Randomness",
                "modifier": "Default",
                "type": {
                  "plain": 1
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " The epoch randomness for the *current* epoch.",
                  "",
                  " # Security",
                  "",
                  " This MUST NOT be used for gambling, as it can be influenced by a",
                  " malicious validator in the short term. It MAY be used in many",
                  " cryptographic protocols, however, so long as one remembers that this",
                  " (like everything else on-chain) it is public. For example, it can be",
                  " used where a number is needed that cannot have been chosen by an",
                  " adversary, for purposes such as public-coin zero-knowledge proofs."
                ]
              },
              {
                "name": "PendingEpochConfigChange",
                "modifier": "Optional",
                "type": {
                  "plain": 97
                },
                "fallback": "0x00",
                "docs": [
                  " Pending epoch configuration change that will be applied when the next epoch is enacted."
                ]
              },
              {
                "name": "NextRandomness",
                "modifier": "Default",
                "type": {
                  "plain": 1
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Next epoch randomness."
                ]
              },
              {
                "name": "NextAuthorities",
                "modifier": "Default",
                "type": {
                  "plain": 475
                },
                "fallback": "0x00",
                "docs": [
                  " Next epoch authorities."
                ]
              },
              {
                "name": "SegmentIndex",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Randomness under construction.",
                  "",
                  " We make a trade-off between storage accesses and list length.",
                  " We store the under-construction randomness in segments of up to",
                  " `UNDER_CONSTRUCTION_SEGMENT_LENGTH`.",
                  "",
                  " Once a segment reaches this length, we begin the next one.",
                  " We reset all segments and return to `0` at the beginning of every",
                  " epoch."
                ]
              },
              {
                "name": "UnderConstruction",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 478
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " TWOX-NOTE: `SegmentIndex` is an increasing integer, so this is okay."
                ]
              },
              {
                "name": "Initialized",
                "modifier": "Optional",
                "type": {
                  "plain": 480
                },
                "fallback": "0x00",
                "docs": [
                  " Temporary value (cleared at block finalization) which is `Some`",
                  " if per-block initialization has already been called for current block."
                ]
              },
              {
                "name": "AuthorVrfRandomness",
                "modifier": "Default",
                "type": {
                  "plain": 57
                },
                "fallback": "0x00",
                "docs": [
                  " This field should always be populated during block processing unless",
                  " secondary plain slots are enabled (which don't contain a VRF output).",
                  "",
                  " It is set in `on_finalize`, before it will contain the value from the last block."
                ]
              },
              {
                "name": "EpochStart",
                "modifier": "Default",
                "type": {
                  "plain": 56
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The block numbers when the last and current epoch have started, respectively `N-1` and",
                  " `N`.",
                  " NOTE: We track this is in order to annotate the block number when a given pool of",
                  " entropy was fixed (i.e. it was known to chain observers). Since epochs are defined in",
                  " slots, which may be skipped, the block numbers may not line up with the slot numbers."
                ]
              },
              {
                "name": "Lateness",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " How late the current block is compared to its parent.",
                  "",
                  " This entry is populated as part of block execution and is cleaned up",
                  " on block finalization. Querying this storage entry outside of block",
                  " execution context should always yield zero."
                ]
              },
              {
                "name": "EpochConfig",
                "modifier": "Optional",
                "type": {
                  "plain": 486
                },
                "fallback": "0x00",
                "docs": [
                  " The configuration for the current epoch. Should never be `None` as it is initialized in",
                  " genesis."
                ]
              },
              {
                "name": "NextEpochConfig",
                "modifier": "Optional",
                "type": {
                  "plain": 486
                },
                "fallback": "0x00",
                "docs": [
                  " The configuration for the next epoch, `None` if the config will not change",
                  " (you can fallback to `EpochConfig` instead in that case)."
                ]
              },
              {
                "name": "SkippedEpochs",
                "modifier": "Default",
                "type": {
                  "plain": 487
                },
                "fallback": "0x00",
                "docs": [
                  " A list of the last 100 skipped epochs and the corresponding session index",
                  " when the epoch was skipped.",
                  "",
                  " This is only used for validating equivocation proofs. An equivocation proof",
                  " must contains a key-ownership proof for a given session, therefore we need a",
                  " way to tie together sessions and epoch indices, i.e. we need to validate that",
                  " a validator was the owner of a given key on a given session, and what the",
                  " active epoch index was during that session."
                ]
              }
            ]
          },
          "calls": {
            "type": 89
          },
          "events": null,
          "constants": [
            {
              "name": "EpochDuration",
              "type": 11,
              "value": "0x5802000000000000",
              "docs": [
                " The amount of time, in slots, that each epoch should last.",
                " NOTE: Currently it is not possible to change the epoch duration after",
                " the chain has started. Attempting to do so will brick block production."
              ]
            },
            {
              "name": "ExpectedBlockTime",
              "type": 11,
              "value": "0x7017000000000000",
              "docs": [
                " The expected average block time at which BABE should be creating",
                " blocks. Since BABE is probabilistic it is not trivial to figure out",
                " what the expected average block time should be based on the slot",
                " duration and the security parameter `c` (where `1 - c` represents",
                " the probability of a slot being empty)."
              ]
            },
            {
              "name": "MaxAuthorities",
              "type": 4,
              "value": "0xa0860100",
              "docs": [
                " Max number of authorities allowed"
              ]
            },
            {
              "name": "MaxNominators",
              "type": 4,
              "value": "0x40000000",
              "docs": [
                " The maximum number of nominators for each validator."
              ]
            }
          ],
          "errors": {
            "type": 490
          },
          "index": 1
        },
        {
          "name": "Timestamp",
          "storage": {
            "prefix": "Timestamp",
            "items": [
              {
                "name": "Now",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The current time for the current block."
                ]
              },
              {
                "name": "DidUpdate",
                "modifier": "Default",
                "type": {
                  "plain": 39
                },
                "fallback": "0x00",
                "docs": [
                  " Whether the timestamp has been updated in this block.",
                  "",
                  " This value is updated to `true` upon successful submission of a timestamp by a node.",
                  " It is then checked at the end of each block execution in the `on_finalize` hook."
                ]
              }
            ]
          },
          "calls": {
            "type": 100
          },
          "events": null,
          "constants": [
            {
              "name": "MinimumPeriod",
              "type": 11,
              "value": "0xb80b000000000000",
              "docs": [
                " The minimum period between blocks.",
                "",
                " Be aware that this is different to the *expected* period that the block production",
                " apparatus provides. Your chosen consensus system will generally work with this to",
                " determine a sensible block time. For example, in the Aura pallet it will be double this",
                " period on default settings."
              ]
            }
          ],
          "errors": null,
          "index": 2
        },
        {
          "name": "Indices",
          "storage": {
            "prefix": "Indices",
            "items": [
              {
                "name": "Accounts",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 491
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The lookup from index to account."
                ]
              }
            ]
          },
          "calls": {
            "type": 101
          },
          "events": {
            "type": 30
          },
          "constants": [
            {
              "name": "Deposit",
              "type": 6,
              "value": "0x0010a5d4e80000000000000000000000",
              "docs": [
                " The deposit needed for reserving an index."
              ]
            }
          ],
          "errors": {
            "type": 492
          },
          "index": 3
        },
        {
          "name": "Balances",
          "storage": {
            "prefix": "Balances",
            "items": [
              {
                "name": "TotalIssuance",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The total units issued in the system."
                ]
              },
              {
                "name": "InactiveIssuance",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The total units of outstanding deactivated balance in the system."
                ]
              },
              {
                "name": "Account",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 5
                  }
                },
                "fallback": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080",
                "docs": [
                  " The Balances pallet example of storing the balance of an account.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                  "  }",
                  " ```",
                  "",
                  " You can also store the balance of an account in the `System` pallet.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "   type AccountStore = System",
                  "  }",
                  " ```",
                  "",
                  " But this comes with tradeoffs, storing account balances in the system pallet stores",
                  " `frame_system` data alongside the account data contrary to storing account balances in the",
                  " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                  " NOTE: This is only used in the case that this pallet is used to store balances."
                ]
              },
              {
                "name": "Locks",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 493
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Any liquidity locks on some account balances.",
                  " NOTE: Should only be accessed when setting, changing and freeing a lock."
                ]
              },
              {
                "name": "Reserves",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 497
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Named reserves on some account balances."
                ]
              },
              {
                "name": "Holds",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 500
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Holds on account balances."
                ]
              },
              {
                "name": "Freezes",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 505
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Freeze locks on account balances."
                ]
              }
            ]
          },
          "calls": {
            "type": 105
          },
          "events": {
            "type": 31
          },
          "constants": [
            {
              "name": "ExistentialDeposit",
              "type": 6,
              "value": "0x00e40b54020000000000000000000000",
              "docs": [
                " The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!",
                "",
                " If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for",
                " this pallet. However, you do so at your own risk: this will open up a major DoS vector.",
                " In case you have multiple sources of provider references, you may also get unexpected",
                " behaviour if you set this to zero.",
                "",
                " Bottom line: Do yourself a favour and make it at least one!"
              ]
            },
            {
              "name": "MaxLocks",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum number of locks that should exist on an account.",
                " Not strictly enforced, but used for weight estimation."
              ]
            },
            {
              "name": "MaxReserves",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum number of named reserves that can exist on an account."
              ]
            },
            {
              "name": "MaxHolds",
              "type": 4,
              "value": "0x01000000",
              "docs": [
                " The maximum number of holds that can exist on an account at any time."
              ]
            },
            {
              "name": "MaxFreezes",
              "type": 4,
              "value": "0x01000000",
              "docs": [
                " The maximum number of individual freeze locks that can exist on an account at any time."
              ]
            }
          ],
          "errors": {
            "type": 510
          },
          "index": 4
        },
        {
          "name": "TransactionPayment",
          "storage": {
            "prefix": "TransactionPayment",
            "items": [
              {
                "name": "NextFeeMultiplier",
                "modifier": "Default",
                "type": {
                  "plain": 427
                },
                "fallback": "0x000064a7b3b6e00d0000000000000000",
                "docs": []
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "type": {
                  "plain": 511
                },
                "fallback": "0x00",
                "docs": []
              }
            ]
          },
          "calls": null,
          "events": {
            "type": 33
          },
          "constants": [
            {
              "name": "OperationalFeeMultiplier",
              "type": 2,
              "value": "0x05",
              "docs": [
                " A fee multiplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
                " `priority`",
                "",
                " This value is multiplied by the `final_fee` to obtain a \"virtual tip\" that is later",
                " added to a tip component in regular `priority` calculations.",
                " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
                " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
                "",
                " ```rust,ignore",
                " // For `Normal`",
                " let priority = priority_calc(tip);",
                "",
                " // For `Operational`",
                " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
                " let priority = priority_calc(tip + virtual_tip);",
                " ```",
                "",
                " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
                " sent with the transaction. So, not only does the transaction get a priority bump based",
                " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
                " transactions."
              ]
            }
          ],
          "errors": null,
          "index": 26
        },
        {
          "name": "Authorship",
          "storage": {
            "prefix": "Authorship",
            "items": [
              {
                "name": "Author",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " Author of current block."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 5
        },
        {
          "name": "Staking",
          "storage": {
            "prefix": "Staking",
            "items": [
              {
                "name": "ValidatorCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The ideal number of active validators."
                ]
              },
              {
                "name": "MinimumValidatorCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Minimum number of staking participants before emergency conditions are imposed."
                ]
              },
              {
                "name": "Invulnerables",
                "modifier": "Default",
                "type": {
                  "plain": 107
                },
                "fallback": "0x00",
                "docs": [
                  " Any validators that may never be slashed or forcibly kicked. It's a Vec since they're",
                  " easy to initialize and the performance hit is minimal (we expect no more than four",
                  " invulnerables) and restricted to testnets."
                ]
              },
              {
                "name": "Bonded",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 0
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Map from all locked \"stash\" accounts to the controller account.",
                  "",
                  " TWOX-NOTE: SAFE since `AccountId` is a secure hash."
                ]
              },
              {
                "name": "MinNominatorBond",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The minimum active bond to become and maintain the role of a nominator."
                ]
              },
              {
                "name": "MinValidatorBond",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The minimum active bond to become and maintain the role of a validator."
                ]
              },
              {
                "name": "MinimumActiveStake",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The minimum active nominator stake of the last successful election."
                ]
              },
              {
                "name": "MinCommission",
                "modifier": "Default",
                "type": {
                  "plain": 36
                },
                "fallback": "0x00000000",
                "docs": [
                  " The minimum amount of commission that validators can set.",
                  "",
                  " If set to `0`, no limit exists."
                ]
              },
              {
                "name": "Ledger",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 512
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Map from all (unlocked) \"controller\" accounts to the info regarding the staking.",
                  "",
                  " Note: All the reads and mutations to this storage *MUST* be done through the methods exposed",
                  " by [`StakingLedger`] to ensure data and lock consistency."
                ]
              },
              {
                "name": "Payee",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 35
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Where the reward payment should be made. Keyed by stash.",
                  "",
                  " TWOX-NOTE: SAFE since `AccountId` is a secure hash."
                ]
              },
              {
                "name": "Validators",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 37
                  }
                },
                "fallback": "0x0000",
                "docs": [
                  " The map from (wannabe) validator stash key to the preferences of that validator.",
                  "",
                  " TWOX-NOTE: SAFE since `AccountId` is a secure hash."
                ]
              },
              {
                "name": "CounterForValidators",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "MaxValidatorsCount",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " The maximum validator count before we stop allowing new validators to join.",
                  "",
                  " When this value is not set, no limits are enforced."
                ]
              },
              {
                "name": "Nominators",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 517
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The map from nominator stash key to their nomination preferences, namely the validators that",
                  " they wish to support.",
                  "",
                  " Note that the keys of this storage map might become non-decodable in case the",
                  " account's [`NominationsQuota::MaxNominations`] configuration is decreased.",
                  " In this rare case, these nominators",
                  " are still existent in storage, their key is correct and retrievable (i.e. `contains_key`",
                  " indicates that they exist), but their value cannot be decoded. Therefore, the non-decodable",
                  " nominators will effectively not-exist, until they re-submit their preferences such that it",
                  " is within the bounds of the newly set `Config::MaxNominations`.",
                  "",
                  " This implies that `::iter_keys().count()` and `::iter().count()` might return different",
                  " values for this map. Moreover, the main `::count()` is aligned with the former, namely the",
                  " number of keys that exist.",
                  "",
                  " Lastly, if any of the nominators become non-decodable, they can be chilled immediately via",
                  " [`Call::chill_other`] dispatchable by anyone.",
                  "",
                  " TWOX-NOTE: SAFE since `AccountId` is a secure hash."
                ]
              },
              {
                "name": "CounterForNominators",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "MaxNominatorsCount",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " The maximum nominator count before we stop allowing new validators to join.",
                  "",
                  " When this value is not set, no limits are enforced."
                ]
              },
              {
                "name": "CurrentEra",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " The current era index.",
                  "",
                  " This is the latest planned era, depending on how the Session pallet queues the validator",
                  " set, it might be active or not."
                ]
              },
              {
                "name": "ActiveEra",
                "modifier": "Optional",
                "type": {
                  "plain": 519
                },
                "fallback": "0x00",
                "docs": [
                  " The active era information, it holds index and start.",
                  "",
                  " The active era is the era being currently rewarded. Validator set of this era must be",
                  " equal to [`SessionInterface::validators`]."
                ]
              },
              {
                "name": "ErasStartSessionIndex",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The session index at which the era start for the last [`Config::HistoryDepth`] eras.",
                  "",
                  " Note: This tracks the starting session (i.e. session index when era start being active)",
                  " for the eras in `[CurrentEra - HISTORY_DEPTH, CurrentEra]`."
                ]
              },
              {
                "name": "ErasStakers",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 521,
                    "value": 522
                  }
                },
                "fallback": "0x000000",
                "docs": [
                  " Exposure of validator at era.",
                  "",
                  " This is keyed first by the era index to allow bulk deletion and then the stash account.",
                  "",
                  " Is it removed after [`Config::HistoryDepth`] eras.",
                  " If stakers hasn't been set or has been removed then empty exposure is returned.",
                  "",
                  " Note: Deprecated since v14. Use `EraInfo` instead to work with exposures."
                ]
              },
              {
                "name": "ErasStakersOverview",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 521,
                    "value": 525
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Summary of validator exposure at a given era.",
                  "",
                  " This contains the total stake in support of the validator and their own stake. In addition,",
                  " it can also be used to get the number of nominators backing this validator and the number of",
                  " exposure pages they are divided into. The page count is useful to determine the number of",
                  " pages of rewards that needs to be claimed.",
                  "",
                  " This is keyed first by the era index to allow bulk deletion and then the stash account.",
                  " Should only be accessed through `EraInfo`.",
                  "",
                  " Is it removed after [`Config::HistoryDepth`] eras.",
                  " If stakers hasn't been set or has been removed then empty overview is returned."
                ]
              },
              {
                "name": "ErasStakersClipped",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 521,
                    "value": 522
                  }
                },
                "fallback": "0x000000",
                "docs": [
                  " Clipped Exposure of validator at era.",
                  "",
                  " Note: This is deprecated, should be used as read-only and will be removed in the future.",
                  " New `Exposure`s are stored in a paged manner in `ErasStakersPaged` instead.",
                  "",
                  " This is similar to [`ErasStakers`] but number of nominators exposed is reduced to the",
                  " `T::MaxExposurePageSize` biggest stakers.",
                  " (Note: the field `total` and `own` of the exposure remains unchanged).",
                  " This is used to limit the i/o cost for the nominator payout.",
                  "",
                  " This is keyed fist by the era index to allow bulk deletion and then the stash account.",
                  "",
                  " It is removed after [`Config::HistoryDepth`] eras.",
                  " If stakers hasn't been set or has been removed then empty exposure is returned.",
                  "",
                  " Note: Deprecated since v14. Use `EraInfo` instead to work with exposures."
                ]
              },
              {
                "name": "ErasStakersPaged",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 526,
                    "value": 527
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Paginated exposure of a validator at given era.",
                  "",
                  " This is keyed first by the era index to allow bulk deletion, then stash account and finally",
                  " the page. Should only be accessed through `EraInfo`.",
                  "",
                  " This is cleared after [`Config::HistoryDepth`] eras."
                ]
              },
              {
                "name": "ClaimedRewards",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 521,
                    "value": 80
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " History of claimed paged rewards by era and validator.",
                  "",
                  " This is keyed by era and validator stash which maps to the set of page indexes which have",
                  " been claimed.",
                  "",
                  " It is removed after [`Config::HistoryDepth`] eras."
                ]
              },
              {
                "name": "ErasValidatorPrefs",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 521,
                    "value": 37
                  }
                },
                "fallback": "0x0000",
                "docs": [
                  " Similar to `ErasStakers`, this holds the preferences of validators.",
                  "",
                  " This is keyed first by the era index to allow bulk deletion and then the stash account.",
                  "",
                  " Is it removed after [`Config::HistoryDepth`] eras."
                ]
              },
              {
                "name": "ErasValidatorReward",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 6
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The total validator era payout for the last [`Config::HistoryDepth`] eras.",
                  "",
                  " Eras that haven't finished yet or has been removed doesn't have reward."
                ]
              },
              {
                "name": "ErasRewardPoints",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 528
                  }
                },
                "fallback": "0x0000000000",
                "docs": [
                  " Rewards for the last [`Config::HistoryDepth`] eras.",
                  " If reward hasn't been set or has been removed then 0 reward is returned."
                ]
              },
              {
                "name": "ErasTotalStake",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 6
                  }
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The total amount staked for the last [`Config::HistoryDepth`] eras.",
                  " If total hasn't been set or has been removed then 0 stake is returned."
                ]
              },
              {
                "name": "ForceEra",
                "modifier": "Default",
                "type": {
                  "plain": 40
                },
                "fallback": "0x00",
                "docs": [
                  " Mode of era forcing."
                ]
              },
              {
                "name": "SlashRewardFraction",
                "modifier": "Default",
                "type": {
                  "plain": 36
                },
                "fallback": "0x00000000",
                "docs": [
                  " The percentage of the slash that is distributed to reporters.",
                  "",
                  " The rest of the slashed value is handled by the `Slash`."
                ]
              },
              {
                "name": "CanceledSlashPayout",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The amount of currency given to reporters of a slash event which was",
                  " canceled by extraordinary circumstances (e.g. governance)."
                ]
              },
              {
                "name": "UnappliedSlashes",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 532
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All unapplied slashes that are queued for later."
                ]
              },
              {
                "name": "BondedEras",
                "modifier": "Default",
                "type": {
                  "plain": 461
                },
                "fallback": "0x00",
                "docs": [
                  " A mapping from still-bonded eras to the first session index of that era.",
                  "",
                  " Must contains information for eras for the range:",
                  " `[active_era - bounding_duration; active_era]`"
                ]
              },
              {
                "name": "ValidatorSlashInEra",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 521,
                    "value": 534
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All slashing events on validators, mapped by era to the highest slash proportion",
                  " and slash value of the era."
                ]
              },
              {
                "name": "NominatorSlashInEra",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 521,
                    "value": 6
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All slashing events on nominators, mapped by era to the highest slash value of the era."
                ]
              },
              {
                "name": "SlashingSpans",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 535
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Slashing spans for stash accounts."
                ]
              },
              {
                "name": "SpanSlash",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 531,
                    "value": 536
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Records information about the maximum slash of a stash within a slashing span,",
                  " as well as how much reward has been paid out."
                ]
              },
              {
                "name": "CurrentPlannedSession",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The last planned session scheduled by the session pallet.",
                  "",
                  " This is basically in sync with the call to [`pallet_session::SessionManager::new_session`]."
                ]
              },
              {
                "name": "OffendingValidators",
                "modifier": "Default",
                "type": {
                  "plain": 537
                },
                "fallback": "0x00",
                "docs": [
                  " Indices of validators that have offended in the active era and whether they are currently",
                  " disabled.",
                  "",
                  " This value should be a superset of disabled validators since not all offences lead to the",
                  " validator being disabled (if there was no slash). This is needed to track the percentage of",
                  " validators that have offended in the current era, ensuring a new era is forced if",
                  " `OffendingValidatorsThreshold` is reached. The vec is always kept sorted so that we can find",
                  " whether a given validator has previously offended using binary search. It gets cleared when",
                  " the era ends."
                ]
              },
              {
                "name": "ChillThreshold",
                "modifier": "Optional",
                "type": {
                  "plain": 110
                },
                "fallback": "0x00",
                "docs": [
                  " The threshold for when users can start calling `chill_other` for other validators /",
                  " nominators. The threshold is compared to the actual number of validators / nominators",
                  " (`CountFor*`) in the system compared to the configured max (`Max*Count`)."
                ]
              }
            ]
          },
          "calls": {
            "type": 108
          },
          "events": {
            "type": 34
          },
          "constants": [
            {
              "name": "HistoryDepth",
              "type": 4,
              "value": "0x54000000",
              "docs": [
                " Number of eras to keep in history.",
                "",
                " Following information is kept for eras in `[current_era -",
                " HistoryDepth, current_era]`: `ErasStakers`, `ErasStakersClipped`,",
                " `ErasValidatorPrefs`, `ErasValidatorReward`, `ErasRewardPoints`,",
                " `ErasTotalStake`, `ErasStartSessionIndex`, `ClaimedRewards`, `ErasStakersPaged`,",
                " `ErasStakersOverview`.",
                "",
                " Must be more than the number of eras delayed by session.",
                " I.e. active era must always be in history. I.e. `active_era >",
                " current_era - history_depth` must be guaranteed.",
                "",
                " If migrating an existing pallet from storage value to config value,",
                " this should be set to same value or greater as in storage.",
                "",
                " Note: `HistoryDepth` is used as the upper bound for the `BoundedVec`",
                " item `StakingLedger.legacy_claimed_rewards`. Setting this value lower than",
                " the existing value can lead to inconsistencies in the",
                " `StakingLedger` and will need to be handled properly in a migration.",
                " The test `reducing_history_depth_abrupt` shows this effect."
              ]
            },
            {
              "name": "SessionsPerEra",
              "type": 4,
              "value": "0x06000000",
              "docs": [
                " Number of sessions per era."
              ]
            },
            {
              "name": "BondingDuration",
              "type": 4,
              "value": "0x02000000",
              "docs": [
                " Number of eras that staked funds must remain bonded for."
              ]
            },
            {
              "name": "SlashDeferDuration",
              "type": 4,
              "value": "0x01000000",
              "docs": [
                " Number of eras that slashes are deferred by, after computation.",
                "",
                " This should be less than the bonding duration. Set to 0 if slashes",
                " should be applied immediately, without opportunity for intervention."
              ]
            },
            {
              "name": "MaxExposurePageSize",
              "type": 4,
              "value": "0x40000000",
              "docs": [
                " The maximum size of each `T::ExposurePage`.",
                "",
                " An `ExposurePage` is weakly bounded to a maximum of `MaxExposurePageSize`",
                " nominators.",
                "",
                " For older non-paged exposure, a reward payout was restricted to the top",
                " `MaxExposurePageSize` nominators. This is to limit the i/o cost for the",
                " nominator payout.",
                "",
                " Note: `MaxExposurePageSize` is used to bound `ClaimedRewards` and is unsafe to reduce",
                " without handling it in a migration."
              ]
            },
            {
              "name": "MaxUnlockingChunks",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum number of `unlocking` chunks a [`StakingLedger`] can",
                " have. Effectively determines how many unique eras a staker may be",
                " unbonding in.",
                "",
                " Note: `MaxUnlockingChunks` is used as the upper bound for the",
                " `BoundedVec` item `StakingLedger.unlocking`. Setting this value",
                " lower than the existing value can lead to inconsistencies in the",
                " `StakingLedger` and will need to be handled properly in a runtime",
                " migration. The test `reducing_max_unlocking_chunks_abrupt` shows",
                " this effect."
              ]
            }
          ],
          "errors": {
            "type": 539
          },
          "index": 6
        },
        {
          "name": "Offences",
          "storage": {
            "prefix": "Offences",
            "items": [
              {
                "name": "Reports",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 12,
                    "value": 540
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The primary structure that holds all offence records keyed by report identifiers."
                ]
              },
              {
                "name": "ConcurrentReportsIndex",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 542,
                    "value": 206
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A vector of reports of the same kind that happened at the same time slot."
                ]
              }
            ]
          },
          "calls": null,
          "events": {
            "type": 41
          },
          "constants": [],
          "errors": null,
          "index": 7
        },
        {
          "name": "Historical",
          "storage": null,
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 27
        },
        {
          "name": "Beefy",
          "storage": {
            "prefix": "Beefy",
            "items": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "type": {
                  "plain": 543
                },
                "fallback": "0x00",
                "docs": [
                  " The current authorities set"
                ]
              },
              {
                "name": "ValidatorSetId",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The current validator set id"
                ]
              },
              {
                "name": "NextAuthorities",
                "modifier": "Default",
                "type": {
                  "plain": 543
                },
                "fallback": "0x00",
                "docs": [
                  " Authorities set scheduled to be used with the next session"
                ]
              },
              {
                "name": "SetIdSession",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 11,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A mapping from BEEFY set ID to the index of the *most recent* session for which its",
                  " members were responsible.",
                  "",
                  " This is only used for validating equivocation proofs. An equivocation proof must",
                  " contains a key-ownership proof for a given session, therefore we need a way to tie",
                  " together sessions and BEEFY set ids, i.e. we need to validate that a validator",
                  " was the owner of a given key on a given session, and what the active set ID was",
                  " during that session.",
                  "",
                  " TWOX-NOTE: `ValidatorSetId` is not under user control."
                ]
              },
              {
                "name": "GenesisBlock",
                "modifier": "Default",
                "type": {
                  "plain": 272
                },
                "fallback": "0x00",
                "docs": [
                  " Block number where BEEFY consensus is enabled/started.",
                  " By changing this (through privileged `set_new_genesis()`), BEEFY consensus is effectively",
                  " restarted from the newly set block number."
                ]
              }
            ]
          },
          "calls": {
            "type": 115
          },
          "events": null,
          "constants": [
            {
              "name": "MaxAuthorities",
              "type": 4,
              "value": "0xa0860100",
              "docs": [
                " The maximum number of authorities that can be added."
              ]
            },
            {
              "name": "MaxNominators",
              "type": 4,
              "value": "0x40000000",
              "docs": [
                " The maximum number of nominators for each validator."
              ]
            },
            {
              "name": "MaxSetIdSessionEntries",
              "type": 11,
              "value": "0x0c00000000000000",
              "docs": [
                " The maximum number of entries to keep in the set id to session index mapping.",
                "",
                " Since the `SetIdSession` map is only used for validating equivocations this",
                " value should relate to the bonding duration of whatever staking system is",
                " being used (if any). If equivocation handling is not enabled then this value",
                " can be zero."
              ]
            }
          ],
          "errors": {
            "type": 545
          },
          "index": 200
        },
        {
          "name": "Mmr",
          "storage": {
            "prefix": "Mmr",
            "items": [
              {
                "name": "RootHash",
                "modifier": "Default",
                "type": {
                  "plain": 12
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Latest MMR Root hash."
                ]
              },
              {
                "name": "NumberOfLeaves",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " Current size of the MMR (number of leaves)."
                ]
              },
              {
                "name": "Nodes",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 11,
                    "value": 12
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Hashes of the nodes in the MMR.",
                  "",
                  " Note this collection only contains MMR peaks, the inner nodes (and leaves)",
                  " are pruned and only stored in the Offchain DB."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 201
        },
        {
          "name": "BeefyMmrLeaf",
          "storage": {
            "prefix": "BeefyMmrLeaf",
            "items": [
              {
                "name": "BeefyAuthorities",
                "modifier": "Default",
                "type": {
                  "plain": 546
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Details of current BEEFY authority set."
                ]
              },
              {
                "name": "BeefyNextAuthorities",
                "modifier": "Default",
                "type": {
                  "plain": 546
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Details of next BEEFY authority set.",
                  "",
                  " This storage entry is used as cache for calls to `update_beefy_next_authority_set`."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 202
        },
        {
          "name": "Session",
          "storage": {
            "prefix": "Session",
            "items": [
              {
                "name": "Validators",
                "modifier": "Default",
                "type": {
                  "plain": 107
                },
                "fallback": "0x00",
                "docs": [
                  " The current set of validators."
                ]
              },
              {
                "name": "CurrentIndex",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Current index of the session."
                ]
              },
              {
                "name": "QueuedChanged",
                "modifier": "Default",
                "type": {
                  "plain": 39
                },
                "fallback": "0x00",
                "docs": [
                  " True if the underlying economic identities or weighting behind the validators",
                  " has changed in the queued validator set."
                ]
              },
              {
                "name": "QueuedKeys",
                "modifier": "Default",
                "type": {
                  "plain": 547
                },
                "fallback": "0x00",
                "docs": [
                  " The queued keys for the next session. When the next session begins, these keys",
                  " will be used to determine the validator's session keys."
                ]
              },
              {
                "name": "DisabledValidators",
                "modifier": "Default",
                "type": {
                  "plain": 80
                },
                "fallback": "0x00",
                "docs": [
                  " Indices of disabled validators.",
                  "",
                  " The vec is always kept sorted so that we can find whether a given validator is",
                  " disabled using binary search. It gets cleared when `on_session_ending` returns",
                  " a new set of identities."
                ]
              },
              {
                "name": "NextKeys",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 130
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The next session keys for a validator."
                ]
              },
              {
                "name": "KeyOwner",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 549,
                    "value": 0
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The owner of a key. The key is the `KeyTypeId` + the encoded key."
                ]
              }
            ]
          },
          "calls": {
            "type": 129
          },
          "events": {
            "type": 43
          },
          "constants": [],
          "errors": {
            "type": 551
          },
          "index": 8
        },
        {
          "name": "Grandpa",
          "storage": {
            "prefix": "Grandpa",
            "items": [
              {
                "name": "State",
                "modifier": "Default",
                "type": {
                  "plain": 552
                },
                "fallback": "0x00",
                "docs": [
                  " State of the current authority set."
                ]
              },
              {
                "name": "PendingChange",
                "modifier": "Optional",
                "type": {
                  "plain": 553
                },
                "fallback": "0x00",
                "docs": [
                  " Pending change: (signaled at, scheduled change)."
                ]
              },
              {
                "name": "NextForced",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " next block number where we can force a change."
                ]
              },
              {
                "name": "Stalled",
                "modifier": "Optional",
                "type": {
                  "plain": 56
                },
                "fallback": "0x00",
                "docs": [
                  " `true` if we are currently stalled."
                ]
              },
              {
                "name": "CurrentSetId",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The number of changes (both in terms of keys and underlying economic responsibilities)",
                  " in the \"set\" of Grandpa validators from genesis."
                ]
              },
              {
                "name": "SetIdSession",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 11,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A mapping from grandpa set ID to the index of the *most recent* session for which its",
                  " members were responsible.",
                  "",
                  " This is only used for validating equivocation proofs. An equivocation proof must",
                  " contains a key-ownership proof for a given session, therefore we need a way to tie",
                  " together sessions and GRANDPA set ids, i.e. we need to validate that a validator",
                  " was the owner of a given key on a given session, and what the active set ID was",
                  " during that session.",
                  "",
                  " TWOX-NOTE: `SetId` is not under user control."
                ]
              },
              {
                "name": "Authorities",
                "modifier": "Default",
                "type": {
                  "plain": 554
                },
                "fallback": "0x00",
                "docs": [
                  " The current list of authorities."
                ]
              }
            ]
          },
          "calls": {
            "type": 134
          },
          "events": {
            "type": 44
          },
          "constants": [
            {
              "name": "MaxAuthorities",
              "type": 4,
              "value": "0xa0860100",
              "docs": [
                " Max Authorities in use"
              ]
            },
            {
              "name": "MaxNominators",
              "type": 4,
              "value": "0x40000000",
              "docs": [
                " The maximum number of nominators for each validator."
              ]
            },
            {
              "name": "MaxSetIdSessionEntries",
              "type": 11,
              "value": "0x0c00000000000000",
              "docs": [
                " The maximum number of entries to keep in the set id to session index mapping.",
                "",
                " Since the `SetIdSession` map is only used for validating equivocations this",
                " value should relate to the bonding duration of whatever staking system is",
                " being used (if any). If equivocation handling is not enabled then this value",
                " can be zero."
              ]
            }
          ],
          "errors": {
            "type": 555
          },
          "index": 10
        },
        {
          "name": "AuthorityDiscovery",
          "storage": null,
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 12
        },
        {
          "name": "Utility",
          "storage": null,
          "calls": {
            "type": 146
          },
          "events": {
            "type": 49
          },
          "constants": [
            {
              "name": "batched_calls_limit",
              "type": 4,
              "value": "0xaa2a0000",
              "docs": [
                " The limit on the number of batched calls."
              ]
            }
          ],
          "errors": {
            "type": 556
          },
          "index": 16
        },
        {
          "name": "Identity",
          "storage": {
            "prefix": "Identity",
            "items": [
              {
                "name": "IdentityOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 557
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Information that is pertinent to identify the entity behind an account.",
                  "",
                  " TWOX-NOTE: OK ― `AccountId` is a secure hash."
                ]
              },
              {
                "name": "SuperOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 198
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The super-identity of an alternative \"sub\" identity together with its name, within that",
                  " context. If the account is not some other account's sub-identity, then just `None`."
                ]
              },
              {
                "name": "SubsOf",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 561
                  }
                },
                "fallback": "0x0000000000000000000000000000000000",
                "docs": [
                  " Alternative \"sub\" identities of this account.",
                  "",
                  " The first item is the deposit, the second is a vector of the accounts.",
                  "",
                  " TWOX-NOTE: OK ― `AccountId` is a secure hash."
                ]
              },
              {
                "name": "Registrars",
                "modifier": "Default",
                "type": {
                  "plain": 563
                },
                "fallback": "0x00",
                "docs": [
                  " The set of registrars. Not expected to get very big as can only be added through a",
                  " special origin (likely a council motion).",
                  "",
                  " The index into this can be cast to `RegistrarIndex` to get a valid value."
                ]
              }
            ]
          },
          "calls": {
            "type": 162
          },
          "events": {
            "type": 52
          },
          "constants": [
            {
              "name": "BasicDeposit",
              "type": 6,
              "value": "0x00a0724e180900000000000000000000",
              "docs": [
                " The amount held on deposit for a registered identity"
              ]
            },
            {
              "name": "ByteDeposit",
              "type": 6,
              "value": "0x80f0fa02000000000000000000000000",
              "docs": [
                " The amount held on deposit per encoded byte for a registered identity."
              ]
            },
            {
              "name": "SubAccountDeposit",
              "type": 6,
              "value": "0x00204aa9d10100000000000000000000",
              "docs": [
                " The amount held on deposit for a registered subaccount. This should account for the fact",
                " that one storage item's value will increase by the size of an account ID, and there will",
                " be another trie item whose value is the size of an account ID plus 32 bytes."
              ]
            },
            {
              "name": "MaxSubAccounts",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of sub-accounts allowed per identified account."
              ]
            },
            {
              "name": "MaxRegistrars",
              "type": 4,
              "value": "0x14000000",
              "docs": [
                " Maxmimum number of registrars allowed in the system. Needed to bound the complexity",
                " of, e.g., updating judgements."
              ]
            }
          ],
          "errors": {
            "type": 567
          },
          "index": 17
        },
        {
          "name": "Recovery",
          "storage": {
            "prefix": "Recovery",
            "items": [
              {
                "name": "Recoverable",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 568
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The set of recoverable accounts and their recovery configuration."
                ]
              },
              {
                "name": "ActiveRecoveries",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 570,
                    "value": 571
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Active recovery attempts.",
                  "",
                  " First account is the account to be recovered, and the second account",
                  " is the user trying to recover the account."
                ]
              },
              {
                "name": "Proxy",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 0
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The list of allowed proxy accounts.",
                  "",
                  " Map from the user who can access it to the recovered account."
                ]
              }
            ]
          },
          "calls": {
            "type": 200
          },
          "events": {
            "type": 53
          },
          "constants": [
            {
              "name": "ConfigDepositBase",
              "type": 6,
              "value": "0x005039278c0400000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating a recovery configuration.",
                "",
                " This is held for an additional storage item whose value size is",
                " `2 + sizeof(BlockNumber, Balance)` bytes."
              ]
            },
            {
              "name": "FriendDepositFactor",
              "type": 6,
              "value": "0x0088526a740000000000000000000000",
              "docs": [
                " The amount of currency needed per additional user when creating a recovery",
                " configuration.",
                "",
                " This is held for adding `sizeof(AccountId)` bytes more into a pre-existing storage",
                " value."
              ]
            },
            {
              "name": "MaxFriends",
              "type": 4,
              "value": "0x09000000",
              "docs": [
                " The maximum amount of friends allowed in a recovery configuration.",
                "",
                " NOTE: The threshold programmed in this Pallet uses u16, so it does",
                " not really make sense to have a limit here greater than u16::MAX.",
                " But also, that is a lot more than you should probably set this value",
                " to anyway..."
              ]
            },
            {
              "name": "RecoveryDeposit",
              "type": 6,
              "value": "0x005039278c0400000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for starting a recovery.",
                "",
                " This is primarily held for deterring malicious recovery attempts, and should",
                " have a value large enough that a bad actor would choose not to place this",
                " deposit. It also acts to fund additional storage item whose value size is",
                " `sizeof(BlockNumber, Balance + T * AccountId)` bytes. Where T is a configurable",
                " threshold."
              ]
            }
          ],
          "errors": {
            "type": 572
          },
          "index": 18
        },
        {
          "name": "Vesting",
          "storage": {
            "prefix": "Vesting",
            "items": [
              {
                "name": "Vesting",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 573
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Information regarding the vesting of a given account."
                ]
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "type": {
                  "plain": 575
                },
                "fallback": "0x00",
                "docs": [
                  " Storage version of the pallet.",
                  "",
                  " New networks start with latest version, as determined by the genesis build."
                ]
              }
            ]
          },
          "calls": {
            "type": 201
          },
          "events": {
            "type": 54
          },
          "constants": [
            {
              "name": "MinVestedTransfer",
              "type": 6,
              "value": "0x0010a5d4e80000000000000000000000",
              "docs": [
                " The minimum amount transferred to call `vested_transfer`."
              ]
            },
            {
              "name": "MaxVestingSchedules",
              "type": 4,
              "value": "0x1c000000",
              "docs": []
            }
          ],
          "errors": {
            "type": 576
          },
          "index": 19
        },
        {
          "name": "Scheduler",
          "storage": {
            "prefix": "Scheduler",
            "items": [
              {
                "name": "IncompleteSince",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": []
              },
              {
                "name": "Agenda",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 577
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Items to be executed, indexed by the block number that they should be executed on."
                ]
              },
              {
                "name": "Lookup",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 1,
                    "value": 56
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Lookup from a name to the block number and index of the task.",
                  "",
                  " For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4",
                  " identities."
                ]
              }
            ]
          },
          "calls": {
            "type": 203
          },
          "events": {
            "type": 55
          },
          "constants": [
            {
              "name": "MaximumWeight",
              "type": 9,
              "value": "0x0b00806e87740113cccccccccccccccc",
              "docs": [
                " The maximum weight that may be scheduled per block for any dispatchables."
              ]
            },
            {
              "name": "MaxScheduledPerBlock",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum number of scheduled calls in the queue for a single block.",
                "",
                " NOTE:",
                " + Dependent pallets' benchmarks might require a higher limit for the setting. Set a",
                " higher limit under `runtime-benchmarks` feature."
              ]
            }
          ],
          "errors": {
            "type": 581
          },
          "index": 20
        },
        {
          "name": "Preimage",
          "storage": {
            "prefix": "Preimage",
            "items": [
              {
                "name": "StatusFor",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 582
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The request status of a given hash."
                ]
              },
              {
                "name": "RequestStatusFor",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 584
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The request status of a given hash."
                ]
              },
              {
                "name": "PreimageFor",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 588,
                    "value": 589
                  }
                },
                "fallback": "0x00",
                "docs": []
              }
            ]
          },
          "calls": {
            "type": 205
          },
          "events": {
            "type": 58
          },
          "constants": [],
          "errors": {
            "type": 590
          },
          "index": 28
        },
        {
          "name": "Sudo",
          "storage": {
            "prefix": "Sudo",
            "items": [
              {
                "name": "Key",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " The `AccountId` of the sudo key."
                ]
              }
            ]
          },
          "calls": {
            "type": 207
          },
          "events": {
            "type": 59
          },
          "constants": [],
          "errors": {
            "type": 591
          },
          "index": 21
        },
        {
          "name": "Proxy",
          "storage": {
            "prefix": "Proxy",
            "items": [
              {
                "name": "Proxies",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 592
                  }
                },
                "fallback": "0x0000000000000000000000000000000000",
                "docs": [
                  " The set of account proxies. Maps the account which has delegated to the accounts",
                  " which are being delegated to, together with the amount held on deposit."
                ]
              },
              {
                "name": "Announcements",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 596
                  }
                },
                "fallback": "0x0000000000000000000000000000000000",
                "docs": [
                  " The announcements made by the proxy (key)."
                ]
              }
            ]
          },
          "calls": {
            "type": 208
          },
          "events": {
            "type": 61
          },
          "constants": [
            {
              "name": "ProxyDepositBase",
              "type": 6,
              "value": "0x00947cece80000000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating a proxy.",
                "",
                " This is held for an additional storage item whose value size is",
                " `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "ProxyDepositFactor",
              "type": 6,
              "value": "0x80005962000000000000000000000000",
              "docs": [
                " The amount of currency needed per proxy added.",
                "",
                " This is held for adding 32 bytes plus an instance of `ProxyType` more into a",
                " pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take",
                " into account `32 + proxy_type.encode().len()` bytes of data."
              ]
            },
            {
              "name": "MaxProxies",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum amount of proxies allowed for a single account."
              ]
            },
            {
              "name": "MaxPending",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum amount of time-delayed announcements that are allowed to be pending."
              ]
            },
            {
              "name": "AnnouncementDepositBase",
              "type": 6,
              "value": "0x00947cece80000000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating an announcement.",
                "",
                " This is held when a new storage item holding a `Balance` is created (typically 16",
                " bytes)."
              ]
            },
            {
              "name": "AnnouncementDepositFactor",
              "type": 6,
              "value": "0x0001b2c4000000000000000000000000",
              "docs": [
                " The amount of currency needed per announcement made.",
                "",
                " This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)",
                " into a pre-existing storage value."
              ]
            }
          ],
          "errors": {
            "type": 600
          },
          "index": 22
        },
        {
          "name": "Multisig",
          "storage": {
            "prefix": "Multisig",
            "items": [
              {
                "name": "Multisigs",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 601,
                    "value": 602
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The set of open multisig operations."
                ]
              }
            ]
          },
          "calls": {
            "type": 210
          },
          "events": {
            "type": 64
          },
          "constants": [
            {
              "name": "DepositBase",
              "type": 6,
              "value": "0x00bce7dae90000000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating a multisig execution or to",
                " store a dispatch call for later.",
                "",
                " This is held for an additional storage item whose value size is",
                " `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is",
                " `32 + sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "DepositFactor",
              "type": 6,
              "value": "0x00105e5f000000000000000000000000",
              "docs": [
                " The amount of currency needed per unit threshold when creating a multisig execution.",
                "",
                " This is held for adding 32 bytes more into a pre-existing storage value."
              ]
            },
            {
              "name": "MaxSignatories",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum amount of signatories allowed in the multisig."
              ]
            }
          ],
          "errors": {
            "type": 604
          },
          "index": 23
        },
        {
          "name": "ElectionProviderMultiPhase",
          "storage": {
            "prefix": "ElectionProviderMultiPhase",
            "items": [
              {
                "name": "Round",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x01000000",
                "docs": [
                  " Internal counter for the number of rounds.",
                  "",
                  " This is useful for de-duplication of transactions submitted to the pool, and general",
                  " diagnostics of the pallet.",
                  "",
                  " This is merely incremented once per every time that an upstream `elect` is called."
                ]
              },
              {
                "name": "CurrentPhase",
                "modifier": "Default",
                "type": {
                  "plain": 69
                },
                "fallback": "0x00",
                "docs": [
                  " Current phase."
                ]
              },
              {
                "name": "QueuedSolution",
                "modifier": "Optional",
                "type": {
                  "plain": 605
                },
                "fallback": "0x00",
                "docs": [
                  " Current best solution, signed or unsigned, queued to be returned upon `elect`.",
                  "",
                  " Always sorted by score."
                ]
              },
              {
                "name": "Snapshot",
                "modifier": "Optional",
                "type": {
                  "plain": 607
                },
                "fallback": "0x00",
                "docs": [
                  " Snapshot data of the round.",
                  "",
                  " This is created at the beginning of the signed phase and cleared upon calling `elect`."
                ]
              },
              {
                "name": "DesiredTargets",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Desired number of targets to elect for this round.",
                  "",
                  " Only exists when [`Snapshot`] is present."
                ]
              },
              {
                "name": "SnapshotMetadata",
                "modifier": "Optional",
                "type": {
                  "plain": 265
                },
                "fallback": "0x00",
                "docs": [
                  " The metadata of the [`RoundSnapshot`]",
                  "",
                  " Only exists when [`Snapshot`] is present."
                ]
              },
              {
                "name": "SignedSubmissionNextIndex",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The next index to be assigned to an incoming signed submission.",
                  "",
                  " Every accepted submission is assigned a unique index; that index is bound to that particular",
                  " submission for the duration of the election. On election finalization, the next index is",
                  " reset to 0.",
                  "",
                  " We can't just use `SignedSubmissionIndices.len()`, because that's a bounded set; past its",
                  " capacity, it will simply saturate. We can't just iterate over `SignedSubmissionsMap`,",
                  " because iteration is slow. Instead, we store the value here."
                ]
              },
              {
                "name": "SignedSubmissionIndices",
                "modifier": "Default",
                "type": {
                  "plain": 610
                },
                "fallback": "0x00",
                "docs": [
                  " A sorted, bounded vector of `(score, block_number, index)`, where each `index` points to a",
                  " value in `SignedSubmissions`.",
                  "",
                  " We never need to process more than a single signed submission at a time. Signed submissions",
                  " can be quite large, so we're willing to pay the cost of multiple database accesses to access",
                  " them one at a time instead of reading and decoding all of them at once."
                ]
              },
              {
                "name": "SignedSubmissionsMap",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 613
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Unchecked, signed solutions.",
                  "",
                  " Together with `SubmissionIndices`, this stores a bounded set of `SignedSubmissions` while",
                  " allowing us to keep only a single one in memory at a time.",
                  "",
                  " Twox note: the key of the map is an auto-incrementing index which users cannot inspect or",
                  " affect; we shouldn't need a cryptographically secure hasher."
                ]
              },
              {
                "name": "MinimumUntrustedScore",
                "modifier": "Optional",
                "type": {
                  "plain": 68
                },
                "fallback": "0x00",
                "docs": [
                  " The minimum score that each 'untrusted' solution must attain in order to be considered",
                  " feasible.",
                  "",
                  " Can be set via `set_minimum_untrusted_score`."
                ]
              }
            ]
          },
          "calls": {
            "type": 212
          },
          "events": {
            "type": 66
          },
          "constants": [
            {
              "name": "UnsignedPhase",
              "type": 4,
              "value": "0x96000000",
              "docs": [
                " Duration of the unsigned phase."
              ]
            },
            {
              "name": "SignedPhase",
              "type": 4,
              "value": "0x96000000",
              "docs": [
                " Duration of the signed phase."
              ]
            },
            {
              "name": "BetterSignedThreshold",
              "type": 36,
              "value": "0x00000000",
              "docs": [
                " The minimum amount of improvement to the solution score that defines a solution as",
                " \"better\" in the Signed phase."
              ]
            },
            {
              "name": "BetterUnsignedThreshold",
              "type": 36,
              "value": "0x20a10700",
              "docs": [
                " The minimum amount of improvement to the solution score that defines a solution as",
                " \"better\" in the Unsigned phase."
              ]
            },
            {
              "name": "OffchainRepeat",
              "type": 4,
              "value": "0x25000000",
              "docs": [
                " The repeat threshold of the offchain worker.",
                "",
                " For example, if it is 5, that means that at least 5 blocks will elapse between attempts",
                " to submit the worker's solution."
              ]
            },
            {
              "name": "MinerTxPriority",
              "type": 11,
              "value": "0xffffffffffffff7f",
              "docs": [
                " The priority of the unsigned transaction submitted in the unsigned-phase"
              ]
            },
            {
              "name": "SignedMaxSubmissions",
              "type": 4,
              "value": "0x80000000",
              "docs": [
                " Maximum number of signed submissions that can be queued.",
                "",
                " It is best to avoid adjusting this during an election, as it impacts downstream data",
                " structures. In particular, `SignedSubmissionIndices<T>` is bounded on this value. If you",
                " update this value during an election, you _must_ ensure that",
                " `SignedSubmissionIndices.len()` is less than or equal to the new value. Otherwise,",
                " attempts to submit new solutions may cause a runtime panic."
              ]
            },
            {
              "name": "SignedMaxWeight",
              "type": 9,
              "value": "0x0b608c9074580113a3703d0ad7a370bd",
              "docs": [
                " Maximum weight of a signed solution.",
                "",
                " If [`Config::MinerConfig`] is being implemented to submit signed solutions (outside of",
                " this pallet), then [`MinerConfig::solution_weight`] is used to compare against",
                " this value."
              ]
            },
            {
              "name": "SignedMaxRefunds",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum amount of unchecked solutions to refund the call fee for."
              ]
            },
            {
              "name": "SignedRewardBase",
              "type": 6,
              "value": "0x0010a5d4e80000000000000000000000",
              "docs": [
                " Base reward for a signed solution"
              ]
            },
            {
              "name": "SignedDepositByte",
              "type": 6,
              "value": "0x59730700000000000000000000000000",
              "docs": [
                " Per-byte deposit for a signed solution."
              ]
            },
            {
              "name": "SignedDepositWeight",
              "type": 6,
              "value": "0x00000000000000000000000000000000",
              "docs": [
                " Per-weight deposit for a signed solution."
              ]
            },
            {
              "name": "MaxWinners",
              "type": 4,
              "value": "0xe8030000",
              "docs": [
                " The maximum number of winners that can be elected by this `ElectionProvider`",
                " implementation.",
                "",
                " Note: This must always be greater or equal to `T::DataProvider::desired_targets()`."
              ]
            },
            {
              "name": "MinerMaxLength",
              "type": 4,
              "value": "0x00003600",
              "docs": []
            },
            {
              "name": "MinerMaxWeight",
              "type": 9,
              "value": "0x0b608c9074580113a3703d0ad7a370bd",
              "docs": []
            },
            {
              "name": "MinerMaxVotesPerVoter",
              "type": 4,
              "value": "0x10000000",
              "docs": []
            },
            {
              "name": "MinerMaxWinners",
              "type": 4,
              "value": "0xe8030000",
              "docs": []
            }
          ],
          "errors": {
            "type": 614
          },
          "index": 24
        },
        {
          "name": "VoterList",
          "storage": {
            "prefix": "VoterList",
            "items": [
              {
                "name": "ListNodes",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 615
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A single node, within some bag.",
                  "",
                  " Nodes store links forward and back within their respective bags."
                ]
              },
              {
                "name": "CounterForListNodes",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "ListBags",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 11,
                    "value": 616
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A bag stored in storage.",
                  "",
                  " Stores a `Bag` struct, which stores head and tail pointers to itself."
                ]
              }
            ]
          },
          "calls": {
            "type": 273
          },
          "events": {
            "type": 71
          },
          "constants": [
            {
              "name": "BagThresholds",
              "type": 617,
              "value": "0x210300e40b5402000000f39e809702000000a8b197e20200000094492e3603000000279c3a930300000003bccefa0300000042c01b6e040000001b4775ee04000000385e557d0500000046dc601c0600000089386ccd06000000b6ee809207000000fe7ee36d08000000e81b1a6209000000b019f4710a000000103592a00b000000cfc96ff10c00000041146d680e000000e79bda0910000000cee885da1100000028a9c7df13000000bb70931f160000008e4089a018000000810a096a1b000000366a48841e0000005bd36af821000000807c9cd025000000c95530182a000000bd63c1db2e00000071e0572934000000689092103a000000edc4d4a240000000699379f3470000008fd80c18500000004baf8a28590000006a16a63f630000000995177b6e00000078c5f4fb7a00000062c811e78800000051bf6d6598000000048eaba4a9000000544698d7bc00000091cac036d2000000175f1801ea000000bd15b27c0401000043358ff721010000b8fc84c84201000099673c506701000007e44efa8f010000b341833ebd010000027f2ea2ef0100009883bcb927020000164d652a66020000b49513acab0200002d8e820bf9020000a1e6982c4f030000a616080daf030000cc9d37c719040000a0d584959004000042e7e0d514050000028cd70da80500000f750aef4b060000ea8d2e5c02070000c3cb996ecd070000b1e5717caf080000aa2b8e1fab090000b5c1203dc30a000026d03d0efb0b000070c75929560d0000ebadda8cd80e0000f797dbaa86100000cff04476651200001f2660717a14000009a611becb1600001dfbe82f60190000943a3c603f1c00008afe89c4711f0000ced963c70023000003a92ae4f6260000fe72eec55f2b000036c9cc6948300000dae33245bf350000062a7470d43b00007c9732d69942000084a32468234a0000571ad45987520000e7f10262de5b00000db8760344660000ae0401ded67100007d9eb308b97e00001e044a76108d00003a1df064079d0000e04fafdaccae00005679f02f95c2000095c3aaa99ad80000967c05251ef10000177a66d6670c010028cb1f1ec82a0100fa282f75984c0100d57dc8743c7201007dc4b3fb229c0100365cde74c7ca01009eb8e142b3fe01000c31ae547f3802005fe101e8d57802006373da7e74c0020051d1a60d2e100300c7e9a468ed68030061c091f7b7cb0300bf27a1b7b03904007b1499941bb404008523ed22613c050069a5d4c512d40500ec8c934def7c0600f5aa901be83807008cbe5ddb260a080002978ce113f30800fae314435df60900ddf12dbafe160b002ebadc6f4a580c000c5518c4f2bd0d00f0bb5431154c0f00498e866b46071100b2c153de9ff41200278a2fb2ce191500b2399f84247d1700e199e704aa251a00ba13f5ab331b1d00264785cc7866200088bf803f2d1124001c9823f81d262800ccc422d450b12c00f088820528c03100367c6d7e896137006e9329d30aa63d008cbc6c1322a044000070f32a5c644c00b43b84699909550080b4abe450a95e00a0cda979db5f69004cc27f4cc74c7500d0ac0eba34938200483e0ccf3d5a910068c68e7469cda100281e6fa52b1db40098a92326747fc800f09a74634d30df0080cdfc4b8d72f8009014602d9a901401f0b413d945dd330120973596c1b4560150dcfbaead7d7d01e01198b947aaa80130c7ee16bbb9d801206e488697390e02a0fa4b1d72c74902c0117170b5128c02808a1643a6ded502c0f823b1a204280380af5970a2768303c06f2d87ff41e90340937fac8f925a040091097117b6d804400fdf5b212065050049c149446e0106008ebca6e56caf0600595686851c71078068aa34a4b7480880a1e29e52b9380900bdabe880e4430a002a72b4204c6d0b80f1c013335cb80c00a03ccbdce3280e80b8629a9e20c30f00de5693d2ca8b11005d7f4c93238813001a87df3504be1500a7ce4b84ef3318000110fbea24f11a00802ae5d1b5fd1d0022a134609d62210044216bf0da2925000261f1828f5e29006620cf851e0d2e008410195252433300a0c18fca8410390026ad1493cc853f00d0cd24662fb646009ce19a1cdab64e0058ccc20c5f9f5700200a7578fb89610030bbbbd6e4936c0060cba7dc9edd7800b83bc0425b8b8600b886236164c59500f8f15fdc93b8a600206a91c0d696b900d8efe28fc097ce0068299bf52ef9e5ffffffffffffffff",
              "docs": [
                " The list of thresholds separating the various bags.",
                "",
                " Ids are separated into unsorted bags according to their score. This specifies the",
                " thresholds separating the bags. An id's bag is the largest bag for which the id's score",
                " is less than or equal to its upper threshold.",
                "",
                " When ids are iterated, higher bags are iterated completely before lower bags. This means",
                " that iteration is _semi-sorted_: ids of higher score tend to come before ids of lower",
                " score, but peer ids within a particular bag are sorted in insertion order.",
                "",
                " # Expressing the constant",
                "",
                " This constant must be sorted in strictly increasing order. Duplicate items are not",
                " permitted.",
                "",
                " There is an implied upper limit of `Score::MAX`; that value does not need to be",
                " specified within the bag. For any two threshold lists, if one ends with",
                " `Score::MAX`, the other one does not, and they are otherwise equal, the two",
                " lists will behave identically.",
                "",
                " # Calculation",
                "",
                " It is recommended to generate the set of thresholds in a geometric series, such that",
                " there exists some constant ratio such that `threshold[k + 1] == (threshold[k] *",
                " constant_ratio).max(threshold[k] + 1)` for all `k`.",
                "",
                " The helpers in the `/utils/frame/generate-bags` module can simplify this calculation.",
                "",
                " # Examples",
                "",
                " - If `BagThresholds::get().is_empty()`, then all ids are put into the same bag, and",
                "   iteration is strictly in insertion order.",
                " - If `BagThresholds::get().len() == 64`, and the thresholds are determined according to",
                "   the procedure given above, then the constant ratio is equal to 2.",
                " - If `BagThresholds::get().len() == 200`, and the thresholds are determined according to",
                "   the procedure given above, then the constant ratio is approximately equal to 1.248.",
                " - If the threshold list begins `[1, 2, 3, ...]`, then an id with score 0 or 1 will fall",
                "   into bag 0, an id with score 2 will fall into bag 1, etc.",
                "",
                " # Migration",
                "",
                " In the event that this list ever changes, a copy of the old bags list must be retained.",
                " With that `List::migrate` can be called, which will perform the appropriate migration."
              ]
            }
          ],
          "errors": {
            "type": 618
          },
          "index": 25
        },
        {
          "name": "NominationPools",
          "storage": {
            "prefix": "NominationPools",
            "items": [
              {
                "name": "TotalValueLocked",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The sum of funds across all pools.",
                  "",
                  " This might be lower but never higher than the sum of `total_balance` of all [`PoolMembers`]",
                  " because calling `pool_withdraw_unbonded` might decrease the total stake of the pool's",
                  " `bonded_account` without adjusting the pallet-internal `UnbondingPool`'s."
                ]
              },
              {
                "name": "MinJoinBond",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " Minimum amount to bond to join a pool."
                ]
              },
              {
                "name": "MinCreateBond",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " Minimum bond required to create a pool.",
                  "",
                  " This is the amount that the depositor must put as their initial stake in the pool, as an",
                  " indication of \"skin in the game\".",
                  "",
                  " This is the value that will always exist in the staking ledger of the pool bonded account",
                  " while all other accounts leave."
                ]
              },
              {
                "name": "MaxPools",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Maximum number of nomination pools that can exist. If `None`, then an unbounded number of",
                  " pools can exist."
                ]
              },
              {
                "name": "MaxPoolMembers",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Maximum number of members that can exist in the system. If `None`, then the count",
                  " members are not bound on a system wide basis."
                ]
              },
              {
                "name": "MaxPoolMembersPerPool",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Maximum number of members that may belong to pool. If `None`, then the count of",
                  " members is not bound on a per pool basis."
                ]
              },
              {
                "name": "GlobalMaxCommission",
                "modifier": "Optional",
                "type": {
                  "plain": 36
                },
                "fallback": "0x00",
                "docs": [
                  " The maximum commission that can be charged by a pool. Used on commission payouts to bound",
                  " pool commissions that are > `GlobalMaxCommission`, necessary if a future",
                  " `GlobalMaxCommission` is lower than some current pool commissions."
                ]
              },
              {
                "name": "PoolMembers",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 620
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Active members.",
                  "",
                  " TWOX-NOTE: SAFE since `AccountId` is a secure hash."
                ]
              },
              {
                "name": "CounterForPoolMembers",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "BondedPools",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 625
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Storage for bonded pools."
                ]
              },
              {
                "name": "CounterForBondedPools",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "RewardPools",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 630
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Reward pools. This is where there rewards for each pool accumulate. When a members payout is",
                  " claimed, the balance comes out fo the reward pool. Keyed by the bonded pools account."
                ]
              },
              {
                "name": "CounterForRewardPools",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "SubPoolsStorage",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 631
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Groups of unbonding pools. Each group of unbonding pools belongs to a",
                  " bonded pool, hence the name sub-pools. Keyed by the bonded pools account."
                ]
              },
              {
                "name": "CounterForSubPoolsStorage",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "Metadata",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 637
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Metadata for the pool."
                ]
              },
              {
                "name": "CounterForMetadata",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "LastPoolId",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Ever increasing number of all pools created so far."
                ]
              },
              {
                "name": "ReversePoolIdLookup",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A reverse lookup from the pool's account id to its id.",
                  "",
                  " This is only used for slashing. In all other instances, the pool id is used, and the",
                  " accounts are deterministically derived from it."
                ]
              },
              {
                "name": "CounterForReversePoolIdLookup",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "ClaimPermissions",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 280
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Map from a pool member account to their opted claim permission."
                ]
              }
            ]
          },
          "calls": {
            "type": 274
          },
          "events": {
            "type": 72
          },
          "constants": [
            {
              "name": "PalletId",
              "type": 638,
              "value": "0x70792f6e6f706c73",
              "docs": [
                " The nomination pool's pallet id."
              ]
            },
            {
              "name": "MaxPointsToBalance",
              "type": 2,
              "value": "0x0a",
              "docs": [
                " The maximum pool points-to-balance ratio that an `open` pool can have.",
                "",
                " This is important in the event slashing takes place and the pool's points-to-balance",
                " ratio becomes disproportional.",
                "",
                " Moreover, this relates to the `RewardCounter` type as well, as the arithmetic operations",
                " are a function of number of points, and by setting this value to e.g. 10, you ensure",
                " that the total number of points in the system are at most 10 times the total_issuance of",
                " the chain, in the absolute worse case.",
                "",
                " For a value of 10, the threshold would be a pool points-to-balance ratio of 10:1.",
                " Such a scenario would also be the equivalent of the pool being 90% slashed."
              ]
            },
            {
              "name": "MaxUnbonding",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum number of simultaneous unbonding chunks that can exist per member."
              ]
            }
          ],
          "errors": {
            "type": 639
          },
          "index": 29
        },
        {
          "name": "FastUnstake",
          "storage": {
            "prefix": "FastUnstake",
            "items": [
              {
                "name": "Head",
                "modifier": "Optional",
                "type": {
                  "plain": 641
                },
                "fallback": "0x00",
                "docs": [
                  " The current \"head of the queue\" being unstaked.",
                  "",
                  " The head in itself can be a batch of up to [`Config::BatchSize`] stakers."
                ]
              },
              {
                "name": "Queue",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 6
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The map of all accounts wishing to be unstaked.",
                  "",
                  " Keeps track of `AccountId` wishing to unstake and it's corresponding deposit."
                ]
              },
              {
                "name": "CounterForQueue",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "ErasToCheckPerBlock",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of eras to check per block.",
                  "",
                  " If set to 0, this pallet does absolutely nothing. Cannot be set to more than",
                  " [`Config::MaxErasToCheckPerBlock`].",
                  "",
                  " Based on the amount of weight available at [`Pallet::on_idle`], up to this many eras are",
                  " checked. The checking is represented by updating [`UnstakeRequest::checked`], which is",
                  " stored in [`Head`]."
                ]
              }
            ]
          },
          "calls": {
            "type": 281
          },
          "events": {
            "type": 79
          },
          "constants": [
            {
              "name": "Deposit",
              "type": 6,
              "value": "0x0010a5d4e80000000000000000000000",
              "docs": [
                " Deposit to take for unstaking, to make sure we're able to slash the it in order to cover",
                " the costs of resources on unsuccessful unstake."
              ]
            }
          ],
          "errors": {
            "type": 644
          },
          "index": 30
        },
        {
          "name": "ConvictionVoting",
          "storage": {
            "prefix": "ConvictionVoting",
            "items": [
              {
                "name": "VotingFor",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 645,
                    "value": 646
                  }
                },
                "fallback": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " All voting for a particular voter in a particular voting class. We store the balance for the",
                  " number of votes that we have recorded."
                ]
              },
              {
                "name": "ClassLocksFor",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 654
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The voting classes which have a non-zero lock requirement and the lock amounts which they",
                  " require. The actual amount locked on behalf of this pallet should always be the maximum of",
                  " this list."
                ]
              }
            ]
          },
          "calls": {
            "type": 282
          },
          "events": {
            "type": 81
          },
          "constants": [
            {
              "name": "MaxVotes",
              "type": 4,
              "value": "0x00020000",
              "docs": [
                " The maximum number of concurrent votes an account may have.",
                "",
                " Also used to compute weight, an overly large value can lead to extrinsics with large",
                " weight estimation: see `delegate` for instance."
              ]
            },
            {
              "name": "VoteLockingPeriod",
              "type": 4,
              "value": "0xc0890100",
              "docs": [
                " The minimum period of vote locking.",
                "",
                " It should be no shorter than enactment period to ensure that in the case of an approval,",
                " those successful voters are locked into the consequences that their votes entail."
              ]
            }
          ],
          "errors": {
            "type": 657
          },
          "index": 31
        },
        {
          "name": "Referenda",
          "storage": {
            "prefix": "Referenda",
            "items": [
              {
                "name": "ReferendumCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The next free referendum index, aka the number of referenda started so far."
                ]
              },
              {
                "name": "ReferendumInfoFor",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 658
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Information concerning any given referendum."
                ]
              },
              {
                "name": "TrackQueue",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 63,
                    "value": 666
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The sorted list of referenda ready to be decided but not yet being decided, ordered by",
                  " conviction-weighted approvals.",
                  "",
                  " This should be empty if `DecidingCount` is less than `TrackInfo::max_deciding`."
                ]
              },
              {
                "name": "DecidingCount",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 63,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of referenda being decided currently."
                ]
              },
              {
                "name": "MetadataOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 12
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The metadata is a general information concerning the referendum.",
                  " The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON",
                  " dump or IPFS hash of a JSON file.",
                  "",
                  " Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)",
                  " large preimages."
                ]
              }
            ]
          },
          "calls": {
            "type": 287
          },
          "events": {
            "type": 82
          },
          "constants": [
            {
              "name": "SubmissionDeposit",
              "type": 6,
              "value": "0x00ac23fc060000000000000000000000",
              "docs": [
                " The minimum amount to be used as a deposit for a public referendum proposal."
              ]
            },
            {
              "name": "MaxQueued",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " Maximum size of the referendum queue for a single track."
              ]
            },
            {
              "name": "UndecidingTimeout",
              "type": 4,
              "value": "0x80130300",
              "docs": [
                " The number of blocks after submission that a referendum must begin being decided by.",
                " Once this passes, then anyone may cancel the referendum."
              ]
            },
            {
              "name": "AlarmInterval",
              "type": 4,
              "value": "0x01000000",
              "docs": [
                " Quantization level for the referendum wakeup scheduler. A higher number will result in",
                " fewer storage reads/writes needed for smaller voters, but also result in delays to the",
                " automatic referendum status changes. Explicit servicing instructions are unaffected."
              ]
            },
            {
              "name": "Tracks",
              "type": 667,
              "value": "0x3c000010726f6f740100000000008a5d78456301000000000000000050000000c800000078000000320000000290d73e0d000000005743de13000000005443de13000000000000ca9a3b000000000065cd1d01004877686974656c69737465645f63616c6c6572640000000000c16ff286230000000000000000003c000000c8000000280000001e00000002ec972510000000007b573c170000000042392f1200000000020e00840000000000d6e61f010000000039627902000000000a00347374616b696e675f61646d696e0a0000000080e03779c31100000000000000000050000000c8000000500000001e00000000c94330240065cd1d00ca9a3b025d6f780000000000e82eed00000000008c6889ffffffffff0b00247472656173757265720a0000000080c6a47e8d0300000000000000000050000000c800000050000000320000000290d73e0d000000005743de13000000005443de13000000000000ca9a3b000000000065cd1d0c002c6c656173655f61646d696e0a0000000080e03779c31100000000000000000050000000c8000000500000001e00000000c94330240065cd1d00ca9a3b025d6f780000000000e82eed00000000008c6889ffffffffff0d004066656c6c6f77736869705f61646d696e0a0000000080e03779c31100000000000000000050000000c8000000500000001e00000000c94330240065cd1d00ca9a3b025d6f780000000000e82eed00000000008c6889ffffffffff0e003467656e6572616c5f61646d696e0a0000000080e03779c31100000000000000000050000000c8000000500000001e0000000290d73e0d000000005743de13000000005443de13000000000259a2f40200000000a3296b05000000002e6b4afdffffffff0f003461756374696f6e5f61646d696e0a0000000080e03779c31100000000000000000050000000c8000000500000001e0000000290d73e0d000000005743de13000000005443de13000000000259a2f40200000000a3296b05000000002e6b4afdffffffff1400507265666572656e64756d5f63616e63656c6c6572e80300000000c16ff28623000000000000000000500000008c000000500000001e00000000c94330240065cd1d00ca9a3b025d6f780000000000e82eed00000000008c6889ffffffffff1500447265666572656e64756d5f6b696c6c6572e80300000000c52ebca2b100000000000000000050000000c8000000500000001e00000000c94330240065cd1d00ca9a3b025d6f780000000000e82eed00000000008c6889ffffffffff1e0030736d616c6c5f746970706572c800000000ac23fc0600000000000000000000000a0000008c000000280000000a00000000499149150065cd1d00ca9a3b02f9ba1800000000002a4d3100000000006b59e7ffffffffff1f00286269675f7469707065726400000000b864d9450000000000000000000000280000008c000000780000001e00000000499149150065cd1d00ca9a3b02694f3f000000000035967d0000000000e534c1ffffffffff200034736d616c6c5f7370656e646572320000000030ef7dba020000000000000000000064000000c8000000640000003200000000c94330240065cd1d00ca9a3b025d6f780000000000e82eed00000000008c6889ffffffffff2100386d656469756d5f7370656e646572320000000060defb74050000000000000000000064000000c80000007800000032000000005b01f6300065cd1d00ca9a3b021161db0000000000bfd1aa010000000020972affffffffff22002c6269675f7370656e6465723200000000c0bcf7e90a0000000000000000000064000000c80000008c000000320000000000ca9a3b0065cd1d00ca9a3b02413cb00100000000755d34030000000045d165feffffffff",
              "docs": [
                " Information concerning the different referendum tracks."
              ]
            }
          ],
          "errors": {
            "type": 673
          },
          "index": 32
        },
        {
          "name": "Whitelist",
          "storage": {
            "prefix": "Whitelist",
            "items": [
              {
                "name": "WhitelistedCall",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 12,
                    "value": 51
                  }
                },
                "fallback": "0x00",
                "docs": []
              }
            ]
          },
          "calls": {
            "type": 290
          },
          "events": {
            "type": 433
          },
          "constants": [],
          "errors": {
            "type": 674
          },
          "index": 36
        },
        {
          "name": "Treasury",
          "storage": {
            "prefix": "Treasury",
            "items": [
              {
                "name": "ProposalCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of proposals that have been made."
                ]
              },
              {
                "name": "Proposals",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 675
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Proposals that have been made."
                ]
              },
              {
                "name": "Deactivated",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The amount which has been reported as inactive to Currency."
                ]
              },
              {
                "name": "Approvals",
                "modifier": "Default",
                "type": {
                  "plain": 676
                },
                "fallback": "0x00",
                "docs": [
                  " Proposal indices that have been approved but not yet awarded."
                ]
              },
              {
                "name": "SpendCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The count of spends that have been made."
                ]
              },
              {
                "name": "Spends",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 677
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Spends that have been approved and being processed."
                ]
              }
            ]
          },
          "calls": {
            "type": 291
          },
          "events": {
            "type": 438
          },
          "constants": [
            {
              "name": "ProposalBond",
              "type": 679,
              "value": "0x50c30000",
              "docs": [
                " Fraction of a proposal's value that should be bonded in order to place the proposal.",
                " An accepted proposal gets these back. A rejected proposal does not."
              ]
            },
            {
              "name": "ProposalBondMinimum",
              "type": 6,
              "value": "0x0040e59c301200000000000000000000",
              "docs": [
                " Minimum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "ProposalBondMaximum",
              "type": 680,
              "value": "0x010080c6a47e8d03000000000000000000",
              "docs": [
                " Maximum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "SpendPeriod",
              "type": 4,
              "value": "0x80510100",
              "docs": [
                " Period between successive spends."
              ]
            },
            {
              "name": "Burn",
              "type": 679,
              "value": "0xd0070000",
              "docs": [
                " Percentage of spare funds (if any) that are burnt per spend period."
              ]
            },
            {
              "name": "PalletId",
              "type": 638,
              "value": "0x70792f7472737279",
              "docs": [
                " The treasury's pallet id, used for deriving its sovereign account ID."
              ]
            },
            {
              "name": "MaxApprovals",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of approvals that can wait in the spending queue.",
                "",
                " NOTE: This parameter is also used within the Bounties Pallet extension if enabled."
              ]
            },
            {
              "name": "PayoutPeriod",
              "type": 4,
              "value": "0x80970600",
              "docs": [
                " The period during which an approved treasury spend has to be claimed."
              ]
            }
          ],
          "errors": {
            "type": 681
          },
          "index": 37
        },
        {
          "name": "ParachainsOrigin",
          "storage": null,
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 41
        },
        {
          "name": "Configuration",
          "storage": {
            "prefix": "Configuration",
            "items": [
              {
                "name": "ActiveConfig",
                "modifier": "Default",
                "type": {
                  "plain": 682
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001027000080b2e60e80c3c901809698000000000000000000000000000500000001000000010000000100000000000600000064000000010000000000000000000000000000000000000002000000020000000200000000",
                "docs": [
                  " The active configuration for the current session."
                ]
              },
              {
                "name": "PendingConfigs",
                "modifier": "Default",
                "type": {
                  "plain": 683
                },
                "fallback": "0x00",
                "docs": [
                  " Pending configuration changes.",
                  "",
                  " This is a list of configuration changes, each with a session index at which it should",
                  " be applied.",
                  "",
                  " The list is sorted ascending by session index. Also, this list can only contain at most",
                  " 2 items: for the next session and for the `scheduled_session`."
                ]
              },
              {
                "name": "BypassConsistencyCheck",
                "modifier": "Default",
                "type": {
                  "plain": 39
                },
                "fallback": "0x00",
                "docs": [
                  " If this is set, then the configuration setters will bypass the consistency checks. This",
                  " is meant to be used only as the last resort."
                ]
              }
            ]
          },
          "calls": {
            "type": 302
          },
          "events": null,
          "constants": [],
          "errors": {
            "type": 685
          },
          "index": 42
        },
        {
          "name": "ParasShared",
          "storage": {
            "prefix": "ParasShared",
            "items": [
              {
                "name": "CurrentSessionIndex",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The current session index."
                ]
              },
              {
                "name": "ActiveValidatorIndices",
                "modifier": "Default",
                "type": {
                  "plain": 686
                },
                "fallback": "0x00",
                "docs": [
                  " All the validators actively participating in parachain consensus.",
                  " Indices are into the broader validator set."
                ]
              },
              {
                "name": "ActiveValidatorKeys",
                "modifier": "Default",
                "type": {
                  "plain": 687
                },
                "fallback": "0x00",
                "docs": [
                  " The parachain attestation keys of the validators actively participating in parachain",
                  " consensus. This should be the same length as `ActiveValidatorIndices`."
                ]
              },
              {
                "name": "AllowedRelayParents",
                "modifier": "Default",
                "type": {
                  "plain": 688
                },
                "fallback": "0x0000000000",
                "docs": [
                  " All allowed relay-parents."
                ]
              }
            ]
          },
          "calls": {
            "type": 309
          },
          "events": null,
          "constants": [],
          "errors": null,
          "index": 43
        },
        {
          "name": "ParaInclusion",
          "storage": {
            "prefix": "ParaInclusion",
            "items": [
              {
                "name": "AvailabilityBitfields",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 318,
                    "value": 691
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The latest bitfield for each validator, referred to by their index in the validator set."
                ]
              },
              {
                "name": "PendingAvailability",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 692
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Candidates pending availability by `ParaId`."
                ]
              },
              {
                "name": "PendingAvailabilityCommitments",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 328
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The commitments of candidates pending availability, by `ParaId`."
                ]
              }
            ]
          },
          "calls": {
            "type": 310
          },
          "events": {
            "type": 439
          },
          "constants": [],
          "errors": {
            "type": 693
          },
          "index": 44
        },
        {
          "name": "ParaInherent",
          "storage": {
            "prefix": "ParaInherent",
            "items": [
              {
                "name": "Included",
                "modifier": "Optional",
                "type": {
                  "plain": 51
                },
                "fallback": "0x00",
                "docs": [
                  " Whether the paras inherent was included within this block.",
                  "",
                  " The `Option<()>` is effectively a `bool`, but it never hits storage in the `None` variant",
                  " due to the guarantees of FRAME's storage APIs.",
                  "",
                  " If this is `None` at the end of the block, we panic and render the block invalid."
                ]
              },
              {
                "name": "OnChainVotes",
                "modifier": "Optional",
                "type": {
                  "plain": 694
                },
                "fallback": "0x00",
                "docs": [
                  " Scraped on chain data for extracting resolved disputes as well as backing votes."
                ]
              }
            ]
          },
          "calls": {
            "type": 311
          },
          "events": null,
          "constants": [],
          "errors": {
            "type": 699
          },
          "index": 45
        },
        {
          "name": "ParaScheduler",
          "storage": {
            "prefix": "ParaScheduler",
            "items": [
              {
                "name": "ValidatorGroups",
                "modifier": "Default",
                "type": {
                  "plain": 700
                },
                "fallback": "0x00",
                "docs": [
                  " All the validator groups. One for each core. Indices are into `ActiveValidators` - not the",
                  " broader set of Polkadot validators, but instead just the subset used for parachains during",
                  " this session.",
                  "",
                  " Bound: The number of cores is the sum of the numbers of parachains and parathread",
                  " multiplexers. Reasonably, 100-1000. The dominant factor is the number of validators: safe",
                  " upper bound at 10k."
                ]
              },
              {
                "name": "AvailabilityCores",
                "modifier": "Default",
                "type": {
                  "plain": 701
                },
                "fallback": "0x00",
                "docs": [
                  " One entry for each availability core. Entries are `None` if the core is not currently",
                  " occupied. Can be temporarily `Some` if scheduled but not occupied.",
                  " The i'th parachain belongs to the i'th core, with the remaining cores all being",
                  " parathread-multiplexers.",
                  "",
                  " Bounded by the maximum of either of these two values:",
                  "   * The number of parachains and parathread multiplexers",
                  "   * The number of validators divided by `configuration.max_validators_per_core`."
                ]
              },
              {
                "name": "SessionStartBlock",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The block number where the session start occurred. Used to track how many group rotations",
                  " have occurred.",
                  "",
                  " Note that in the context of parachains modules the session change is signaled during",
                  " the block and enacted at the end of the block (at the finalization stage, to be exact).",
                  " Thus for all intents and purposes the effect of the session change is observed at the",
                  " block following the session change, block number of which we save in this storage value."
                ]
              },
              {
                "name": "ClaimQueue",
                "modifier": "Default",
                "type": {
                  "plain": 705
                },
                "fallback": "0x00",
                "docs": [
                  " One entry for each availability core. The `VecDeque` represents the assignments to be",
                  " scheduled on that core. `None` is used to signal to not schedule the next para of the core",
                  " as there is one currently being scheduled. Not using `None` here would overwrite the",
                  " `CoreState` in the runtime API. The value contained here will not be valid after the end of",
                  " a block. Runtime APIs should be used to determine scheduled cores/ for the upcoming block."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 46
        },
        {
          "name": "Paras",
          "storage": {
            "prefix": "Paras",
            "items": [
              {
                "name": "PvfActiveVoteMap",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 327,
                    "value": 710
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All currently active PVF pre-checking votes.",
                  "",
                  " Invariant:",
                  " - There are no PVF pre-checking votes that exists in list but not in the set and vice versa."
                ]
              },
              {
                "name": "PvfActiveVoteList",
                "modifier": "Default",
                "type": {
                  "plain": 714
                },
                "fallback": "0x00",
                "docs": [
                  " The list of all currently active PVF votes. Auxiliary to `PvfActiveVoteMap`."
                ]
              },
              {
                "name": "Parachains",
                "modifier": "Default",
                "type": {
                  "plain": 715
                },
                "fallback": "0x00",
                "docs": [
                  " All lease holding parachains. Ordered ascending by `ParaId`. On demand parachains are not",
                  " included.",
                  "",
                  " Consider using the [`ParachainsCache`] type of modifying."
                ]
              },
              {
                "name": "ParaLifecycles",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 716
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The current lifecycle of a all known Para IDs."
                ]
              },
              {
                "name": "Heads",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 335
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The head-data of every registered para."
                ]
              },
              {
                "name": "MostRecentContext",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The context (relay-chain block number) of the most recent parachain head."
                ]
              },
              {
                "name": "CurrentCodeHash",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 327
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The validation code hash of every live para.",
                  "",
                  " Corresponding code can be retrieved with [`CodeByHash`]."
                ]
              },
              {
                "name": "PastCodeHash",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 717,
                    "value": 327
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Actual past code hash, indicated by the para id as well as the block number at which it",
                  " became outdated.",
                  "",
                  " Corresponding code can be retrieved with [`CodeByHash`]."
                ]
              },
              {
                "name": "PastCodeMeta",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 718
                  }
                },
                "fallback": "0x0000",
                "docs": [
                  " Past code of parachains. The parachains themselves may not be registered anymore,",
                  " but we also keep their code on-chain for the same amount of time as outdated code",
                  " to keep it available for approval checkers."
                ]
              },
              {
                "name": "PastCodePruning",
                "modifier": "Default",
                "type": {
                  "plain": 721
                },
                "fallback": "0x00",
                "docs": [
                  " Which paras have past code that needs pruning and the relay-chain block at which the code",
                  " was replaced. Note that this is the actual height of the included block, not the expected",
                  " height at which the code upgrade would be applied, although they may be equal.",
                  " This is to ensure the entire acceptance period is covered, not an offset acceptance period",
                  " starting from the time at which the parachain perceives a code upgrade as having occurred.",
                  " Multiple entries for a single para are permitted. Ordered ascending by block number."
                ]
              },
              {
                "name": "FutureCodeUpgrades",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The block number at which the planned code change is expected for a para.",
                  " The change will be applied after the first parablock for this ID included which executes",
                  " in the context of a relay chain block with a number >= `expected_at`."
                ]
              },
              {
                "name": "FutureCodeHash",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 327
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The actual future code hash of a para.",
                  "",
                  " Corresponding code can be retrieved with [`CodeByHash`]."
                ]
              },
              {
                "name": "UpgradeGoAheadSignal",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 722
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " This is used by the relay-chain to communicate to a parachain a go-ahead with in the upgrade",
                  " procedure.",
                  "",
                  " This value is absent when there are no upgrades scheduled or during the time the relay chain",
                  " performs the checks. It is set at the first relay-chain block when the corresponding",
                  " parachain can switch its upgrade function. As soon as the parachain's block is included, the",
                  " value gets reset to `None`.",
                  "",
                  " NOTE that this field is used by parachains via merkle storage proofs, therefore changing",
                  " the format will require migration of parachains."
                ]
              },
              {
                "name": "UpgradeRestrictionSignal",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 723
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " This is used by the relay-chain to communicate that there are restrictions for performing",
                  " an upgrade for this parachain.",
                  "",
                  " This may be a because the parachain waits for the upgrade cooldown to expire. Another",
                  " potential use case is when we want to perform some maintenance (such as storage migration)",
                  " we could restrict upgrades to make the process simpler.",
                  "",
                  " NOTE that this field is used by parachains via merkle storage proofs, therefore changing",
                  " the format will require migration of parachains."
                ]
              },
              {
                "name": "UpgradeCooldowns",
                "modifier": "Default",
                "type": {
                  "plain": 721
                },
                "fallback": "0x00",
                "docs": [
                  " The list of parachains that are awaiting for their upgrade restriction to cooldown.",
                  "",
                  " Ordered ascending by block number."
                ]
              },
              {
                "name": "UpcomingUpgrades",
                "modifier": "Default",
                "type": {
                  "plain": 721
                },
                "fallback": "0x00",
                "docs": [
                  " The list of upcoming code upgrades. Each item is a pair of which para performs a code",
                  " upgrade and at which relay-chain block it is expected at.",
                  "",
                  " Ordered ascending by block number."
                ]
              },
              {
                "name": "ActionsQueue",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 715
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The actions to perform during the start of a specific session index."
                ]
              },
              {
                "name": "UpcomingParasGenesis",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 359
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Upcoming paras instantiation arguments.",
                  "",
                  " NOTE that after PVF pre-checking is enabled the para genesis arg will have it's code set",
                  " to empty. Instead, the code will be saved into the storage right away via `CodeByHash`."
                ]
              },
              {
                "name": "CodeByHashRefs",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 327,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of reference on the validation code in [`CodeByHash`] storage."
                ]
              },
              {
                "name": "CodeByHash",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 327,
                    "value": 334
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Validation code stored by its hash.",
                  "",
                  " This storage is consistent with [`FutureCodeHash`], [`CurrentCodeHash`] and",
                  " [`PastCodeHash`]."
                ]
              }
            ]
          },
          "calls": {
            "type": 346
          },
          "events": {
            "type": 443
          },
          "constants": [
            {
              "name": "UnsignedPriority",
              "type": 11,
              "value": "0xffffffffffffffff",
              "docs": []
            }
          ],
          "errors": {
            "type": 724
          },
          "index": 47
        },
        {
          "name": "Initializer",
          "storage": {
            "prefix": "Initializer",
            "items": [
              {
                "name": "HasInitialized",
                "modifier": "Optional",
                "type": {
                  "plain": 51
                },
                "fallback": "0x00",
                "docs": [
                  " Whether the parachains modules have been initialized within this block.",
                  "",
                  " Semantically a `bool`, but this guarantees it should never hit the trie,",
                  " as this is cleared in `on_finalize` and Frame optimizes `None` values to be empty values.",
                  "",
                  " As a `bool`, `set(false)` and `remove()` both lead to the next `get()` being false, but one",
                  " of them writes to the trie and one does not. This confusion makes `Option<()>` more suitable",
                  " for the semantics of this variable."
                ]
              },
              {
                "name": "BufferedSessionChanges",
                "modifier": "Default",
                "type": {
                  "plain": 725
                },
                "fallback": "0x00",
                "docs": [
                  " Buffered session changes along with the block number at which they should be applied.",
                  "",
                  " Typically this will be empty or one element long. Apart from that this item never hits",
                  " the storage.",
                  "",
                  " However this is a `Vec` regardless to handle various edge cases that may occur at runtime",
                  " upgrade boundaries or if governance intervenes."
                ]
              }
            ]
          },
          "calls": {
            "type": 348
          },
          "events": null,
          "constants": [],
          "errors": null,
          "index": 48
        },
        {
          "name": "Dmp",
          "storage": {
            "prefix": "Dmp",
            "items": [
              {
                "name": "DownwardMessageQueues",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 727
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The downward messages addressed for a certain para."
                ]
              },
              {
                "name": "DownwardMessageQueueHeads",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 12
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " A mapping that stores the downward message queue MQC head for each para.",
                  "",
                  " Each link in this chain has a form:",
                  " `(prev_head, B, H(M))`, where",
                  " - `prev_head`: is the previous head hash or zero if none.",
                  " - `B`: is the relay-chain block number in which a message was appended.",
                  " - `H(M)`: is the hash of the message being appended."
                ]
              },
              {
                "name": "DeliveryFeeFactor",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 427
                  }
                },
                "fallback": "0x000064a7b3b6e00d0000000000000000",
                "docs": [
                  " The factor to multiply the base delivery fee by."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 49
        },
        {
          "name": "Hrmp",
          "storage": {
            "prefix": "Hrmp",
            "items": [
              {
                "name": "HrmpOpenChannelRequests",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 350,
                    "value": 729
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The set of pending HRMP open channel requests.",
                  "",
                  " The set is accompanied by a list for iteration.",
                  "",
                  " Invariant:",
                  " - There are no channels that exists in list but not in the set and vice versa."
                ]
              },
              {
                "name": "HrmpOpenChannelRequestsList",
                "modifier": "Default",
                "type": {
                  "plain": 730
                },
                "fallback": "0x00",
                "docs": []
              },
              {
                "name": "HrmpOpenChannelRequestCount",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " This mapping tracks how many open channel requests are initiated by a given sender para.",
                  " Invariant: `HrmpOpenChannelRequests` should contain the same number of items that has",
                  " `(X, _)` as the number of `HrmpOpenChannelRequestCount` for `X`."
                ]
              },
              {
                "name": "HrmpAcceptedChannelRequestCount",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " This mapping tracks how many open channel requests were accepted by a given recipient para.",
                  " Invariant: `HrmpOpenChannelRequests` should contain the same number of items `(_, X)` with",
                  " `confirmed` set to true, as the number of `HrmpAcceptedChannelRequestCount` for `X`."
                ]
              },
              {
                "name": "HrmpCloseChannelRequests",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 350,
                    "value": 51
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A set of pending HRMP close channel requests that are going to be closed during the session",
                  " change. Used for checking if a given channel is registered for closure.",
                  "",
                  " The set is accompanied by a list for iteration.",
                  "",
                  " Invariant:",
                  " - There are no channels that exists in list but not in the set and vice versa."
                ]
              },
              {
                "name": "HrmpCloseChannelRequestsList",
                "modifier": "Default",
                "type": {
                  "plain": 730
                },
                "fallback": "0x00",
                "docs": []
              },
              {
                "name": "HrmpWatermarks",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The HRMP watermark associated with each para.",
                  " Invariant:",
                  " - each para `P` used here as a key should satisfy `Paras::is_valid_para(P)` within a",
                  "   session."
                ]
              },
              {
                "name": "HrmpChannels",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 350,
                    "value": 731
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " HRMP channel data associated with each para.",
                  " Invariant:",
                  " - each participant in the channel should satisfy `Paras::is_valid_para(P)` within a session."
                ]
              },
              {
                "name": "HrmpIngressChannelsIndex",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 715
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Ingress/egress indexes allow to find all the senders and receivers given the opposite side.",
                  " I.e.",
                  "",
                  " (a) ingress index allows to find all the senders for a given recipient.",
                  " (b) egress index allows to find all the recipients for a given sender.",
                  "",
                  " Invariants:",
                  " - for each ingress index entry for `P` each item `I` in the index should present in",
                  "   `HrmpChannels` as `(I, P)`.",
                  " - for each egress index entry for `P` each item `E` in the index should present in",
                  "   `HrmpChannels` as `(P, E)`.",
                  " - there should be no other dangling channels in `HrmpChannels`.",
                  " - the vectors are sorted."
                ]
              },
              {
                "name": "HrmpEgressChannelsIndex",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 715
                  }
                },
                "fallback": "0x00",
                "docs": []
              },
              {
                "name": "HrmpChannelContents",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 350,
                    "value": 732
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Storage for the messages for each channel.",
                  " Invariant: cannot be non-empty if the corresponding channel in `HrmpChannels` is `None`."
                ]
              },
              {
                "name": "HrmpChannelDigests",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 734
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Maintains a mapping that can be used to answer the question: What paras sent a message at",
                  " the given block number for a given receiver. Invariants:",
                  " - The inner `Vec<ParaId>` is never empty.",
                  " - The inner `Vec<ParaId>` cannot store two same `ParaId`.",
                  " - The outer vector is sorted ascending by block number and cannot store two items with the",
                  "   same block number."
                ]
              }
            ]
          },
          "calls": {
            "type": 349
          },
          "events": {
            "type": 444
          },
          "constants": [],
          "errors": {
            "type": 736
          },
          "index": 51
        },
        {
          "name": "ParaSessionInfo",
          "storage": {
            "prefix": "ParaSessionInfo",
            "items": [
              {
                "name": "AssignmentKeysUnsafe",
                "modifier": "Default",
                "type": {
                  "plain": 737
                },
                "fallback": "0x00",
                "docs": [
                  " Assignment keys for the current session.",
                  " Note that this API is private due to it being prone to 'off-by-one' at session boundaries.",
                  " When in doubt, use `Sessions` API instead."
                ]
              },
              {
                "name": "EarliestStoredSession",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The earliest session for which previous session info is stored."
                ]
              },
              {
                "name": "Sessions",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 4,
                    "value": 738
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Session information in a rolling window.",
                  " Should have an entry in range `EarliestStoredSession..=CurrentSessionIndex`.",
                  " Does not have any entries before the session index in the first session change notification."
                ]
              },
              {
                "name": "AccountKeys",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 4,
                    "value": 107
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The validator account keys of the validators actively participating in parachain consensus."
                ]
              },
              {
                "name": "SessionExecutorParams",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 4,
                    "value": 304
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Executor parameter set for a given session index"
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 52
        },
        {
          "name": "ParasDisputes",
          "storage": {
            "prefix": "ParasDisputes",
            "items": [
              {
                "name": "LastPrunedSession",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " The last pruned session, if any. All data stored by this module",
                  " references sessions."
                ]
              },
              {
                "name": "Disputes",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 742,
                    "value": 743
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All ongoing or concluded disputes for the last several sessions."
                ]
              },
              {
                "name": "BackersOnDisputes",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 742,
                    "value": 744
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Backing votes stored for each dispute.",
                  " This storage is used for slashing."
                ]
              },
              {
                "name": "Included",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 742,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All included blocks on the chain, as well as the block number in this chain that",
                  " should be reverted back to if the candidate is disputed and determined to be invalid."
                ]
              },
              {
                "name": "Frozen",
                "modifier": "Default",
                "type": {
                  "plain": 272
                },
                "fallback": "0x00",
                "docs": [
                  " Whether the chain is frozen. Starts as `None`. When this is `Some`,",
                  " the chain will not accept any new parachain blocks for backing or inclusion,",
                  " and its value indicates the last valid block number in the chain.",
                  " It can only be set back to `None` by governance intervention."
                ]
              }
            ]
          },
          "calls": {
            "type": 351
          },
          "events": {
            "type": 445
          },
          "constants": [],
          "errors": {
            "type": 745
          },
          "index": 53
        },
        {
          "name": "ParasSlashing",
          "storage": {
            "prefix": "ParasSlashing",
            "items": [
              {
                "name": "UnappliedSlashes",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 742,
                    "value": 746
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Validators pending dispute slashes."
                ]
              },
              {
                "name": "ValidatorSetCounts",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " `ValidatorSetCount` per session."
                ]
              }
            ]
          },
          "calls": {
            "type": 352
          },
          "events": null,
          "constants": [],
          "errors": {
            "type": 750
          },
          "index": 54
        },
        {
          "name": "ParaAssignmentProvider",
          "storage": {
            "prefix": "ParaAssignmentProvider",
            "items": []
          },
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 55
        },
        {
          "name": "Registrar",
          "storage": {
            "prefix": "Registrar",
            "items": [
              {
                "name": "PendingSwap",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 152
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Pending swap operations."
                ]
              },
              {
                "name": "Paras",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 751
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Amount held on deposit for each para and the original depositor.",
                  "",
                  " The given account ID is responsible for registering the code and initial head data, but may",
                  " only do so if it isn't yet registered. (After that, it's up to governance to do so.)"
                ]
              },
              {
                "name": "NextFreeParaId",
                "modifier": "Default",
                "type": {
                  "plain": 152
                },
                "fallback": "0x00000000",
                "docs": [
                  " The next free `ParaId`."
                ]
              }
            ]
          },
          "calls": {
            "type": 356
          },
          "events": {
            "type": 448
          },
          "constants": [
            {
              "name": "ParaDeposit",
              "type": 6,
              "value": "0x0040e59c301200000000000000000000",
              "docs": [
                " The deposit to be paid to run a on-demand parachain.",
                " This should include the cost for storing the genesis head and validation code."
              ]
            },
            {
              "name": "DataDepositPerByte",
              "type": 6,
              "value": "0x80f0fa02000000000000000000000000",
              "docs": [
                " The deposit to be paid per byte stored on chain."
              ]
            }
          ],
          "errors": {
            "type": 753
          },
          "index": 60
        },
        {
          "name": "Slots",
          "storage": {
            "prefix": "Slots",
            "items": [
              {
                "name": "Leases",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 754
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Amounts held on deposit for each (possibly future) leased parachain.",
                  "",
                  " The actual amount locked on its behalf by any account at any time is the maximum of the",
                  " second values of the items in this list whose first value is the account.",
                  "",
                  " The first item in the list is the amount locked for the current Lease Period. Following",
                  " items are for the subsequent lease periods.",
                  "",
                  " The default value (an empty list) implies that the parachain no longer exists (or never",
                  " existed) as far as this pallet is concerned.",
                  "",
                  " If a parachain doesn't exist *yet* but is scheduled to exist in the future, then it",
                  " will be left-padded with one or more `None`s to denote the fact that nothing is held on",
                  " deposit for the non-existent chain currently, but is held at some point in the future.",
                  "",
                  " It is illegal for a `None` value to trail in the list."
                ]
              }
            ]
          },
          "calls": {
            "type": 357
          },
          "events": {
            "type": 449
          },
          "constants": [
            {
              "name": "LeasePeriod",
              "type": 4,
              "value": "0x00270600",
              "docs": [
                " The number of blocks over which a single period lasts."
              ]
            },
            {
              "name": "LeaseOffset",
              "type": 4,
              "value": "0x00000000",
              "docs": [
                " The number of blocks to offset each lease period by."
              ]
            }
          ],
          "errors": {
            "type": 755
          },
          "index": 61
        },
        {
          "name": "ParasSudoWrapper",
          "storage": null,
          "calls": {
            "type": 358
          },
          "events": null,
          "constants": [],
          "errors": {
            "type": 756
          },
          "index": 62
        },
        {
          "name": "Auctions",
          "storage": {
            "prefix": "Auctions",
            "items": [
              {
                "name": "AuctionCounter",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of auctions started so far."
                ]
              },
              {
                "name": "AuctionInfo",
                "modifier": "Optional",
                "type": {
                  "plain": 56
                },
                "fallback": "0x00",
                "docs": [
                  " Information relating to the current auction, if there is one.",
                  "",
                  " The first item in the tuple is the lease period index that the first of the four",
                  " contiguous lease periods on auction is for. The second is the block number when the",
                  " auction will \"begin to end\", i.e. the first block of the Ending Period of the auction."
                ]
              },
              {
                "name": "ReservedAmounts",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 757,
                    "value": 6
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Amounts currently reserved in the accounts of the bidders currently winning",
                  " (sub-)ranges."
                ]
              },
              {
                "name": "Winning",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 758
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The winning bids for each of the 10 ranges at each sample in the final Ending Period of",
                  " the current auction. The map's key is the 0-based index into the Sample Size. The",
                  " first sample of the ending period is 0; the last is `Sample Size - 1`."
                ]
              }
            ]
          },
          "calls": {
            "type": 404
          },
          "events": {
            "type": 450
          },
          "constants": [
            {
              "name": "EndingPeriod",
              "type": 4,
              "value": "0x40190100",
              "docs": [
                " The number of blocks over which an auction may be retroactively ended."
              ]
            },
            {
              "name": "SampleLength",
              "type": 4,
              "value": "0x14000000",
              "docs": [
                " The length of each sample to take during the ending period.",
                "",
                " `EndingPeriod` / `SampleLength` = Total # of Samples"
              ]
            },
            {
              "name": "SlotRangeCount",
              "type": 4,
              "value": "0x24000000",
              "docs": []
            },
            {
              "name": "LeasePeriodsPerSlot",
              "type": 4,
              "value": "0x08000000",
              "docs": []
            }
          ],
          "errors": {
            "type": 761
          },
          "index": 63
        },
        {
          "name": "Crowdloan",
          "storage": {
            "prefix": "Crowdloan",
            "items": [
              {
                "name": "Funds",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 762
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Info on all of the funds."
                ]
              },
              {
                "name": "NewRaise",
                "modifier": "Default",
                "type": {
                  "plain": 715
                },
                "fallback": "0x00",
                "docs": [
                  " The funds that have had additional contributions during the last block. This is used",
                  " in order to determine which funds should submit new or updated bids."
                ]
              },
              {
                "name": "EndingsCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of auctions that have entered into their ending period so far."
                ]
              },
              {
                "name": "NextFundIndex",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Tracker for the next available fund index"
                ]
              }
            ]
          },
          "calls": {
            "type": 406
          },
          "events": {
            "type": 451
          },
          "constants": [
            {
              "name": "PalletId",
              "type": 638,
              "value": "0x70792f6366756e64",
              "docs": [
                " `PalletId` for the crowdloan pallet. An appropriate value could be",
                " `PalletId(*b\"py/cfund\")`"
              ]
            },
            {
              "name": "MinContribution",
              "type": 6,
              "value": "0x0010a5d4e80000000000000000000000",
              "docs": [
                " The minimum amount that may be contributed into a crowdloan. Should almost certainly be",
                " at least `ExistentialDeposit`."
              ]
            },
            {
              "name": "RemoveKeysLimit",
              "type": 4,
              "value": "0xf4010000",
              "docs": [
                " Max number of storage keys to remove per extrinsic call."
              ]
            }
          ],
          "errors": {
            "type": 764
          },
          "index": 64
        },
        {
          "name": "AssignedSlots",
          "storage": {
            "prefix": "AssignedSlots",
            "items": [
              {
                "name": "PermanentSlots",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 56
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Assigned permanent slots, with their start lease period, and duration."
                ]
              },
              {
                "name": "PermanentSlotCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of assigned (and active) permanent slots."
                ]
              },
              {
                "name": "TemporarySlots",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 152,
                    "value": 765
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Assigned temporary slots."
                ]
              },
              {
                "name": "TemporarySlotCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of assigned temporary slots."
                ]
              },
              {
                "name": "ActiveTemporarySlotCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of active temporary slots in current slot lease period."
                ]
              },
              {
                "name": "MaxTemporarySlots",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "  The max number of temporary slots that can be assigned."
                ]
              },
              {
                "name": "MaxPermanentSlots",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The max number of permanent slots that can be assigned."
                ]
              }
            ]
          },
          "calls": {
            "type": 411
          },
          "events": {
            "type": 452
          },
          "constants": [
            {
              "name": "PermanentSlotLeasePeriodLength",
              "type": 4,
              "value": "0x1a000000",
              "docs": [
                " The number of lease periods a permanent parachain slot lasts."
              ]
            },
            {
              "name": "TemporarySlotLeasePeriodLength",
              "type": 4,
              "value": "0x01000000",
              "docs": [
                " The number of lease periods a temporary parachain slot lasts."
              ]
            },
            {
              "name": "MaxTemporarySlotPerLeasePeriod",
              "type": 4,
              "value": "0x05000000",
              "docs": [
                " The max number of temporary slots to be scheduled per lease periods."
              ]
            }
          ],
          "errors": {
            "type": 766
          },
          "index": 65
        },
        {
          "name": "XcmPallet",
          "storage": {
            "prefix": "XcmPallet",
            "items": [
              {
                "name": "QueryCounter",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The latest available query index."
                ]
              },
              {
                "name": "Queries",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 11,
                    "value": 767
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The ongoing queries."
                ]
              },
              {
                "name": "AssetTraps",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " The existing asset traps.",
                  "",
                  " Key is the blake2 256 hash of (origin, versioned `MultiAssets`) pair. Value is the number of",
                  " times this pair has been trapped (usually just 1 if it exists at all)."
                ]
              },
              {
                "name": "SafeXcmVersion",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Default version to encode XCM when latest version of destination is unknown. If `None`,",
                  " then the destinations whose XCM version is unknown are considered unreachable."
                ]
              },
              {
                "name": "SupportedVersion",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 772,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The Latest versions that we know various locations support."
                ]
              },
              {
                "name": "VersionNotifiers",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 772,
                    "value": 11
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All locations that we have requested version notifications from."
                ]
              },
              {
                "name": "VersionNotifyTargets",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 772,
                    "value": 773
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The target locations that are subscribed to our version changes, as well as the most recent",
                  " of our versions we informed them of."
                ]
              },
              {
                "name": "VersionDiscoveryQueue",
                "modifier": "Default",
                "type": {
                  "plain": 774
                },
                "fallback": "0x00",
                "docs": [
                  " Destinations whose latest XCM version we would like to know. Duplicates not allowed, and",
                  " the `u32` counter is the number of times that a send to the destination has been attempted,",
                  " which is used as a prioritization."
                ]
              },
              {
                "name": "CurrentMigration",
                "modifier": "Optional",
                "type": {
                  "plain": 777
                },
                "fallback": "0x00",
                "docs": [
                  " The current migration's stage, if any."
                ]
              },
              {
                "name": "RemoteLockedFungibles",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 779,
                    "value": 781
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Fungible assets which we know are locked on a remote chain."
                ]
              },
              {
                "name": "LockedFungibles",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 785
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Fungible assets which we know are locked on this chain."
                ]
              },
              {
                "name": "XcmExecutionSuspended",
                "modifier": "Default",
                "type": {
                  "plain": 39
                },
                "fallback": "0x00",
                "docs": [
                  " Global suspension state of the XCM executor."
                ]
              }
            ]
          },
          "calls": {
            "type": 413
          },
          "events": {
            "type": 453
          },
          "constants": [],
          "errors": {
            "type": 788
          },
          "index": 99
        },
        {
          "name": "MessageQueue",
          "storage": {
            "prefix": "MessageQueue",
            "items": [
              {
                "name": "BookStateFor",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 424,
                    "value": 789
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " The index of the first and last (non-empty) pages."
                ]
              },
              {
                "name": "ServiceHead",
                "modifier": "Optional",
                "type": {
                  "plain": 424
                },
                "fallback": "0x00",
                "docs": [
                  " The origin at which we should begin servicing."
                ]
              },
              {
                "name": "Pages",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 792,
                    "value": 793
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The map of page indices to pages."
                ]
              }
            ]
          },
          "calls": {
            "type": 423
          },
          "events": {
            "type": 455
          },
          "constants": [
            {
              "name": "HeapSize",
              "type": 4,
              "value": "0x00000200",
              "docs": [
                " The size of the page; this implies the maximum message size which can be sent.",
                "",
                " A good value depends on the expected message sizes, their weights, the weight that is",
                " available for processing them and the maximal needed message size. The maximal message",
                " size is slightly lower than this as defined by [`MaxMessageLenOf`]."
              ]
            },
            {
              "name": "MaxStale",
              "type": 4,
              "value": "0x30000000",
              "docs": [
                " The maximum number of stale pages (i.e. of overweight messages) allowed before culling",
                " can happen. Once there are more stale pages than this, then historical pages may be",
                " dropped, even if they contain unprocessed overweight messages."
              ]
            },
            {
              "name": "ServiceWeight",
              "type": 436,
              "value": "0x010700a0db215d133333333333333333",
              "docs": [
                " The amount of weight (if any) which should be provided to the message queue for",
                " servicing enqueued items.",
                "",
                " This may be legitimately `None` in the case that you will call",
                " `ServiceQueues::service_queues` manually."
              ]
            }
          ],
          "errors": {
            "type": 795
          },
          "index": 100
        },
        {
          "name": "AssetRate",
          "storage": {
            "prefix": "AssetRate",
            "items": [
              {
                "name": "ConversionRateToNative",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 292,
                    "value": 427
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Maps an asset to its fixed point representation in the native balance.",
                  "",
                  " E.g. `native_amount = asset_amount * ConversionRateToNative::<T>::get(asset_kind)`"
                ]
              }
            ]
          },
          "calls": {
            "type": 426
          },
          "events": {
            "type": 457
          },
          "constants": [],
          "errors": {
            "type": 796
          },
          "index": 101
        },
        {
          "name": "RootTesting",
          "storage": {
            "prefix": "RootTesting",
            "items": []
          },
          "calls": {
            "type": 428
          },
          "events": {
            "type": 458
          },
          "constants": [],
          "errors": null,
          "index": 102
        },
        {
          "name": "IdentityMigrator",
          "storage": null,
          "calls": {
            "type": 429
          },
          "events": {
            "type": 459
          },
          "constants": [],
          "errors": null,
          "index": 248
        }
      ],
      "extrinsic": {
        "type": 797,
        "version": 4,
        "signedExtensions": [
          {
            "identifier": "CheckNonZeroSender",
            "type": 799,
            "additionalSigned": 51
          },
          {
            "identifier": "CheckSpecVersion",
            "type": 800,
            "additionalSigned": 4
          },
          {
            "identifier": "CheckTxVersion",
            "type": 801,
            "additionalSigned": 4
          },
          {
            "identifier": "CheckGenesis",
            "type": 802,
            "additionalSigned": 12
          },
          {
            "identifier": "CheckMortality",
            "type": 803,
            "additionalSigned": 12
          },
          {
            "identifier": "CheckNonce",
            "type": 805,
            "additionalSigned": 51
          },
          {
            "identifier": "CheckWeight",
            "type": 806,
            "additionalSigned": 51
          },
          {
            "identifier": "ChargeTransactionPayment",
            "type": 807,
            "additionalSigned": 51
          }
        ]
      },
      "type": 808
    }
  }
}